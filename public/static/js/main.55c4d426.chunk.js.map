{"version":3,"sources":["services/http_operations.js","common/localizations/localization_it.js","common/localizations/localization_en.js","services/validations.js","config.js","common/locale.ts","services/userRolesManagement.js","components/languageSelector/languageSelector.tsx","components/authPage/authPage.comp.jsx","components/homePage/homePage.tsx","components/notFoundPage/notFoundPage.tsx","services/misc_functions.js","components/navigation/navigation.comp.jsx","components/actionsManager/actionsManager.jsx","components/contentTable/contentTable.jsx","components/page/page.jsx","components/profilePage/profilePage.jsx","components/unauthorizedPage/unauthorizedPage.tsx","context.jsx","components/notificationBar/notificationBar.jsx","components/horizontalNavigationBar/horizontalNavigationBar.jsx","services/operation_tool_services.js","components/formManager/formManager.jsx","services/objects_manipulation.js","components/editContentPage/editContentPage.jsx","components/formFileComp/formFile.jsx","components/addPage/addPage.jsx","components/importExportValues/importExportValues.jsx","components/addExperimentPage/addExperimentPage.jsx","components/addMeasurementsPage/addMeasurementsPage.jsx","components/OperationToolPages/updateSteps/updateHistoryFileForm.jsx","components/OperationToolPages/updateSteps/updateHistoryForm.jsx","components/OperationToolPages/updateSteps/updateHistory.jsx","components/OperationToolPages/download/downloadExperiment.jsx","components/OperationToolPages/removeSteps/removeSteps.jsx","App.tsx","index.js"],"names":["api_url","localization_it","username","password","tenant","keep_logged","select","language","welcome","role","session_expire_in","resources","notifications","file_content","preview","configuration","clear_all","enter","username_suggestion","password_suggestion","tenant_suggestion","add_tenant","welcome_hp","left_bar_descr_hp","right_bar_descr_hp","session_expire_info_hp","github_page_hp","github_issue_page_hp","profile_page_desc","pass_change_confirm","pass_not_match","old_pass_empty","old_pass_wrong","pass_not_null","password_changed","oh_no","broken_link","submit","cancel","login","logout","repeat","close","import","export","login_error","unauthorised_user","session_expired","no_file","duplicate_error","error_imported_file","localization_en","axios","require","default","https","instance","create","httpsAgent","Agent","notificationManager","PushNotification","obj","RemoveNotification","id","ClearNotifications","saveToken","body","options","headers","url_string","Promise","resolve","reject","post","then","response","localStorage","setItem","data","token","token_expiration_time","user","type","Date","getTime","toString","catch","error","refreshToken","Authorization","GetToken","put","post_file_generic","resource_type","formData","additionalHeader","undefined","console","log","tempH","Object","entries","forEach","k","v","name","time","toTimeString","msg","post_generic","put_generic","padStart","length","JSON","stringify","message","delete_generic","delete","statusCode","get_generic","qs","url","filter","concat","limit","page","json","get","docs","totalDocs","totalPages","pagingCounter","hasPrevPage","hasNextPage","prevPage","nextPage","get_one_generic","getItem","alwaysTrue","base_api_url","website_name","languages","layout","operationPages","pages","aliasPages","_actions","restrictionPages","pageActions","viewFields","editFields","_id","description","state","NaN","startDate","endDate","manager","protocol","place","metadata","value","tags","addFields","organization","address","email","phone","admin_username","admin_password","passwordhash","read","update","actions","entity","crud","topics","fields","editFieldsSpecifier","_type","policy","addTypes","fetchedPageTypes","status","field","visibility","fetchedPageData","guidelines","locale","tkn","navigator","substring","step","roleCache","SetRoleDefinition","canDo","userRole","resource","actionCRUD","tmp","canDoDeprecated","parse","entityDef","el","LanguageSelector","setSessionLanguage","window","location","reload","includes","Button","variant","onClick","userRef","React","createRef","pswRef","tenantRef","AuthPage","useState","setMsg","e","preventDefault","current","psw","replace","details","className","Form","onSubmit","Group","controlId","Label","Control","ref","placeholder","style","color","to","size","title","width","height","marginRight","opacity","HomePage","useEffect","href","target","rel","NotFoundPage","isDefault","isNaN","Array","isArray","def","elem","constructor","nonDefaultLength","removeDefaultElements","entr","i","j","splice","subEntr","areEqual","obj1","obj2","k1","keys","k2","values","Capitalize","s","toUpperCase","slice","FormatDate","dt","replaceAll","fontawesome","library","add","faTimes","faBars","faUserTie","faUserGraduate","faUserCog","faUserTag","faUser","faCheck","intervalRef","loginTime","remainingSeconds","duration","Navigation","isOpened","setIsOpened","usr","rl","tn","CalcEnding","t0","remainingSec","retryLoginTime","parseInt","now","exp","endsWith","DurationToMilliSeconds","clearInterval","setInterval","clear","paddingLeft","paddingBottom","document","Fragment","map","navData","isActive","ActionContent","props","toShow","resType","subK","row","f","UnrollView","item","Accordion","defaultActiveKey","Children","toArray","key","Item","eventKey","Header","Body","some","single","Table","responsive","striped","bordered","hover","join","toLowerCase","ActionManager","res","setRes","viewPopover","Popover","minWidth","test","userAgent","as","action","OverlayTrigger","trigger","placement","overlay","rootClose","takeSingle","confirm","removeSingle","ContentTable","header","index","faEye","faPencilAlt","faCopy","faPlusCircle","Page","params","useParams","useSearchParams","searchParams","setSearchParams","setResource","setHeader","set_Actions","pageNum","setPageNum","pageLimit","setPageLimit","hasNext","setHasNext","hasPrev","setHasPrev","setPrevPage","setNextPage","setTotalPages","fetchData","num","RenderPagination","prevEllipsis","nextEllipsis","display","Pagination","alignSelf","marginLeft","First","disabled","Prev","Ellipsis","Next","Last","find","r","ProfilePage","setUsername","setRole","setTenant","oldPassword","setOldPassword","setPassword","passwordConfirm","setPasswordConfirm","submitPassword","Container","fluid","Row","Col","xs","onChange","Text","muted","UnauthorizedPage","AppContext","createContext","oldNotifications","NotificationBar","show","setShow","highlight","setHighlight","layoutRef","useRef","myNotifications","useContext","handleClose","setTimeout","errorNot","textDecoration","Badge","pill","bg","Offcanvas","backgroundColor","onHide","scroll","backdrop","keyboard","Title","ToastContainer","notification","Toast","animation","onClose","src","alt","HorizontalNavigationBar","padding","justifyContent","alignItems","logsManager","PushLog","RemoveLog","ClearLogs","postHistoryFile","file","ovd","csvSep","arrSep","floatSep","filename","expName","split","FormData","append","report","success","ignored","overridden","postHistoryStep","history","downloadHistory","experiment_id","compress","fileName","getHistoryCSV","blob","Blob","saveAs","File","resource_path","config","method","deleteHistorySteps","selected","toDelete","remove","FormManager","myFetched","context","fetched","disabledFields","functionalFields","submitFunction","handleChangesCallback","arrayDeleteCallback","types","val","borderBottomStyle","borderBottomWidth","marginBottom","sm","borderRightStyle","borderRightWidth","Select","SelectFormRow","Check","checked","md","ArrayBooleanFormRow","Math","max","Autocomplete","newValue","renderInput","TextField","label","ArrayStringFormRow","idx","_k","_v","ArrayObjectFormRow","NumericFormRow","alias","FetchedFormRow","BooleanFormRow","StringFormRow","ObjectFormRow","backFunction","cloneDeep","sortObject","template","sortingKeys","ob","indexOf","sort","a","b","reduce","accumulator","maintainEmptyElements","original","fieldSpecifier","copy","maintainEmptyElement","path","tmpPtr","fieldSpecifierCpy","tmpPath","element","nonDefLen","len","push","EditContentPage","setOriginal","navigate","useNavigate","setValues","deleted","setDisabledFields","UpdateData","tmpValues","evaluateSpecifiers","_key","specsEntries","resp","fst","tmpOrig","toSend","origArr","indexes","removed","alert","tmpVals","valuesPtr","lastIndexNumber","elements","minDel","Infinity","FormFile","setContentHeader","setContentPlain","setContentBody","setFile","contentBody","contentPlain","contentHeader","select_file","accept","files","fileReader","FileReader","onloadend","content","result","regex","RegExp","splitted","readAsText","overflow","h","resize","cols","rows","readOnly","AddPage","postType","setPostType","isError","setIsError","fetchSingle","back","postBody","statusText","det","postFile","Nav","justify","onSelect","Link","borderRadius","borderStyle","borderColor","borderWidth","margin","ignoreAdd","ImportExportValues","setContent","importValues","_content","importMsg","paddingTop","AddExperimentPage","setImportMsg","protocols","setProtocols","fetchDataDuplicate","tmpDisabled","handleProtocolChange","selectedProtocol","importedValues","imported","sorted","AddMeasurementsPage","samples","setSamples","items","setItems","formValues","setFormValues","features","setFeatures","feature","setFeature","handleFeatureChange","selectedFeature","addSample","tmpSample","dimension","enumValues","range","tmpSamples","sample","sampl","formValuesPtr","UpdateHistoryFileForm","postHistory","arraySepRef","floatSepRef","setCsvSep","ovdRef","setCsvHeader","setCsvContent","csvContent","csvHeader","_file","experiments","handleExperimentChange","handleChanges","updateHistory","csvSepRef","UpdateHistoryPage","myLogs","logs","setNow","operationindex","setOperationIndex","setExperiments","experiment","setExperiment","getExperiments","arraySep","prev","postStep","ex","expProtocol","_values","ProgressBar","l","reverse","experimentSelectRef","compressRef","DownloadHistoryPage","downloadHistoryHandler","expIndex","selectedIndex","downloadZip","downloadDataHandler","stepsStringRef","RemoveStepsPage","steps","setSteps","experimentIndex","deleteStepsHandler","toRemove","newSteps","stepsString","interval","begin","end","_steps","App","setNotifications","setLogs","setTypes","setData","origin","notificationManagement","fetchTypes","fetchedManagement","textarea","getElementById","scrollTop","scrollHeight","logsManagement","Provider","paddingRight","ReactDOM","render","StrictMode"],"mappings":"mbAMWA,E,+GCiEIC,EAvES,CACtBC,SAAU,cACVC,SAAU,WACVC,OAAQ,iBACRC,YAAa,mBACbC,OAAQ,YACRC,SAAU,SACVC,QAAS,aACTC,KAAM,QACNC,kBAAmB,4BACnBC,UAAW,UACXC,cAAe,YACfC,aAAc,qBACdC,QAAS,YACTC,cAAe,iBAEfC,UAAW,iBAGXC,MAAO,YACPC,oBAAqB,2BACrBC,oBAAqB,wBACrBC,kBAAmB,kCACnBC,WAAY,0BAGZC,WAAY,oDACZC,kBACE,6GACFC,mBACE,mHACFC,uBAAuB,GACvBC,eAAgB,6BAChBC,qBAAsB,yBAGtBC,kBACE,sFACFC,oBAAqB,8CACrBC,eACE,6EACFC,eAAgB,2CAChBC,eAAgB,qCAChBC,cAAe,sCACfC,iBAAkB,oBAGlBC,MAAO,SACPC,YACE,kEAGFC,OAAQ,QACRC,OAAQ,UACRC,MAAO,SACPC,OAAQ,OACRC,OAAQ,SACRC,MAAO,SACPC,OAAQ,UACRC,OAAQ,UAGRC,YAAa,gBACbC,kBAAmB,+CACnBC,gBAAiB,mBACjBC,QAAS,kCACTC,gBAAiB,oDACjBC,oBACE,sECCWC,EArES,CACtBjD,SAAU,WACVC,SAAU,WACVC,OAAQ,SACRC,YAAa,iBAEbC,OAAQ,SACRC,SAAU,WACVC,QAAS,eACTC,KAAM,OACNC,kBAAmB,0BACnBC,UAAW,YACXC,cAAe,gBACfC,aAAc,eACdC,QAAS,UACTC,cAAe,gBAEfC,UAAW,YAEXC,MAAO,QACPC,oBAAqB,uBACrBC,oBAAqB,uBACrBC,kBAAmB,qBACnBC,WAAY,aAGZC,WAAY,2CACZC,kBACE,iFACFC,mBACE,kFACFC,uBAAwB,GACxBC,eAAgB,GAChBC,qBAAsB,wBAGtBC,kBACE,sEACFC,oBAAqB,4CACrBC,eACE,gFACFC,eAAgB,6BAChBC,eAAgB,4BAChBC,cAAe,2BACfC,iBAAkB,mBAGlBC,MAAO,SACPC,YAAa,mDAGbC,OAAQ,SACRC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,OAAQ,SAGRC,YAAa,eACbC,kBAAmB,uCACnBC,gBAAiB,kBACjBC,QAAS,wBACTC,gBAAiB,gDACjBC,oBAAqB,0DFhEjBE,EAAQC,EAAQ,KAASC,QAEzBC,EAAQF,EAAQ,KAITG,EAAWJ,EAAMK,OAAO,CACnCC,WAAY,IAAIH,EAAMI,MAAM,CAE1B,KAIOC,EAAsB,CAC/BC,iBAAkB,SAACC,GAAS,EAC5BC,mBAAoB,SAACC,GAAQ,EAC7BC,mBAAoB,WAAO,GAUtB,SAAS1B,EAAMrC,EAAUC,EAAUC,GAA2B,IAAnB8D,IAAS,yDACnDC,EAAO,CACXjE,SAAS,GAAD,OAAKA,GACbC,SAAS,GAAD,OAAKA,GACbC,OAAO,GAAD,OAAKA,IAEPgE,EAAU,CACdC,QAAS,CACP,eAAgB,mBAChB,gBAAiB,aAKfC,EAAatE,EAAU,SAE7B,OAAO,IAAIuE,SAAQ,SAACC,EAASC,GAC3BjB,EACGkB,KAAKJ,EAAYH,EAAMC,GACvBO,MAAK,SAACC,IACa,IAAdV,IACFW,aAAaC,QAAQ,QAASF,EAASG,KAAKC,OAC5CH,aAAaC,QACX,wBACAF,EAASG,KAAKE,uBAEhBJ,aAAaC,QAAQ,WAAYF,EAASG,KAAKG,KAAKhF,UACpD2E,aAAaC,QAAQ,YAAaF,EAASG,KAAKG,KAAKC,MACrDN,aAAaC,QAAQ,cAAe1E,GACpCyE,aAAaC,QAAQ,cAAc,IAAIM,MAAOC,UAAUC,aAE1Dd,EAAQI,EACV,IACCW,OAAM,SAACC,GACNf,EAAOe,EACT,GACJ,GACF,CAGO,SAASC,IACd,IAAMrB,EAAU,CACdC,QAAS,CACP,eAAgB,mBAChB,gBAAiB,WACjBqB,cAAeC,MAIbrB,EAAatE,EAAU,SAE7B,OAAO,IAAIuE,SAAQ,SAACC,EAASC,GAC3BjB,EACGoC,IAAItB,EAAY,CAAC,EAAGF,GACpBO,MAAK,SAACC,GACLC,aAAaC,QAAQ,QAASF,EAASG,KAAKC,OAC5CH,aAAaC,QAAQ,cAAc,IAAIM,MAAOC,UAAUC,YACxDT,aAAaC,QACX,wBACAF,EAASG,KAAKE,uBAEhBT,EAAQI,EACV,IACCW,OAAM,SAACC,GACNf,EAAOe,EACT,GACJ,GACF,CAEO,SAAeK,EAAkB,EAAD,kCA6CtC,sDA7CM,WACLC,EACAC,GAAQ,qGAoBN,OAnBFC,EAAgB,+BAAG,CAAC,OAGNC,KAFdjB,EAAK,oCAAGiB,KAEiBjB,EAAQW,KAC3BrB,EAAatE,EAAU,IAAM8F,EAAgB,QAEnDI,QAAQC,IAAI,aAAe7B,GAErB8B,EAAQ,CACZ,eAAgB,sBAChB,gBAAiB,WACjBV,cAAeV,GAGjBqB,OAAOC,QAAQN,GAAkBO,SAAQ,YAAa,IAAD,mBAAVC,EAAC,KAAEC,EAAC,KAC7CL,EAAMI,GAAKC,CACb,IACMrC,EAAU,CACdC,QAAS+B,GACV,kBAEM,IAAI7B,SAAQ,SAACC,EAASC,GAC3BjB,EACGkB,KAAKJ,EAAYyB,EAAU3B,GAC3BO,MAAK,SAACC,GACLhB,EAAoBC,iBAAiB,CACnC6C,KAAM,OACNC,MAAM,IAAIvB,MAAOwB,eACjBC,IAAK,+BAAiCf,IAGxCtB,EAAQ,CAAEI,SAAUA,GACtB,IACCW,OAAM,SAACC,GACN5B,EAAoBC,iBAAiB,CACnC6C,KAAM,QACNC,MAAM,IAAIvB,MAAOwB,eACjBC,IAAK,kCAAoCf,IAE3CrB,EAAO,CAAEe,MAAOA,GAClB,GACJ,KAAE,2CACH,wBAEM,SAAesB,EAAa,EAAD,kCAkCjC,sDAlCM,WAA4BhB,EAAe3B,GAAI,iGAYlD,YAXY8B,KADwCjB,EAAK,oCAAGiB,KACrCjB,EAAQW,KAC3BrB,EAAatE,EAAU,IAAM8F,EAAgB,IAEnDI,QAAQC,IAAI,SAAW7B,GAEjBF,EAAU,CACdC,QAAS,CACP,eAAgB,mBAChB,gBAAiB,WACjBqB,cAAeV,IAElB,kBACM,IAAIT,SAAQ,SAACC,EAASC,GAC3BjB,EACGkB,KAAKJ,EAAYH,EAAMC,GACvBO,MAAK,SAACC,GACLhB,EAAoBC,iBAAiB,CACnC6C,KAAM,OACNC,MAAM,IAAIvB,MAAOwB,eACjBC,IAAK,uCAAyCf,IAGhDtB,EAAQ,CAAEI,SAAUA,GACtB,IACCW,OAAM,SAACC,GACN5B,EAAoBC,iBAAiB,CACnC6C,KAAM,QACNC,MAAM,IAAIvB,MAAOwB,eACjBC,IAAK,0CAA4Cf,IAEnDrB,EAAO,CAAEe,MAAOA,GAClB,GACJ,KAAE,2CACH,wBAEM,SAAeuB,EAAY,EAAD,oCAyDhC,sDAzDM,WAA2BjB,EAAe3B,EAAMH,GAAE,iGAYrD,OAZuDgB,EAAK,oCAAGiB,EAC3D3B,EAAatE,EAAU,IAAM8F,EAAgB,IAAM9B,OAC3CiC,IAAVjB,IAAqBA,EAAQW,KAEjCO,QAAQC,IAAI,QAAU7B,GAEhBF,EAAU,CACdC,QAAS,CACP,eAAgB,mBAChB,gBAAiB,WACjBqB,cAAeV,IAElB,kBACM,IAAIT,SAAQ,SAACC,EAASC,GAC3BjB,EACGoC,IAAItB,EAAYH,EAAMC,GACtBO,MAAK,SAACC,QAEoBqB,IAArB9B,EAAe,WACjBA,EAAe,SAAI,GAAG6C,SAAS7C,EAAe,SAAE8C,OAAQ,MAE1DrD,EAAoBC,iBAAiB,CACnC6C,KAAM,OACNC,MAAM,IAAIvB,MAAOwB,eACjBC,IACE,sCACAf,EACA,SACA9B,EACA,WACAkD,KAAKC,UAAUhD,KAGnBK,EAAQ,CAAEI,SAAUA,GACtB,IACCW,OAAM,SAACC,QAEmBS,IAArB9B,EAAe,WACjBA,EAAe,SAAI,GAAG6C,SAAS7C,EAAe,SAAE8C,OAAQ,MAE1DrD,EAAoBC,iBAAiB,CACnC6C,KAAM,QACNC,MAAM,IAAIvB,MAAOwB,eACjBC,IACE,uCACAf,EACA,SACA9B,EACA,WACAkD,KAAKC,UAAUhD,GACf,KACAqB,EAAM4B,UAGV3C,EAAO,CAAEe,MAAOA,GAClB,GACJ,KAAE,2CACH,wBAEM,SAAe6B,EAAe,EAAD,kCA8DnC,sDA9DM,WAA8BvB,EAAe9B,GAAE,iGAelD,OAfoDgB,EAAK,oCAAGiB,EAC1D3B,EAAatE,EAAU,IAAM8F,OACnBG,IAAVjB,IAAqBA,EAAQW,UACtBM,IAAPjC,IACFM,GAAc,IAAMN,GAEtBkC,QAAQC,IAAI,WAAa7B,GAGrBF,EAAU,CACZC,QAAS,CACP,eAAgB,mBAChB,gBAAiB,WACjBqB,cAAeV,IAElB,kBAEM,IAAIT,SAAQ,SAACC,EAASC,GAC3BjB,EACG8D,OAAOhD,EAAYF,GACnBO,MAAK,SAACC,QACMqB,IAAPjC,EACFJ,EAAoBC,iBAAiB,CACnC6C,KAAM,OACNC,MAAM,IAAIvB,MAAOwB,eACjBC,IAAK,qBAAuB7C,EAAK,cAAgB8B,IAGnDlC,EAAoBC,iBAAiB,CACnC6C,KAAM,OACNC,MAAM,IAAIvB,MAAOwB,eACjBC,IAAK,8BAAgCf,IAGzCtB,EAAQ,CAAEI,SAAUA,GACtB,IACCW,OAAM,SAACC,GACN5B,EAAoBC,iBAAiB,CACnC6C,KAAM,QACNC,MAAM,IAAIvB,MAAOwB,eACjBC,IACE,4BACA7C,EACA,cACA8B,EACA,KACAN,EAAM4B,UAEe,MAArB5B,EAAM+B,YAER3D,EAAoBC,iBAAiB,CACnC6C,KAAM,QACNC,MAAM,IAAIvB,MAAOwB,eACjBC,IACE,mEACArB,EAAM4B,UAIZ3C,EAAO,CAAEe,MAAOA,GAClB,GACJ,KAAE,2CACH,wBAEM,SAAegC,EAAY,GAAD,+BA2DhC,sDA3DM,WAA2B1B,GAAa,mGA0B3C,OA1B6C2B,EAAE,+BAAG,CAAC,EAAGzC,EAAK,uBACzD0C,EAAM1H,EAAU,IAAM8F,EAAgB,SAC5BG,IAAVjB,IAAqBA,EAAQW,KAG/B+B,OADgBzB,IAAdwB,EAAGE,OACCD,EAAIE,OAAO,WAAaH,EAAGE,QAE3BD,EAAIE,OAAO,iBAEF3B,IAAbwB,EAAGI,QACLH,EAAMA,EAAIE,OAAO,UAAYH,EAAGI,aAElB5B,IAAZwB,EAAGK,OACLJ,EAAMA,EAAIE,OAAO,SAAWH,EAAGK,OAGjC5B,QAAQC,IAAI,QAAUuB,GAElBtD,EAAU,CACZC,QAAS,CACP,eAAgB,mBAChB,gBAAiB,WACjBqB,cAAeV,GAGjB+C,MAAM,GACP,kBACM,IAAIxD,SAAQ,SAACC,EAASC,GAC3BjB,EACGwE,IAAIN,EAAKtD,GACTO,MAAK,SAACC,GACLJ,EAAQ,CACNI,SAAUA,EACVqD,KAAMrD,EAASG,KAAKkD,KACpBC,UAAWtD,EAASG,KAAKmD,UACzBL,MAAOjD,EAASG,KAAK8C,MACrBM,WAAYvD,EAASG,KAAKoD,WAC1BL,KAAMlD,EAASG,KAAK+C,KACpBM,cAAexD,EAASG,KAAKqD,cAC7BC,YAAazD,EAASG,KAAKsD,YAC3BC,YAAa1D,EAASG,KAAKuD,YAC3BC,SAAU3D,EAASG,KAAKwD,SACxBC,SAAU5D,EAASG,KAAKyD,UAE5B,IACCjD,OAAM,SAACC,GAWNf,EAAO,CAAEe,MAAOA,GAClB,GACJ,KAAE,4CACH,wBAEM,SAAeiD,EAAgB,EAAD,oCA6BrC,aAFC,OAED,kCA7BO,WAA+B3C,EAAe9B,EAAIgB,GAAK,mFAc1D,OAbE0C,EAAM1H,EAAU,IAAM8F,EAAgB,IAAM9B,OAClCiC,IAAVjB,IAAqBA,EAAQW,KAEjCO,QAAQC,IAAI,WAAauB,GAErBtD,EAAU,CACZC,QAAS,CACP,eAAgB,mBAChB,gBAAiB,WACjBqB,cAAeV,GAGjB+C,MAAM,GACP,kBACM,IAAIxD,SAAQ,SAACC,EAASC,GAC3BjB,EACGwE,IAAIN,EAAKtD,GACTO,MAAK,SAACC,GACLJ,EAAQ,CACNI,SAAUA,GAEd,IACCW,OAAM,SAACC,GACNf,EAAO,CAAEe,MAAOA,GAClB,GACJ,KAAE,4CACH,sBAGM,SAASG,IACd,OAAOd,aAAa6D,QAAQ,QAC9B,CG3WO,SAASC,IACd,OAAO,CACT,CChCO,IAAMC,EAAe,oCAIfC,EAAe,kBAKfC,EAAY,GAIZC,EAAS,WAKTC,EAAiB,CAC5B,gBACA,qBACA,eAKWC,EAAQ,CACrBA,MAAiB,CAAC,WAAY,OAAQ,YACtCA,MAAiB,CAAC,MAAO,YAKzBA,UAAqB,CAAC,MAAO,cAAe,YAC5CA,YAAuB,CAAC,MAAO,cAAe,WAAY,aAW7CC,EAAa,CAI1BA,MAAsB,CAAEC,SAAU,cAClCD,MAAsB,CAAEC,SAAU,cAClCD,UAA0B,CAAEC,SAAU,cACtCD,YAA4B,CAAEC,SAAU,eAG3BC,EAAmB,CAEhCA,MAA4B,CAAC,SAC7BA,UAAgC,CAAC,SACjCA,MAA4B,CAAC,UAGhBC,EAAc,CAE3BA,MAAuB,CAAC,OAAQ,UAChCA,MAAuB,CAAC,OAAQ,UAIhCA,UAA2B,CAAC,OAAQ,UACpCA,YAA6B,CAAC,OAAQ,OAAQ,YAAa,WAI9CC,EAAa,CAC1BA,MAAsB,CAAC,WAAY,OAAQ,YAAa,UACxDA,MAAsB,CAAC,MAAO,UAAW,WAQzCA,UAA0B,CAAC,MAAO,cAAe,YACjDA,YAA4B,CAC1B,MACA,cACA,QACA,YACA,UACA,UACA,QACA,WACA,WACA,YAmBWC,EAAa,CAE1BA,YAA4B,CAC1BC,IAAK,GACLC,YAAa,GACbC,MAAOC,IACPC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVC,MAAO,CAAC,CAAEtD,KAAM,KAChBuD,SAAU,CAAC,CAAEvD,KAAM,GAAIwD,MAAO,KAC9BC,KAAM,CAAC,MAoBIC,EAAY,CACzBA,QAAuB,CACrBpF,MAAO,GACPwE,IAAK,GACLa,aAAc,GACdC,QAAS,GACTC,MAAO,GACPC,MAAO,GACPC,eAAgB,GAChBC,eAAgB,GAChBC,cAAc,GAgBhBP,MAAqB,CAAElK,SAAU,GAAIC,SAAU,GAAIgF,KAAM,IACzDiF,MAAqB,CACnBZ,IAAK,GACLlG,QAAS,CACPG,QAAQ,EACRmH,KAAM,GACNC,OAAQ,GACRvD,OAAQ,IAEVwD,QAAS,CACP,CACEC,OAAQ,GACRC,KAAM,CACJvH,QAAQ,EACRmH,KAAM,GACNC,OAAQ,GACRvD,OAAQ,OAKhB8C,UAAyB,CACvBZ,IAAK,GACLC,YAAa,GACbQ,SAAU,CACR,CACEvD,KAAM,GACN+C,YAAa,GACbtE,KAAM,KAGV8F,OAAQ,CACN,CACEvE,KAAM,GACN+C,YAAa,GACbyB,OAAQ,CAAC,CAAExE,KAAM,GAAI+C,YAAa,GAAItE,KAAM,QAMlDiF,YAA2B,CACzBZ,IAAK,GACLC,YAAa,GACbC,MAAOC,IACPC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTE,MAAO,CAAC,CAAEtD,KAAM,OAcLyE,EAAsB,CAAC,EAKpCA,EAAiC,YAAI,CACnCpB,SAAU,CAAEqB,MAAO,UAAWC,OAAQ1C,GACtCsB,SAAU,CAAEvD,KAAM,CAAE0E,MAAO,UAAWC,OAAQ1C,KAIzC,IAAM2C,EAAW,CAIxBA,MAAoB,CAAC,OAAQ,QAC7BA,MAAoB,CAAC,OAAQ,QAE7BA,QAAsB,CAAC,QACvBA,UAAwB,CAAC,OAAQ,QACjCA,YAA0B,CAAC,OAAQ,SAKtBC,EAAmB,CAChCA,MAA4B,CAAEC,OAAQ,mBACtCD,MAA4B,CAC1BjI,QAAS,CACPsH,KAAM,gBACNC,OAAQ,gBACRvD,OAAQ,iBAEVwD,QAAS,CACPE,KAAM,CACJJ,KAAM,gBACNC,OAAQ,gBACRvD,OAAQ,mBAiCdiE,UAAgC,CAC9BtB,SAAU,CAAE9E,KAAM,iBAClBsG,MAAO,CAAEtG,KAAM,oBAEjBoG,YAAkC,CAChCG,WAAY,oBAWDC,GAAkB,CAC/BA,MAA2B,CAAExG,KAAM,UAWtByG,GAAa,CAAC,ECzQZ,SAASC,KACtB,IAAIC,EAAMjH,aAAa6D,QAAQ,YAC/B,OAAyB,IAArBI,EAAU7B,OACL9D,GAEgB,IAArB2F,EAAU7B,SACZ6E,EAAMhD,EAAU,IAKN,OAARgD,EACK7L,EAGG,OAAR6L,EACK3I,EAIkC,OAAvC4I,UAAUxL,SAASyL,UAAU,EAAG,GAC3B/L,GAGL8L,UAAUxL,SAASyL,UAAU,EAAG,GAC3B7I,GAKX,CD4OAyI,GAAsB,UAAI,CACxBpC,IAAK,iCACLC,YAAa,iDAEfmC,GAAwB,YAAI,CAC1BpC,IAAK,yFACLE,MAAO,qEACPD,YAAa,kDACbK,QAAS,oEACTF,UAAW,iCACXC,QAAS,kCAGX+B,GAA0B,cAAI,CAC5BK,KAAM,kCE3VR,IAAIC,QAAYjG,EAGT,SAAekG,KAAiB,gCAavC,cAHC,OAGD,mCAbO,gGAC0C,GAClC,QADP1L,EAAOoE,aAAa6D,QAAQ,oBACJzC,IAATxF,GAA+B,KAATA,EAAW,0EAE7BgI,EAAgB,QAAShI,GAAM,KAAD,OACpCwF,KADXrB,EAAQ,SAEZC,aAAaC,QAAQ,OAAQoC,KAAKC,UAAUvC,EAASA,SAASG,OAAO,kDAEvEmB,QAAQC,IAAI,EAAD,IAAQ,2DAEtB,sBAIM,SAASiG,GAAMC,EAAUC,EAAUC,GAExC,QAAkBtG,IAAdiG,GAAyB,CAE3B,IAAMM,EAAM3H,aAAa6D,QAAQ,QAGjC,QAAYzC,IAARuG,GAA6B,OAARA,EACvB,OA8BN,SAAyBH,EAAUC,EAAUC,GAC3C,GAAmB,WAAfA,EAAyB,CAC3B,GAAiB,UAAbF,EAAsB,OAAO,EACjC,GAAiB,aAAbA,EAAyB,CAC3B,GAAiB,UAAbC,EAAsB,OAAO,EACjC,GAAiB,cAAbA,EAA0B,OAAO,EACrC,GAAiB,gBAAbA,EAA4B,OAAO,CACzC,CACA,GAAiB,aAAbD,EAAyB,CAC3B,GAAiB,UAAbC,EAAsB,OAAO,EACjC,GAAiB,cAAbA,EAA0B,OAAO,EACrC,GAAiB,gBAAbA,EAA4B,OAAO,CACzC,CACA,GAAiB,YAAbD,EAAwB,CAC1B,GAAiB,UAAbC,EAAsB,OAAO,EACjC,GAAiB,cAAbA,EAA0B,OAAO,EACrC,GAAiB,gBAAbA,EAA4B,OAAO,CACzC,CACF,CACA,GAAmB,SAAfC,EAAuB,CACzB,GAAiB,UAAbF,EAAsB,OAAO,EACjC,GAAiB,aAAbA,EAAyB,CAC3B,GAAiB,UAAbC,EAAsB,OAAO,EACjC,GAAiB,cAAbA,EAA0B,OAAO,EACrC,GAAiB,gBAAbA,EAA4B,OAAO,CACzC,CACA,GAAiB,aAAbD,EAAyB,CAC3B,GAAiB,UAAbC,EAAsB,OAAO,EACjC,GAAiB,cAAbA,EAA0B,OAAO,EACrC,GAAiB,gBAAbA,EAA4B,OAAO,CACzC,CACA,GAAiB,YAAbD,EAAwB,CAC1B,GAAiB,UAAbC,EAAsB,OAAO,EACjC,GAAiB,cAAbA,EAA0B,OAAO,EACrC,GAAiB,gBAAbA,EAA4B,OAAO,CACzC,CACF,CACA,GAAmB,WAAfC,EAAyB,CAC3B,GAAiB,UAAbF,EAAsB,OAAO,EACjC,GAAiB,aAAbA,EAAyB,CAC3B,GAAiB,UAAbC,EAAsB,OAAO,EACjC,GAAiB,cAAbA,EAA0B,OAAO,EACrC,GAAiB,gBAAbA,EAA4B,OAAO,CACzC,CACA,GAAiB,aAAbD,EAAyB,CAC3B,GAAiB,UAAbC,EAAsB,OAAO,EACjC,GAAiB,cAAbA,EAA0B,OAAO,EACrC,GAAiB,gBAAbA,EAA4B,OAAO,CACzC,CACA,GAAiB,YAAbD,EAAwB,CAC1B,GAAiB,UAAbC,EAAsB,OAAO,EACjC,GAAiB,cAAbA,EAA0B,OAAO,EACrC,GAAiB,gBAAbA,EAA4B,OAAO,CACzC,CACF,CACA,GAAmB,WAAfC,EAAyB,CAC3B,GAAiB,UAAbF,EAAsB,OAAO,EACjC,GAAiB,aAAbA,EAAyB,CAC3B,GAAiB,UAAbC,EAAsB,OAAO,EACjC,GAAiB,cAAbA,EAA0B,OAAO,EACrC,GAAiB,gBAAbA,EAA4B,OAAO,CACzC,CACA,GAAiB,aAAbD,EAAyB,CAC3B,GAAiB,UAAbC,EAAsB,OAAO,EACjC,GAAiB,cAAbA,EAA0B,OAAO,EACrC,GAAiB,gBAAbA,EAA4B,OAAO,CACzC,CACA,GAAiB,YAAbD,EAAwB,CAC1B,GAAiB,UAAbC,EAAsB,OAAO,EACjC,GAAiB,cAAbA,EAA0B,OAAO,EACrC,GAAiB,gBAAbA,EAA4B,OAAO,CACzC,CACF,CACA,OAAO,CACT,CAxGaG,CAAgBJ,EAAUC,EAAUC,GAG7CL,GAAYhF,KAAKwF,MAAMF,EACzB,CAGA,GAAiC,IAA7BN,GAAUpB,QAAQ7D,OAAc,CAElC,IAAM0F,EAAYT,GAAUpB,QAAQnD,QAClC,SAACiF,GAAE,OAAKA,EAAG7B,SAAWuB,CAAQ,IAC9B,GAEF,QAAkBrG,IAAd0G,QAAqD1G,IAA1B0G,EAAUJ,GACvC,MAE4B,SAA1BI,EAAUJ,KAAoD,IAA1BI,EAAUJ,EAGpD,CAIA,MACoC,SAAlCL,GAAU5I,QAAQiJ,KACgB,IAAlCL,GAAU5I,QAAQiJ,EAEtB,C,0BCjDaM,GAAmB,WAC9B,SAASC,EAAmBvM,GAC1BsE,aAAaC,QAAQ,WAAYvE,GACjCwM,OAAOC,SAASC,QAClB,CAEA,OACE,iCACGpB,KAAStL,SACV,iCACGuI,EAAUoE,SAAS,OAClB,eAACC,EAAA,EAAM,CACLC,QAAQ,eACRC,QAAS,kBAAMP,EAAmB,KAAK,EAAC,iBAK3ChE,EAAUoE,SAAS,OAClB,eAACC,EAAA,EAAM,CACLC,QAAQ,eACRC,QAAS,kBAAMP,EAAmB,KAAK,EAAC,sBASpD,E,UC1BMQ,GAAUC,IAAMC,YAChBC,GAASF,IAAMC,YACfE,GAAYH,IAAMC,YAuGXG,GArGQ,WAEnB,MAAsBC,mBAAS,IAAG,mBAA3B/G,EAAG,KAAEgH,EAAM,KAEO,aAsBxB,OAtBwB,kCAAzB,WAA0BC,GAAC,qFAKc,GAJvCA,EAAEC,iBAEI7I,EAAOoI,GAAQU,QAAQ9D,MACvB+D,EAAMR,GAAOO,QAAQ9D,MACrB9J,EAASsN,GAAUM,QAAQ9D,MACpB,KAAThF,EAAW,gBAC0B,OAAvC2I,EAAO,gCAAgC,6BAG7B,KAARI,EAAU,iBAC2B,OAAvCJ,EAAO,gCAAgC,sDAIjCtL,EAAM2C,EAAM+I,EAAK7N,GAAQ,KAAD,oBACxB+L,KAAoB,KAAD,GACzBY,OAAOC,SAASkB,QAAQ,KAAK,mDAE7BhI,QAAQC,IAAI,CAAEX,MAAO,KAAMZ,SAASG,OACpC8I,EAAO,KAAMjJ,SAASG,KAAKqC,QAAU,MAAQ,KAAMxC,SAASG,KAAKoJ,SAAS,4DAE7E,sBAED,OACE,uBAAKC,UAAU,YAAW,UACxB,uBAAKA,UAAU,gBAAe,UAC5B,sBAAKA,UAAU,gBAAe,uBAC9B,wBACA,sBAAKA,UAAU,mBAAkB,gDAElCtF,EAAU7B,OAAS,GAClB,sBAAKmH,UAAU,mBAAkB,SAC/B,eAAC,GAAgB,MAIrB,wBACA,wBACA,uBAAKA,UAAU,gBAAe,UAC5B,8BAAKvC,KAAStJ,QACd,gBAAC8L,GAAA,EAAI,CAACC,SA3CuB,SAET,GAAD,gCAyCQ,UACzB,gBAACD,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAOI,UAAU,WAAU,UAC/C,eAACH,GAAA,EAAKI,MAAK,UAAE5C,KAAS3L,WACtB,eAACmO,GAAA,EAAKK,QAAO,CACXC,IAAKrB,GACLnI,KAAK,OACLyJ,YAAa/C,KAAS3K,yBAI1B,gBAACmN,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAOI,UAAU,oBAAmB,UACxD,eAACH,GAAA,EAAKI,MAAK,UAAE5C,KAAS1L,WACtB,eAACkO,GAAA,EAAKK,QAAO,CACXvJ,KAAK,WACLwJ,IAAKlB,GACLmB,YAAa/C,KAAS1K,yBAG1B,gBAACkN,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAOI,UAAU,SAAQ,UAC7C,eAACH,GAAA,EAAKI,MAAK,UAAE5C,KAASzL,SACtB,eAACiO,GAAA,EAAKK,QAAO,CACXvJ,KAAK,OACLwJ,IAAKjB,GACLkB,YAAa/C,KAASzK,uBAG1B,eAAC+L,EAAA,EAAM,CAACC,QAAQ,UAAUjI,KAAK,SAAQ,SACpC0G,KAASxJ,YAGd,wBACA,sBAAKwM,MAAO,CAAEC,MAAO,OAAQ,SAAEjI,IAC/B,wBACA,sBAAKuH,UAAU,eAAc,SAC3B,eAAC,IAAO,CAACW,GAAE,eAAiB,SAC1B,gBAAC5B,EAAA,EAAM,CAACC,QAAQ,kBAAkB4B,KAAK,KAAI,UACxCnD,KAASxK,WACV,oBACE+M,UAAU,oBACV,cAAY,OACZa,MAAO,MACPJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,mBAS3B,ECrEaC,I,OAtCQ,WAEnB,OADAC,qBAAU,WAAO,IAEf,uBAAKnB,UAAU,OAAM,UACnB,yBAAQA,UAAU,cAAa,SAAEvF,IACjC,uBAAMuF,UAAU,eAAc,SAC5B,sBAAKA,UAAU,YAAW,SACxB,sBAAKA,UAAU,WAAU,SACvB,uBAAKA,UAAU,YAAW,UACvBvC,KAASvK,WACV,wBACA,wBACCuK,KAAStK,kBACV,wBACA,wBACCsK,KAASrK,mBACV,wBACA,wBACCqK,KAASpK,uBACV,wBACA,wBACA,oBACE+N,KAAK,6CACLC,OAAO,SACPC,IAAI,sBACJT,MAAM,6CAA4C,SAEjDpD,KAASlK,uBAEZ,mCAOd,GChBagO,I,OArBY,WACvB,OACE,uBAAKvB,UAAU,gBAAe,UAC3BvC,KAAS1J,MACV,wBACA,wBACC0J,KAASzJ,YACV,wBACA,wBACA,oBACEoN,KAAK,6CACLC,OAAO,SACPC,IAAI,sBACJT,MAAM,6CAA4C,SAEjDpD,KAASlK,yBAIlB,G,2BCvBaiO,GAAY,SAAZA,EAAa9L,GAExB,QAAYmC,IAARnC,EAAmB,OAAO,EAE9B,GAAW,MAAPA,EAAa,OAAO,EAGxB,GAAmB,mBAARA,EACT,OAAO,EAIT,GAAmB,kBAARA,EACT,OAAO+L,MAAM/L,GAIf,GAAmB,kBAARA,EACT,MAAe,KAARA,EAIT,GAAIgM,MAAMC,QAAQjM,GAAM,CACtB,GAAmB,IAAfA,EAAImD,OAAc,OAAO,EAC7B,IAAI+I,GAAM,EAIV,OAHAlM,EAAIyC,SAAQ,SAAC0J,GACXD,EAAMA,GAAOJ,EAAUK,EACzB,IACOD,CACT,CAGA,GAAIlM,EAAIoM,cAAgB7J,OAAQ,CAC9B,IAAI2J,GAAM,EAIV,OAHA3J,OAAOC,QAAQxC,GAAKyC,SAAQ,YAAa,IAAD,mBAAPE,GAAF,KAAG,MAChCuJ,EAAMA,GAAOJ,EAAUnJ,EACzB,IACOuJ,CACT,CACA,OAAO,CACT,EAGaG,GAAmB,SAACrM,GAC/B,OAA2B,IAAvBgM,MAAMC,QAAQjM,IAAwB,EACnCA,EAAI6D,QAAO,SAACmG,GAAC,OAAM8B,GAAU9B,EAAE,IAAE7G,MAC1C,EAGamJ,GAAwB,SAAxBA,EAAyBtM,GAGpC,GAFIgM,MAAMC,QAAQjM,GAEdA,EAAIoM,cAAgB7J,OAEtB,IADA,IAAMgK,EAAOhK,OAAOC,QAAQxC,GACnBwM,EAAI,EAAGA,EAAID,EAAKpJ,OAAQqJ,IAAK,CAEpC,GAAIR,MAAMC,QAAQM,EAAKC,GAAG,IACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKC,GAAG,GAAGrJ,OAAQsJ,IAEnCF,EAAKC,GAAG,GAAGC,GAAGL,cAAgB7J,QAC9ByJ,MAAMC,QAAQM,EAAKC,GAAG,GAAGC,KAEzBH,EAAsBC,EAAKC,GAAG,GAAGC,IAC7BX,GAAUS,EAAKC,GAAG,GAAGC,KACvBF,EAAKC,GAAG,GAAGE,OAAOD,EAAG,IAGnBX,GAAUS,EAAKC,GAAG,GAAGC,KACvBF,EAAKC,GAAG,GAAGE,OAAOD,EAAG,GAM7B,GAAIF,EAAKC,GAAG,GAAGJ,cAAgB7J,OAE7B,IADA,IAAMoK,EAAUpK,OAAOC,QAAQ+J,EAAKC,GAAG,IAC9BC,EAAI,EAAGA,EAAIE,EAAQxJ,OAAQsJ,IAEhCE,EAAQH,GAAG,GAAGJ,cAAgB7J,QAC9ByJ,MAAMC,QAAQU,EAAQH,GAAG,IAEzBF,EAAsBK,EAAQH,GAAG,IAE7BV,GAAUa,EAAQH,GAAG,YAAYD,EAAKC,GAAG,GAAGG,EAAQH,GAAG,GAInE,CAGF,OAAOxM,CACT,EAGa4M,GAAW,SAAXA,EAAYC,EAAMC,GAE7B,QAAa3K,IAAT0K,QAA+B1K,IAAT2K,EAAoB,OAAO,EAErD,GAAID,IAASC,EAAM,OAAO,EAE1B,UAAWD,WAAgBC,EAAM,OAAO,EAGxC,GACGd,MAAMC,QAAQY,KAAUb,MAAMC,QAAQa,KACrCd,MAAMC,QAAQY,IAASb,MAAMC,QAAQa,GAEvC,OAAO,EAGT,GAAId,MAAMC,QAAQY,IAASb,MAAMC,QAAQa,GAAO,CAE9C,GAAID,EAAK1J,SAAW2J,EAAK3J,OAAQ,OAAO,EACxC,IAAK,IAAIqJ,EAAI,EAAGA,EAAIK,EAAK1J,OAAQqJ,IAC/B,IAAKI,EAASC,EAAKL,GAAIM,EAAKN,IAAK,OAAO,EAE1C,OAAO,CACT,CAGA,GACGK,EAAKT,cAAgB7J,QAAUuK,EAAKV,cAAgB7J,QACpDsK,EAAKT,cAAgB7J,QAAUuK,EAAKV,cAAgB7J,OAErD,OAAO,EAGT,GAAIsK,EAAKT,cAAgB7J,QAAUuK,EAAKV,cAAgB7J,OAAQ,CAC9D,IAAMwK,EAAKxK,OAAOyK,KAAKH,GACjBI,EAAK1K,OAAOyK,KAAKF,GACvB,OAAIC,EAAG5J,SAAW8J,EAAG9J,WAChByJ,EAASG,EAAIE,MAIbL,EAFMrK,OAAO2K,OAAOL,GACdtK,OAAO2K,OAAOJ,IAI3B,CACA,OAAO,CACT,EAGO,SAASK,GAAWC,GACzB,OAAOA,GAAKA,EAAE,GAAGC,cAAgBD,EAAEE,MAAM,EAC3C,CAGO,SAASC,GAAWC,GACzB,OAAOA,EAAGF,MAAM,EAAG,IAAIG,WAAW,IAAK,IACzC,CCvHAC,KAAYC,QAAQC,IAClBC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,MAGF,IAAIC,GAAc5E,IAAMC,YACpB4E,GAAY7E,IAAMC,YAElB6E,GAAmB9E,IAAMC,YACzB8E,GAAW/E,IAAMC,YAEjB/M,GAAO8M,IAAMC,YACbtN,GAAWqN,IAAMC,YACjBpN,GAASmN,IAAMC,YAEJ,SAAS+E,KACtB,MAAgC3E,oBAAS,GAAM,mBAAxC4E,EAAQ,KAAEC,EAAW,KAEtBC,EAAM7N,aAAa6D,QAAQ,YAC3BiK,EAAK9N,aAAa6D,QAAQ,aAC1BkK,EAAK/N,aAAa6D,QAAQ,eA4HhC,OA1HAxI,GAAS8N,QAAkB,OAAR0E,EAAeA,EAAM,GACxCjS,GAAKuN,QAAiB,OAAP2E,EAAcA,EAAK,GAClCvS,GAAO4N,QAAiB,OAAP4E,GAAsB,KAAPA,EAAYA,EAAK,IAGjDrD,qBAAU,WAoBR,SAASsD,IACP,IAAIC,EACAC,EAEJ,GAAiC,OAA7BV,GAAiBrE,QACnB+E,EAAeV,GAAiBrE,QAAU,MAGvC,CAEH,GAA0B,OAAtBoE,GAAUpE,QAAkB,CAC9B,IAAMgF,EAAiBnO,aAAa6D,QAAQ,cAErB,OAAnBsK,GACFZ,GAAUpE,QAAUgF,EACpBF,EAAKG,SAASD,EAAgB,MAI9BF,EAAK1N,KAAK8N,MACVd,GAAUpE,QAAU8E,EAExB,MAGEA,EAAKG,SAASb,GAAUpE,QAAS,IAEV,OAArBsE,GAAStE,UACXsE,GAAStE,QA9Cf,WACE,IAAImF,EAAMtO,aAAa6D,QAAQ,yBAE/B,OAAY,OAARyK,EAAqB,IACrBA,EAAIC,SAAS,KACqB,GAA7BH,SAASE,EAAI/B,MAAM,GAAI,IAAW,GAAK,IACrC+B,EAAIC,SAAS,KACc,GAA7BH,SAASE,EAAI/B,MAAM,GAAI,IAAW,KAChC+B,EAAIC,SAAS,KACc,IAA7BH,SAASE,EAAI/B,MAAM,GAAI,IAMlC,CA+ByBiC,IAGrBN,GAFgBD,EAAKR,GAAStE,QAEJ5I,KAAK8N,OAAS,GAC1C,CAcA,GAZIH,EAAe,KACjBO,cAAcnB,GAAYnE,SAC1BvI,IAAed,MAAK,WAClB0N,GAAiBrE,QAAU,KAC3BoE,GAAUpE,QAAU,KAEpBmE,GAAYnE,QAAUuF,aAAY,WAChCV,GACF,GAAG,IAEL,KAEEE,GAAgB,EAIlB,OAHAlO,aAAa2O,aAEbzG,OAAOC,SAASkB,QAAQ,KAO1BmE,GAAiBrE,QAAUiF,SAASF,EAAc,GACpD,CAEAZ,GAAYnE,QAAUuF,aAAY,WAChCV,GACF,GAAG,IACL,GAAG,IAoCD,uBAAKzE,UAAU,UAAS,UACtB,eAACjB,EAAA,EAAM,CAACiB,UAAU,iBAAiBf,QAAS,kBAAMoF,GAAaD,EAAS,EAAC,SACtEA,EACC,oBAAGpE,UAAU,cAAc,cAAY,SAEvC,oBAAGA,UAAU,aAAa,cAAY,WAG1C,eAAC,IAAO,CAACW,GAAG,QAAQX,UAAU,WAAU,SACrCvF,IAEH,wBACA,sBAAKuF,UAAS,0BAAqBoE,EAAW,SAAW,IAAK,SAC5D,uBAAKpE,UAAU,gBAAe,UAC5B,wBACA,uBAAKA,UAAU,eAAc,UAC3B,gBAAC,IAAO,CAACW,GAAE,gBAAkB,UAC1BlD,KAASrL,QAAU,IACpB,6BAAIN,GAAS8N,YAAY,eAE3B,sBAAKa,MAAO,CAAE4E,YAAa,QAAY,SACrC,gCACG5H,KAASpL,KAAO,IAlDR,UAAjBA,GAAKuN,QAEL,oBAAGI,UAAU,iBAAiB,cAAY,OAAOa,MAAM,UAE/B,aAAjBxO,GAAKuN,QAEZ,oBACEI,UAAU,sBACV,cAAY,OACZa,MAAM,aAGgB,YAAjBxO,GAAKuN,QAEZ,oBAAGI,UAAU,iBAAiB,cAAY,OAAOa,MAAM,YAE/B,aAAjBxO,GAAKuN,QAEZ,oBAAGI,UAAU,iBAAiB,cAAY,OAAOa,MAAM,aAIvD,oBAAGb,UAAU,aAAa,cAAY,OAAO,aAAW,cAgCpD,sBAAKS,MAAO,CAAE4E,YAAa,QAAY,SACrC,gCACG5H,KAASzL,OAAS,IACnB,6BAAIA,GAAO4N,eAGf,wBACA,sBAAKa,MAAO,CAAE4E,YAAa,OAAWC,cAAe,QAAY,SAC/D,eAACvG,EAAA,EAAM,CAACC,QAAQ,iBAAiBC,QAAS,kBAnEpDxI,aAAa2O,aACbG,SAAS3G,SAASkB,QAAQ,IAkEwC,EAAC,SACtDrC,KAASrJ,WAGbsG,EAAU7B,OAAS,GAClB,gBAAC,IAAM2M,SAAQ,WACb,wBACA,8BACE,eAAC,GAAgB,YAKzB,wBACA,sBAAKxF,UAAU,eAAc,SAAEvC,KAASlL,YACxC,wBACC0F,OAAOyK,KAAK7H,GAAO4K,KAAI,SAACrN,GAEvB,OACG4F,GAAM3L,GAAKuN,QAASxH,EAAG,cACCP,IAAxBmD,EAAiB5C,KACf4C,EAAiB5C,GAAG0G,SAASzM,GAAKuN,SAE9B,GAGP,eAAC,IAAO,CACNe,GAAI,IAAMvI,EACV4H,UAAW,SAAC0F,GAAO,OAAMA,EAAQC,SAAW,SAAW,EAAE,EAGzD1G,QAAS,kBAAMoF,GAAY,EAAM,EAAC,SAEjCxB,GAAWzK,IAHPA,EAMX,IACA,wBAC2B,IAA1BwC,EAAe/B,QACd,uCACE,sBAAKmH,UAAU,eAAc,gCAAyB,IAAC,2BAG1DpF,EAAekE,SAAS,kBACvBd,GAAM3L,GAAKuN,QAAS,cAAe,WACjC,eAAC,IAAO,CACNe,GAAE,iBACFX,UAAW,SAAC0F,GAAO,OAAMA,EAAQC,SAAW,SAAW,EAAE,EAEzD1G,QAAS,kBAAMoF,GAAY,EAAM,EAAC,wCAKvCzJ,EAAekE,SAAS,uBACvBd,GAAM3L,GAAKuN,QAAS,cAAe,SACjC,eAAC,IAAO,CACNe,GAAE,sBACFX,UAAW,SAAC0F,GAAO,OAAMA,EAAQC,SAAW,SAAW,EAAE,EAEzD1G,QAAS,kBAAMoF,GAAY,EAAM,EAAC,uCAKvCzJ,EAAekE,SAAS,gBACvBd,GAAM3L,GAAKuN,QAAS,cAAe,WACjC,eAAC,IAAO,CACNe,GAAE,eACFX,UAAW,SAAC0F,GAAO,OAAMA,EAAQC,SAAW,SAAW,EAAE,EAEzD1G,QAAS,kBAAMoF,GAAY,EAAM,EAAC,yCASlD,C,4CClRA,SAASuB,GAAcC,GACrB,IAAMC,EAAS,CAAC,EAwBhB,OAvBA5K,EAAW2K,EAAME,SAAS5N,SAAQ,SAACC,GAC7BA,EAAE0J,cAAgB7J,OACpBA,OAAOyK,KAAKtK,GAAGD,SAAQ,SAAC6N,GAClBtE,MAAMC,QAAQkE,EAAM3H,SAAS8H,IAC/BF,EAAOE,GAAQH,EAAM3H,SAAS8H,GAAMP,KAAI,SAAC/F,GACvC,IAAMuG,EAAM,CAAC,EAIb,OAHA7N,EAAE4N,GAAM7N,SAAQ,SAAC+N,GACfD,EAAIC,GAAKxG,EAAEwG,EACb,IACOD,CACT,IAEAH,EAAOE,GAAQH,EAAM3H,SAAS8H,EAElC,IAEI/N,OAAOyK,KAAKmD,EAAM3H,UAAUY,SAAS1G,KACvC0N,EAAO1N,GAAKyN,EAAM3H,SAAS9F,GAGjC,IAGO+N,GAAWL,EACpB,CAEA,SAASK,GAAWC,GAClB,OACE,eAACC,GAAA,EAAS,CAACC,iBAAkB,EAAG1F,KAAM,KAAK,SACxCzB,IAAMoH,SAASC,QACdvO,OAAOC,QAAQkO,GAAMX,KAAI,WAAevD,GAAO,IAAD,mBAAnBuE,EAAG,KAAE3K,EAAK,KACnC,OACE,gBAACuK,GAAA,EAAUK,KAAI,CAACC,SAAUzE,EAAE,UAC1B,eAACmE,GAAA,EAAUO,OAAM,UACf,6BAAIH,MAEN,eAACJ,GAAA,EAAUQ,KAAI,UACZ/K,aAAiB7D,OAChByJ,MAAMC,QAAQ7F,QACCjE,IAAbiE,EAAM,GACJ7D,OAAO2K,OAAO9G,EAAM,IAAIgL,MACtB,SAACpH,GAAC,OAAKA,aAAazH,MAAM,IAE1BkH,IAAMoH,SAASC,QACb1K,EAAM2J,KAAI,SAACsB,EAAQ7E,GACjB,OACE,eAACmE,GAAA,EAAS,UACR,gBAACA,GAAA,EAAUK,KAAI,CAACC,SAAS,IAAG,UAC1B,gBAACN,GAAA,EAAUO,OAAM,WACdH,EAAG,IAAE,mCAAKvE,EAAC,UAEd,eAACmE,GAAA,EAAUQ,KAAI,UACZV,GAAWY,SAKtB,KAEAjL,EAAM,aAAc7D,OACtB,gBAAC+O,GAAA,EAAK,CAACC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACxG,KAAK,KAAI,UAChD,iCACE,8BACGzB,IAAMoH,SAASC,QACdvO,OAAOyK,KAAK5G,EAAM,IAAI2J,KAAI,SAAC/F,GACzB,OAAO,8BAAKA,GACd,SAIN,iCACGP,IAAMoH,SAASC,QACd1K,EAAM2J,KAAI,SAACQ,GACT,OACE,8BACG9G,IAAMoH,SAASC,QACdvO,OAAO2K,OAAOqD,GAAKR,KAAI,SAACpN,GACtB,OAAIqJ,MAAMC,QAAQtJ,GACT,oCAAMA,EAAEgP,KAAK,MAAK,OACpB,8BAAKhP,GACd,MAIR,UAKN,KAAOyD,EAAMuL,KAAK,OAAS,KAG7B,MAGF,eAACL,GAAA,EAAK,CAACC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACxG,KAAK,KAAI,SAChD,iCACGzB,IAAMoH,SAASC,QACdvO,OAAOC,QAAQ4D,GAAO2J,KAAI,SAACxD,GACzB,OACE,gCACE,8BACE,6BAAIA,EAAK,OAEX,8BACsB,kBAAZA,EAAK,GACTA,EAAK,GAAG/K,WACR+K,EAAK,OAIjB,cAKIpK,IAAViE,GAAgC,MAATA,EACzB,sCACE2K,EAAIa,cAAcxI,SAAS,QAC7BmE,GAAWnH,GAEXA,MAKV,MAIR,CAEe,SAASyL,GAAc1B,GACpC,MAAsBrG,wBAAS3H,GAAU,mBAAlC2P,EAAG,KAAEC,EAAM,KAClBtG,qBAAU,WACR,GACC,CAAC0E,IAEJ,IAAM6B,OACI7P,IAAR2P,EACE,gBAACG,GAAA,EAAO,CACN/R,GAAG,0BACH6K,MAAO,CACLK,MAAO,OACP8G,SAC8C,GAA5C,QAAQC,KAAKlJ,OAAOhB,UAAUmK,WAAqB,IAAM,SAC3D,UAEF,eAACH,GAAA,EAAQf,OAAM,CAACmB,GAAG,KAAI,2BACvB,eAACJ,GAAA,EAAQd,KAAI,UACX,eAACjB,GAAa,CAAC1H,SAAUsJ,EAAKzB,QAASF,EAAME,eAIjD,eAAC4B,GAAA,EAAO,CAAC/R,GAAG,0BAA0B6K,MAAO,CAAEK,MAAO,QAAY,SAChE,gBAAC6G,GAAA,EAAQf,OAAM,CAACmB,GAAG,KAAI,oBACd,eAACJ,GAAA,EAAQd,KAAI,SAI5B,MAAqB,SAAjBhB,EAAMmC,OAEN,eAACC,GAAA,EAAc,CACbC,QAAQ,QACRC,UAAU,OACVC,QAASV,EACTW,WAAW,EAAK,SAEhB,eAACtJ,EAAA,EAAM,CACLC,QAAQ,OACR4B,KAAK,KACL3B,QAAS,WACPwI,EAAO5B,EAAMyC,WAAWzC,EAAMjQ,IAChC,EAAE,SAEF,oBACEoK,UAAU,YACV,cAAY,OACZa,MAAM,OACNJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,WAOA,WAAjB4E,EAAMmC,OAEN,eAACjJ,EAAA,EAAM,CACLC,QAAQ,OACR4B,KAAK,KACL3B,QAAO,gCAAE,wFAC4D,IAApDN,OAAO4J,QAAQ,mBAAqB1C,EAAMjQ,GAAK,KACnD,CAAD,yCAEiBqD,EAAe4M,EAAME,QAASF,EAAMjQ,IAAI,KAAD,EAE7B,MAFnB,OAEDY,SAAS4G,QACpByI,EAAM2C,aAAa3C,EAAMjQ,IAC1B,gDAEDkC,QAAQC,IAAI,EAAD,IAAQ,yDAGvB,SAEF,oBACEiI,UAAU,cACV,cAAY,OACZa,MAAM,SACNJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,SAME,SAAjB4E,EAAMmC,OAEN,eAAC,IAAO,CAACrH,GAAI,SAAWkF,EAAME,QAAU,IAAMF,EAAMjQ,GAAG,SACrD,eAACmJ,EAAA,EAAM,CAACC,QAAQ,OAAO4B,KAAK,KAAI,SAC9B,oBACEZ,UAAU,mBACV,cAAY,OACZa,MAAM,OACNJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,WAOA,cAAjB4E,EAAMmC,OAEN,eAAC,IAAO,CAACrH,GAAI,QAAUkF,EAAME,QAAU,UAAYF,EAAMjQ,GAAG,SAC1D,eAACmJ,EAAA,EAAM,CAACC,QAAQ,OAAO4B,KAAK,KAAI,SAC9B,oBACEZ,UAAU,aACV,cAAY,OACZa,MAAM,YACNJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,WAQd,wBACT,CC1Re,SAASwH,GAAa5C,GACnC,YAAqBhO,IAAjBgO,EAAM6C,aAA4C7Q,IAApBgO,EAAMtT,WAEpCsT,EAAM6C,OAAO5J,SAAS,kBAAkCjH,IAAnBgO,EAAM9K,SADtC,2CAKP,+BACE,gBAACiM,GAAA,EAAK,CAACC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,YACtC,iCACE,8BACGjI,IAAMoH,SAASC,QACdX,EAAM6C,OAAOjD,KAAI,SAAC/F,GAChB,YAAkC7H,IAA9BiD,EAAW+K,EAAME,eACkBlO,IAAjCiD,EAAW+K,EAAME,SAASrG,GACrB,8BAAK5E,EAAW+K,EAAME,SAASrG,KACnC,8BAAKA,GACd,MAPK,YAWX,iCACGP,IAAMoH,SAASC,QACdX,EAAMtT,UAAUkT,KAAI,SAACQ,EAAK0C,GACxB,OACE,8BACGxJ,IAAMoH,SAASC,QACdX,EAAM6C,OAAOjD,KAAI,SAAC/F,GAChB,MAAU,aAANA,EAEA,gCACGmG,EAAM9K,SAAS+D,SAAS,QACvB,eAACyI,GAAa,CACZxB,QAASF,EAAME,QACfiC,OAAO,OACP5P,EAAGuQ,EAAQ,QACX/S,GAAIqQ,EAAS,IACbqC,WAAYzC,EAAMyC,aAGpB,GAEDzC,EAAM9K,SAAS+D,SAAS,SACzBd,GAAM6H,EAAM5H,SAAU4H,EAAME,QAAS,UACnC,eAACwB,GAAa,CACZxB,QAASF,EAAME,QACfiC,OAAO,OACP5P,EAAGuQ,EAAQ,QACX/S,GAAIqQ,EAAS,MAIf,GAEDJ,EAAM9K,SAAS+D,SAAS,cACzBd,GAAM6H,EAAM5H,SAAU4H,EAAME,QAAS,UACnC,eAACwB,GAAa,CACZxB,QAASF,EAAME,QACfiC,OAAO,YACP5P,EAAGuQ,EAAQ,aACX/S,GAAIqQ,EAAS,MAGf,GAEDJ,EAAM9K,SAAS+D,SAAS,WACzBd,GAAM6H,EAAM5H,SAAU4H,EAAME,QAAS,UACnC,eAACwB,GAAa,CACZxB,QAASF,EAAME,QACfiC,OAAO,SACP5P,EAAGuQ,EAAQ,UACX/S,GAAIqQ,EAAS,IACbuC,aAAc3C,EAAM2C,eAGtB,WAKO3Q,IAAXoO,EAAIvG,GACJgC,MAAMC,QAAQsE,EAAIvG,IACb,8BAAK,KAAOuG,EAAIvG,GAAG2H,KAAK,OAAS,OACnC,8BAAKpB,EAAIvG,UAHhB,CAIF,MAIR,WAMZ,CDhFA0D,KAAYC,QAAQC,IAAIsF,KAAOC,KAAaC,M,qBER5C1F,KAAYC,QAAQC,IAAIyF,MAExB,IAAI1W,GAAO8M,IAAMC,YAEF,SAAS4J,GAAKC,GAC3B,IAAQvP,EAASwP,cAATxP,KACR,EAAwCyP,cAAiB,mBAAlDC,EAAY,KAAEC,EAAe,KACpC,EAAgC7J,wBAAS3H,GAAU,mBAA5CqG,EAAQ,KAAEoL,EAAW,KAC5B,EAA4B9J,wBAAS3H,GAAU,mBAAxC6Q,EAAM,KAAEa,EAAS,KACxB,EAAgC/J,wBAAS3H,GAAU,mBAA5CkD,EAAQ,KAAEyO,EAAW,KAE5B,EAA8BhK,mBAAS,GAAE,mBAAlCiK,EAAO,KAAEC,EAAU,KAC1B,EAAkClK,mBAAS,GAAE,mBAAtCmK,EAAS,KAAEC,EAAY,KAE9B,EAA8BpK,qBAAU,mBAAjCqK,EAAO,KAAEC,EAAU,KAC1B,EAA8BtK,qBAAU,mBAAjCuK,EAAO,KAAEC,EAAU,KAE1B,EAAgCxK,qBAAU,mBAAnCrF,EAAQ,KAAE8P,EAAW,KAC5B,EAAgCzK,qBAAU,mBAAnCpF,EAAQ,KAAE8P,EAAW,KAE5B,EAAoC1K,qBAAU,oBAAvCzF,GAAU,MAAEoQ,GAAa,MAE1B5F,GAAK9N,aAAa6D,QAAQ,aAEhCjI,GAAKuN,QAAiB,OAAP2E,GAAcA,GAAK,GAElCpD,qBAAU,WAER,IAAMiJ,EAAS,iDAAG,4GAAc,OAAP/Q,EAAE,+BAAG,CAAC,EAAC,kBAGLD,EAAYM,EAAML,GAAI,KAAD,EAAtC7C,EAAQ,OAGd+S,EAAU1O,EAAMnB,IAChB4P,EAAY9S,EAASqD,WACKhC,IAAtBoD,EAAYvB,IAAqB8P,EAAYvO,EAAYvB,IAE7DoQ,EAAWtT,EAAS0D,aACpB8P,EAAWxT,EAASyD,aAEpBkQ,GAAc3T,EAASuD,YAEvBkQ,EAAYzT,EAAS2D,UACrB+P,EAAY1T,EAAS4D,UAAU,kDAE/BtC,QAAQC,IAAI,EAAD,IAEXwR,OAAU1R,GACVyR,OAAYzR,GACZiS,OAAWjS,GACXmS,OAAWnS,GACXsS,QAActS,GACdoS,OAAYpS,GACZqS,OAAYrS,GAAW,0DAE1B,kBA5Bc,mCA+BTwS,EACyB,OAA7BjB,EAAaxP,IAAI,QAAmBwP,EAAaxP,IAAI,QAAU,EACjE8P,EAAWW,GAEX,IAAM5Q,EAC0B,OAA9B2P,EAAaxP,IAAI,SAAoBwP,EAAaxP,IAAI,SAAW,GACnEgQ,EAAanQ,GAKb2Q,EAHW,CAAE1Q,KAAM2Q,EAAK5Q,MAAOA,IAK5BtC,MAAMW,QAAQV,MACnB,GAAG,CAAC6R,EAAQvP,EAAM0P,IAElB,IAWMkB,GAAmB,WACvB,IAAMC,EAAe1F,SAAS4E,EAAS,IAAM,EAAI,EAC3Ce,EAAe3F,SAAS4E,EAAS,IAAM,EAAI1P,GAEjD,OACE,sBAAK0G,MAAO,CAAEgK,QAAS,cAAe3J,MAAO,QAAY,SACvD,gBAAC4J,GAAA,EAAU,CACTjK,MAAO,CACLkK,UAAW,SACXC,WAAY,OACZ5J,YAAa,QACb,UAEF,eAAC0J,GAAA,EAAWG,MAAK,CACfC,SAAsB,IAAZrB,EACVxK,QAAS,kBAAMoK,EAAgB,CAAE3P,KAAM,EAAGD,MAAOkQ,GAAY,IAE/D,eAACe,GAAA,EAAWK,KAAI,CACdD,UAAWf,EACX9K,QAAS,kBACPoK,EAAgB,CAAE3P,KAAMS,EAAUV,MAAOkQ,GAAY,IAGxDY,GAAgB,eAACG,GAAA,EAAWM,SAAQ,IACpCnG,SAAS4E,EAAS,IAAM,EAAI,GAC3B,eAACiB,GAAA,EAAWhE,KAAI,CACdzH,QAAS,kBACPoK,EAAgB,CACd3P,KAAMmL,SAAS4E,EAAS,IAAM,EAC9BhQ,MAAOkQ,GACP,EACH,SAEA9E,SAAS4E,EAAS,IAAM,IAG7B,eAACiB,GAAA,EAAWhE,KAAI,UACd,6BAAI+C,MAEL5E,SAAS4E,EAAS,IAAM,GAAK1P,IAC5B,eAAC2Q,GAAA,EAAWhE,KAAI,CACdzH,QAAS,kBACPoK,EAAgB,CACd3P,KAAMmL,SAAS4E,EAAS,IAAM,EAC9BhQ,MAAOkQ,GACP,EACH,SAEA9E,SAAS4E,EAAS,IAAM,IAG5Be,GAAgB,eAACE,GAAA,EAAWM,SAAQ,IAErC,eAACN,GAAA,EAAWO,KAAI,CACdH,UAAWjB,EACX5K,QAAS,kBACPoK,EAAgB,CAAE3P,KAAMU,EAAUX,MAAOkQ,GAAY,IAGzD,eAACe,GAAA,EAAWQ,KAAI,CACdJ,SAAUrB,IAAY1P,GACtBkF,QAAS,kBACPoK,EAAgB,CAAE3P,KAAMK,GAAYN,MAAOkQ,GAAY,QAMnE,EACA,OACE,uBAAK3J,UAAU,OAAM,UACnB,0BAAQA,UAAU,cAAa,UAC5B6C,GAAWnJ,QAES7B,IAApBmE,EAAUtC,IACTsE,GAAM3L,GAAKuN,QAASlG,EAAM,WACxB,eAAC,IAAO,CAACiH,GAAI,QAAUjH,EAAO,IAAI,SAChC,eAACqF,EAAA,EAAM,CAACC,QAAQ,OAAO4B,KAAK,KAAI,SAC9B,oBAEEZ,UAAU,oBACV,cAAY,OACZa,MAAO,MACPJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,MARNvH,EAAO,SAFsBA,EAAO,WADPA,EAAO,mBAkBrD,wBAAMsG,UAAU,eAAc,UAC5B,eAACyI,GAAY,CACX1C,QAASrM,EACTuE,SAAU5L,GAAKuN,QACf8I,OAAQA,EACRnW,UAAW2L,EACXnD,SAAUA,EACVuN,WAhHW,SAAC1S,GAClB,OAAOsI,EAASiN,MAAK,SAACC,GAAC,OAAKA,EAAEhQ,MAAQxF,CAAE,GAC1C,EA+GQ4S,aA7Ga,SAAC5S,GACpB,IAAIwI,EAAMF,EAAS3E,QAAO,SAACiF,GACzB,OAAOA,EAAGpD,MAAQxF,CACpB,IACA0T,EAAYlL,EACd,IA0GM,eAACkM,GAAgB,SAIzB,C,kCCzMe,SAASe,GAAYpC,GAElC,MAAgCzJ,mBAAS,IAAG,mBAArC1N,EAAQ,KAAEwZ,EAAW,KAC5B,EAAwB9L,mBAAS,IAAG,mBAA7BnN,EAAI,KAAEkZ,EAAO,KACpB,EAA4B/L,mBAAS,IAAG,mBAAjCxN,EAAM,KAAEwZ,EAAS,KACxB,EAAsChM,mBAAS,IAAG,mBAA3CiM,EAAW,KAAEC,EAAc,KAClC,EAAgClM,mBAAS,IAAG,mBAArCzN,EAAQ,KAAE4Z,EAAW,KAC5B,EAA8CnM,mBAAS,IAAG,mBAAnDoM,EAAe,KAAEC,EAAkB,KAC1C,EAAsBrM,mBAAS,IAAG,mBAA3B/G,EAAG,KAAEgH,EAAM,KA8BlB0B,qBAAU,WACR,IAAMrP,EAAW2E,aAAa6D,QAAQ,YAChCjI,EAAOoE,aAAa6D,QAAQ,aAC5BtI,EAASyE,aAAa6D,QAAQ,eACpCgR,EAAyB,OAAbxZ,EAAoBA,EAAW,IAC3CyZ,EAAiB,OAATlZ,EAAgBA,EAAO,IAC/BmZ,EAAqB,OAAXxZ,GAA8B,KAAXA,EAAgBA,EAAS,IACxD,GAAG,IAEH,IAAM8Z,EAAc,iDAAG,WAAOpM,GAAC,iFAI5B,GAHDA,EAAEC,iBACkB,KAAhB8L,GACFhM,EAAOhC,KAAS9J,gBAEd5B,IAAa6Z,EAAe,gBACE,OAAhCnM,EAAOhC,KAAS/J,gBAAgB,6BAGjB,KAAb3B,GAAuC,KAApB6Z,EAAsB,gBACZ,OAA/BnM,EAAOhC,KAAS5J,eAAe,oDAIzBM,EACJrC,EACA2Z,EACW,MAAXzZ,EAAiBA,OAAS6F,GAC1B,GACA,KAAD,2BAE+B,OAF/B,0BAED4H,EAAOhC,KAAS7J,gBAAgB,2BAG0B,IAA7C+K,OAAO4J,QAAQ9K,KAAShK,qBAC5B,CAAD,2CAEiBkF,EACrB,QACA,CAAE5G,SAAUA,GACZD,GACA,KAAD,GAJK0E,EAAQ,OAKdkV,EAAe,IACfC,EAAY,IACZE,EAAmB,IACc,MAA7BrV,EAASA,SAAS4G,QACpBqC,EAAOhC,KAAS3J,kBACjB,mDAEDgE,QAAQC,IAAI,EAAD,IAAQ,kEAGxB,gBA1CmB,sCA4CpB,OACE,uBAAKiI,UAAU,OAAM,UACnB,0BAAQA,UAAU,cAAa,UAC5BvC,KAASrL,QAAO,OAAO,6BAAIN,IAAa,QACxC2L,KAASjK,qBAEZ,wBAAMwM,UAAU,eAAc,UAC5B,gBAAC+L,GAAA,EAAS,CAACC,OAAK,YACd,gBAACC,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAACC,GAAI,EAAE,2BACX,eAACD,GAAA,EAAG,UACF,6BAAIpa,SAGR,gBAACma,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAACC,GAAI,EAAE,SAAE1O,KAASpL,OACtB,gBAAC6Z,GAAA,EAAG,WACD7Z,EAAI,OAjGF,UAATA,EAEA,oBAAG2N,UAAU,iBAAiB,cAAY,OAAOa,MAAM,UAEvC,aAATxO,EAEP,oBACE2N,UAAU,sBACV,cAAY,OACZa,MAAM,aAGQ,YAATxO,EAEP,oBAAG2N,UAAU,iBAAiB,cAAY,OAAOa,MAAM,YAEvC,aAATxO,EAEP,oBAAG2N,UAAU,iBAAiB,cAAY,OAAOa,MAAM,aAIvD,oBAAGb,UAAU,aAAa,cAAY,OAAO,aAAW,eA+EtD,gBAACiM,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAACC,GAAI,EAAE,SAAE1O,KAASzL,OAAS,MAC/B,eAACka,GAAA,EAAG,UACF,6BAAIla,YAIV,wBACA,gBAAC+Z,GAAA,EAAS,CAACC,OAAK,YACd,eAACE,GAAA,EAAG,UACF,eAACD,GAAA,EAAG,UACF,mDAIJ,eAACA,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,gBAACjM,GAAA,EAAI,CAACC,SAAU4L,EAAe,UAC7B,eAACG,GAAA,EAAG,UACF,eAAChM,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAACC,GAAA,EAAKK,QAAO,CACXvJ,KAAM,WACNqV,SAAU,SAAC1M,GACTA,EAAEC,iBACF+L,EAAehM,EAAE2B,OAAOvF,MAC1B,EACAA,MAAO2P,EACPjL,YAAa/C,KAAS5K,MAAQ,sBAIpC,eAACoZ,GAAA,EAAG,UACF,eAAChM,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAACC,GAAA,EAAKK,QAAO,CACXvJ,KAAM,WACNqV,SAAU,SAAC1M,GACTA,EAAEC,iBACFgM,EAAYjM,EAAE2B,OAAOvF,MACvB,EACAA,MAAO/J,EACPyO,YAAa/C,KAAS5K,MAAQ,sBAIpC,eAACoZ,GAAA,EAAG,UACF,gBAAChM,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,UAC1B,eAACC,GAAA,EAAKK,QAAO,CACXvJ,KAAM,WACNqV,SAAU,SAAC1M,GACTA,EAAEC,iBACFkM,EAAmBnM,EAAE2B,OAAOvF,MAC9B,EACAA,MAAO8P,EACPpL,YAAa/C,KAASpJ,OAAS,gBAC/B,mBAAiB,sBAEnB,eAAC4L,GAAA,EAAKoM,KAAI,CAACzW,GAAG,oBAAoB0W,OAAK,WACpC7T,SAIP,eAACsG,EAAA,EAAM,CAACC,QAAQ,UAAUjI,KAAK,SAAQ,SACpC0G,KAASxJ,wBAS5B,C,cCxLe,SAASsY,KACtB,OACE,sBAAKvM,UAAU,cAAa,SAC1B,sBAAKA,UAAU,WAAU,SACvB,sBAAKA,UAAU,YAAW,SAAEvC,KAAS/I,uBAI7C,C,4CCTe8X,I,OAFIrN,IAAMsN,iBCUnBC,GAAmBvN,IAAMC,YAEhB,SAASuN,GAAgB9G,GACtC,MAAwBrG,oBAAS,GAAM,mBAAhCoN,EAAI,KAAEC,EAAO,KACpB,EAAkCrN,oBAAS,GAAM,mBAA1CsN,EAAS,KAAEC,EAAY,KAE1BC,EAAY7N,IAAM8N,SAChBC,EAAkBC,qBAAWX,IAAYha,cAC/Cka,GAAiB9M,QAAU,EAE3B,IAAMwN,EAAc,WAAH,OAASP,GAAQ,EAAO,EAWzC1L,qBAAU,WACJuL,GAAiB9M,QAAUsN,EAAgB1a,cAAcqG,SAC3D6T,GAAiB9M,QAAUsN,EAAgB1a,cAAcqG,OAEzDkU,GAAa,GACbM,YAAW,WACTN,GAAa,EACf,GAAG,KAEP,GAAG,CAACG,EAAgB1a,iBAG6B,IAA7C,QAAQqV,KAAKlJ,OAAOhB,UAAUmK,WAChCkF,EAAUpN,QAAU,WAEpBoN,EAAUpN,QAAUjF,EAEtB,IAAM2S,EAAWJ,EAAgB1a,cAAc+G,QAC7C,SAACmG,GAAC,MAAgB,UAAXA,EAAEpH,IAAgB,IAG3B,OACE,uBACE0H,UAAU,kBACVS,MACwB,aAAtBuM,EAAUpN,UACmC,IAA7C,QAAQiI,KAAKlJ,OAAOhB,UAAUmK,WAC1B,CAAE/G,OAAQ,SACV,CAAC,EACN,UAED,gBAAChC,EAAA,EAAM,CACLC,QAAQ,OACRC,QAAS,WA3CU4N,GAAQ,EA6C3B,EACApM,MAAO,CACLC,MAAO,OACP6M,eAAgB,QAChB,UAED9P,KAASjL,cAAa,OACvB,eAACgb,GAAA,EAAK,CACJC,MAAI,EACJC,GAAIJ,EAASzU,OAAS,EAAI,SAAW,UACrCmH,UAAS,iBAAY8M,EAAY,aAAe,IAAK,SAEpDI,EAAgB1a,cAAcqG,SAEjC,uBAAMmH,UAAU,kBAAiB,qCAGnC,gBAAC2N,GAAA,EAAS,CACRlN,MAAO,CACLmN,gBAAiB,UACjBlN,MAAO,QAETkM,KAAMA,EACNiB,OAAQT,EACRjF,UAAU,MACV7P,KAAM,mBACNwV,QAAQ,EACRC,UAAU,EACVC,UAAU,EAAK,UAEf,eAACL,GAAA,EAAU/G,OAAM,UACf,gBAAC+G,GAAA,EAAUM,MAAK,WACbxQ,KAASjL,cAAa,OAEvB,eAACgb,GAAA,EAAK,CAACC,MAAI,EAACC,GAAIJ,EAASzU,OAAS,EAAI,SAAW,UAAU,SACxDqU,EAAgB1a,cAAcqG,SACzB,eAER,eAACkG,EAAA,EAAM,CAACC,QAAQ,oBAAoBC,QAAS,kBAAMmO,GAAa,EAAC,SAC9D3P,KAASnJ,MAAQ,IAAMmJ,KAASjL,qBAIvC,eAACmb,GAAA,EAAU9G,KAAI,UACb,uBACEpG,MAAO,CACLK,MAAO,OACPC,OAAQ,QACR,UAEwC,IAAzCmM,EAAgB1a,cAAcqG,QAC7B,eAACkG,EAAA,EAAM,CACLC,QAAQ,UACRC,QAAS,kBAAMiO,EAAgBrX,oBAAoB,EAAC,SAEnD4H,KAAS7K,YAId,eAACsb,GAAA,EAAc,UACZhB,EAAgB1a,cAAciT,KAAI,SAAC0I,EAAcxF,GAChD,IAAI5R,EAGJ,MAF0B,SAAtBoX,EAAa7V,OAAiBvB,EAAO,WACf,UAAtBoX,EAAa7V,OAAkBvB,EAAO,UAExC,gBAACqX,GAAA,EAAK,CACJpO,UAAU,qBAEV0N,GAAI3W,EACJsX,WAAW,EACXC,QAAS,WACPpB,EAAgBvX,mBAAmBgT,EACrC,EAAE,UAEF,gBAACyF,GAAA,EAAMxH,OAAM,WACX,sBACE2H,IAAI,2BACJvO,UAAU,eACVwO,IAAI,KAEN,yBAAQxO,UAAU,UAAS,SAAEmO,EAAa7V,OAC1C,iCAAQ6V,EAAa5V,KAAKyK,MAAM,EAAG,SAErC,eAACoL,GAAA,EAAMvH,KAAI,UAAEsH,EAAa1V,QAhBrB,gBAAkBkQ,EAmB7B,gBAOd,C,OCvIAvF,KAAYC,QAAQC,IAClBC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,MAGF,IAAIC,GAAc5E,IAAMC,YACpB4E,GAAY7E,IAAMC,YAElB6E,GAAmB9E,IAAMC,YACzB8E,GAAW/E,IAAMC,YAEjB/M,GAAO8M,IAAMC,YACbtN,GAAWqN,IAAMC,YACjBpN,GAASmN,IAAMC,YAEJ,SAASqP,KACtB,MAAgCjP,oBAAS,GAAM,mBAA9B6E,GAAF,KAAa,MAEtBC,EAAM7N,aAAa6D,QAAQ,YAC3BiK,EAAK9N,aAAa6D,QAAQ,aAC1BkK,EAAK/N,aAAa6D,QAAQ,eA4HhC,OA1HAxI,GAAS8N,QAAkB,OAAR0E,EAAeA,EAAM,GACxCjS,GAAKuN,QAAiB,OAAP2E,EAAcA,EAAK,GAClCvS,GAAO4N,QAAiB,OAAP4E,GAAsB,KAAPA,EAAYA,EAAK,IAGjDrD,qBAAU,WAoBR,SAASsD,IACP,IAAIC,EACAC,EAEJ,GAAiC,OAA7BV,GAAiBrE,QACnB+E,EAAeV,GAAiBrE,QAAU,MAGvC,CAEH,GAA0B,OAAtBoE,GAAUpE,QAAkB,CAC9B,IAAMgF,EAAiBnO,aAAa6D,QAAQ,cAErB,OAAnBsK,GACFZ,GAAUpE,QAAUgF,EACpBF,EAAKG,SAASD,EAAgB,MAI9BF,EAAK1N,KAAK8N,MACVd,GAAUpE,QAAU8E,EAExB,MAGEA,EAAKG,SAASb,GAAUpE,QAAS,IAEV,OAArBsE,GAAStE,UACXsE,GAAStE,QA9Cf,WACE,IAAImF,EAAMtO,aAAa6D,QAAQ,yBAE/B,OAAY,OAARyK,EAAqB,IACrBA,EAAIC,SAAS,KACqB,GAA7BH,SAASE,EAAI/B,MAAM,GAAI,IAAW,GAAK,IACrC+B,EAAIC,SAAS,KACc,GAA7BH,SAASE,EAAI/B,MAAM,GAAI,IAAW,KAChC+B,EAAIC,SAAS,KACc,IAA7BH,SAASE,EAAI/B,MAAM,GAAI,IAMlC,CA+ByBiC,IAGrBN,GAFgBD,EAAKR,GAAStE,QAEJ5I,KAAK8N,OAAS,GAC1C,CAcA,GAZIH,EAAe,KACjBO,cAAcnB,GAAYnE,SAC1BvI,IAAed,MAAK,WAClB0N,GAAiBrE,QAAU,KAC3BoE,GAAUpE,QAAU,KAEpBmE,GAAYnE,QAAUuF,aAAY,WAChCV,GACF,GAAG,IAEL,KAEEE,GAAgB,EAIlB,OAHAlO,aAAa2O,aAEbzG,OAAOC,SAASkB,QAAQ,KAO1BmE,GAAiBrE,QAAUiF,SAASF,EAAc,GACpD,CAEAZ,GAAYnE,QAAUuF,aAAY,WAChCV,GACF,GAAG,IACL,GAAG,IAoCD,sBAAKzE,UAAU,iBAAgB,SAC7B,sBAAKA,UAAU,uBAAsB,SACnC,sBAAKA,UAAU,eAAc,SAC3B,gBAAC+L,GAAA,EAAS,CAACC,OAAK,YACd,gBAACC,GAAA,EAAG,CAACxL,MAAO,CAAEiO,QAAS,GAAI,UACzB,eAACxC,GAAA,EAAG,UACF,eAAC,IAAO,CAACvL,GAAG,QAAQX,UAAU,WAAU,SACrCvF,MAGL,eAACyR,GAAA,EAAG,UACF,gBAAC,IAAO,CAACvL,GAAE,gBAAkB,UAC1BlD,KAASrL,QAAU,IACpB,6BAAIN,GAAS8N,YAAY,iBAG7B,eAACsM,GAAA,EAAG,UACF,uBAAKlM,UAAU,sBAAqB,UACjCvC,KAASpL,KAAO,IA9CV,UAAjBA,GAAKuN,QAEL,oBAAGI,UAAU,iBAAiB,cAAY,OAAOa,MAAM,UAE/B,aAAjBxO,GAAKuN,QAEZ,oBACEI,UAAU,sBACV,cAAY,OACZa,MAAM,aAGgB,YAAjBxO,GAAKuN,QAEZ,oBAAGI,UAAU,iBAAiB,cAAY,OAAOa,MAAM,YAE/B,aAAjBxO,GAAKuN,QAEZ,oBAAGI,UAAU,iBAAiB,cAAY,OAAOa,MAAM,aAIvD,oBAAGb,UAAU,aAAa,cAAY,OAAO,aAAW,cA4BlD,eAACkM,GAAA,EAAG,UACF,uBAAKlM,UAAU,sBAAqB,UACjCvC,KAASzL,OAAS,IACnB,6BAAIA,GAAO4N,eAGf,eAACsM,GAAA,EAAG,UACF,eAACnN,EAAA,EAAM,CAACC,QAAQ,iBAAiBC,QAAS,kBA9DtDxI,aAAa2O,aACbG,SAAS3G,SAASkB,QAAQ,IA6D0C,EAAC,SACtDrC,KAASrJ,WAIbsG,EAAU7B,OAAS,GAClB,eAACqT,GAAA,EAAG,UACF,eAAC,GAAgB,MAGrB,eAACA,GAAA,EAAG,UACF,eAACS,GAAe,SAGpB,gBAACV,GAAA,EAAG,CAACxL,MAAO,CAAEiO,QAAS,GAAI,UACzB,wBACA,sBACEjO,MAAO,CACLkO,eAAgB,SAChBC,WAAY,SACZjE,UAAW,cACX,SAEDlN,KAASlL,eAGd,eAAC0Z,GAAA,EAAG,CAACxL,MAAO,CAAEiO,QAAS,GAAI,SACxBvP,IAAMoH,SAASC,QACdvO,OAAOyK,KAAK7H,GAAO4K,KAAI,SAACrN,GAEtB,OAAK4F,GAAM3L,GAAKuN,QAASxH,EAAG,QAI1B,eAAC8T,GAAA,EAAG,UACF,eAAC,IAAO,CACNvL,GAAI,IAAMvI,EACV4H,UAAW,SAAC0F,GAAO,OACjBA,EAAQC,SAAW,SAAW,EAAE,EAIlC1G,QAAS,kBAAMoF,GAAY,EAAM,EAAC,SAEjCxB,GAAWzK,IAHPA,KAVF,EAiBX,eAQhB,C,aClQWyW,GAAc,CACvBC,QAAS,SAACpZ,GAAS,EACnBqZ,UAAW,SAACnZ,GAAQ,EACpBoZ,UAAW,WAAO,GAOb,SAAeC,GAAgB,EAAD,yCAqErC,cAFC,OAED,mCArEO,WAA+BC,EAAMC,EAAKC,EAAQC,EAAQC,GAAQ,6FAoCtE,OAnCKC,EAAWL,EAAK5W,KAChBkX,EAAUD,EAASE,MALK,KAK0B,IAElD9Y,EAAO,IAAI+Y,UACZC,OAAO,OAAQT,GAGhB5V,GACM,IAAR6V,QAAyBtX,IAARsX,EACbvd,EACA,gBACA4d,EACA,aACAJ,EACA,aACAC,EACA,aACAC,EACA1d,EACA,gBACA4d,EACA,4BACAJ,EACA,aACAC,EACA,aACAC,EAEAtX,EAAQ,CACZ,eAAgB,sBAChB,gBAAiB,WACjBV,cAAeC,KAEXvB,EAAU,CACdC,QAAS+B,GACT,EAAD,iBAIkB5C,EAASoC,IAAI8B,EAAK3C,EAAMX,GAAS,KAAD,GAAjDQ,EAAQ,OACRqY,GAAYC,QAAQ,CAClB/X,KAAM,OACN0B,IACE8W,EACA,mCACA/Y,EAASG,KAAKiZ,OAAOC,QAAQxI,KAAK,MAClC,gBACA7Q,EAASG,KAAKiZ,OAAOE,QAAQzI,KAAK,MAClC,mBACA7Q,EAASG,KAAKiZ,OAAOG,WAAW1I,KAAK,MACrC,SACD,kDAEHvP,QAAQC,IAAI,qBACZ8W,GAAYC,QAAQ,CAClB/X,KAAM,QACN0B,IACE8W,EACA,oBACA,KAAM/Y,SAASG,KAAKqC,QACpB,UACiCnB,IAAhC,KAAMrB,SAASG,KAAKoJ,QACjB,KAAMvJ,SAASG,KAAKoJ,QAAU,KAC9B,MACL,2DAEN,sBAGM,SAAeiQ,GAAgB,EAAD,qCA6CpC,wDA7CM,WAA+BR,EAASzZ,EAAMoZ,GAAG,uFAarD,OAZG7V,GACM,IAAR6V,QAAyBtX,IAARsX,EACbvd,EAAU,gBAAkB4d,EAC5B5d,EAAU,gBAAkB4d,EAAU,iBAEtC3R,EAAO9H,EAAKka,QAAQ3M,IAAI,GAAGzF,KAC3B7H,EAAU,CACdC,QAAS,CACP,eAAgB,mBAChB,gBAAiB,WACjBqB,cAAeC,MAEjB,EAAD,gBAGkBnC,EAASoC,IAAI8B,EAAKR,KAAKC,UAAUhD,GAAOC,GAAS,KAAD,EAAjEQ,EAAQ,OACRqY,GAAYC,QAAQ,CAClB/X,KAAM,OACN0B,IACE,QACAoF,EACA,mCACArH,EAASG,KAAKiZ,OAAOC,QAAQxI,KAAK,MAClC,gBACA7Q,EAASG,KAAKiZ,OAAOE,QAAQzI,KAAK,MAClC,mBACA7Q,EAASG,KAAKiZ,OAAOG,WAAW1I,KAAK,MACrC,SACD,kDAEHvP,QAAQC,IAAI,qBACZ8W,GAAYC,QAAQ,CAClB/X,KAAM,QACN0B,IACE,QACAoF,EACA,oBACA,KAAMrH,SAASG,KAAKqC,QACpB,UACiCnB,IAAhC,KAAMrB,SAASG,KAAKoJ,QACjB,KAAMvJ,SAASG,KAAKoJ,QAAU,KAC9B,MACL,2DAEN,sBAEM,SAAemQ,GAAgB,EAAD,uCAoCpC,wDApCM,WACLC,EACAf,EACAC,EACAC,GAAQ,uGAYuC,OAX/Cc,EAAQ,oCAAGvY,EAELyB,EACJ,eACA6W,EACA,gBACAf,EACA,aACAC,EACA,aACAC,EACIe,EAAWF,EAAgB,eAAe,EAAD,gBAG1BG,GAAchX,GAAK,KAAD,EAYlC,OAZG3C,EAAI,OACJ4Z,EAAO,IAAIC,KAAK,CAAC7Z,IACnBuY,EAAO,UACMrX,IAAbuY,IAAuC,IAAbA,EAC5BK,kBAAOF,EAAMF,GAEbnB,EAAO,IAAIwB,KAAK,CAACH,GAAOF,GAG1BxB,GAAYC,QAAQ,CAClB/X,KAAM,OACN0B,IAAK4X,EAAW,gCACf,kBACInB,GAAI,kCAEXpX,QAAQC,IAAI,EAAD,IAAQ,0DAEtB,yBAEM,SAAeuY,GAAc,GAAD,gCA2BlC,wDA3BM,WAA6BK,GAAa,mFAQ9C,OANKC,EAAS,CACbC,OAAQ,MACRvX,IAHU1H,EAAU,IAAM+e,EAI1B1a,QAAS,CACPqB,cAAeC,MAEjB,EAAD,gBAIkBnC,EAASwb,GAAQ,KAAD,EAAzB,OAARpa,EAAQ,yBACDA,EAASG,MAAI,gCAEpBmB,QAAQC,IAAI,qBACZD,QAAQC,IAAI,EAAD,IACX8W,GAAYC,QAAQ,CAClB/X,KAAM,QACN0B,IACE,KAAMjC,SAASG,KAAKqC,QACpB,UACiCnB,IAAhC,KAAMrB,SAASG,KAAKoJ,QACjB,KAAMvJ,SAASG,KAAKoJ,QACpB,MACL,0DAEN,sBAEM,SAAe+Q,GAAmB,EAAD,mCAgCvC,wDAhCM,WAAkCC,EAAUC,GAAQ,iFAUxD,OAPKJ,EAAS,CACbC,OAAQ,MACRvX,IAJU1H,EAAU,gBAAkBmf,EAKtC9a,QAAS,CACPqB,cAAeC,KAEjBZ,KAAM,CAAEsZ,QAAS,CAAEgB,OAAQD,KAC3B,EAAD,gBAIkB5b,EAASwb,GAAQ,KAAD,EAAzB,OACR/B,GAAYC,QAAQ,CAClB/X,KAAM,OACN0B,IAAK,uCAAyCuY,EAAS3J,KAAK,OAAS,OACpE,gDAEHvP,QAAQC,IAAI,qBACZD,QAAQC,IAAI,EAAD,IACX8W,GAAYC,QAAQ,CAClB/X,KAAM,QACN0B,IACE,KAAMjC,SAASG,KAAKqC,QACpB,UACiCnB,IAAhC,KAAMrB,SAASG,KAAKoJ,QACjB,KAAMvJ,SAASG,KAAKoJ,QAAU,KAC9B,QACL,0DAEN,sB,wBC5MYmR,GAAc,SAACrL,GAE1B,IACIsL,EADEC,EAAUjE,qBAAWX,IAK3B,GAH2B2E,OAAXtZ,IAAZuZ,EAAmCA,EAAQC,QAC9B,CAAC,OAGCxZ,IAAjBgO,EAAMjD,aACa/K,IAAnBgO,EAAM3H,eACmBrG,IAAzBgO,EAAMyL,qBACqBzZ,IAA3BgO,EAAM0L,uBACmB1Z,IAAzBgO,EAAM2L,qBAC0B3Z,IAAhCgO,EAAM4L,4BACwB5Z,IAA9BgO,EAAM6L,oBAEN,MAAO,UAu+CT,OACE,gBAACzR,GAAA,EAAI,CAACC,SAAU2F,EAAM2L,eAAe,UACnC,gBAACzF,GAAA,EAAS,CAACC,OAAK,iBAG+BnU,IAA3CgO,EAAM0L,iBAAiB1L,EAAM3H,WAC3B,4BAEwCrG,IAA3CgO,EAAM0L,iBAAiB1L,EAAM3H,WAC5BiB,IAAMoH,SAASC,QACbvO,OAAOC,QAAQ2N,EAAMjD,QAAQ6C,KAAI,YAAmB,IA73BlCrN,EA63BiC,mBAAhBqO,EAAG,KAAE3K,EAAK,KAI3C,QACuCjE,IAArCsF,EAAiB0I,EAAM3H,gBACmBrG,IAA1CsF,EAAiB0I,EAAM3H,UAAUuI,SACb5O,IAApBsZ,EAAUQ,YAER9Z,IADFsZ,EAAUQ,MAAMxU,EAAiB0I,EAAM3H,UAAUuI,IAGjD,OApyCQ,SAACA,EAAKmL,GAC1B,OACE,gBAAC3F,GAAA,EAAG,CACFxL,MAAO,CACLoR,kBAAmB,QACnBC,kBAAmB,MACnBC,aAAc,OACd,UAGF,eAAC7F,GAAA,EAAG,CACF8F,GAjQW,EAkQXvR,MAAO,CACLwR,iBAAkB,SAClBC,iBAAkB,OAClB,SAEF,6BAAIzL,MAEN,eAACyF,GAAA,EAAG,CAAC8F,GApQO,EAoQS,SACnB,eAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,gBAACC,GAAA,EAAKkS,OAAM,CACV,aAAW,iBACXrW,MAAO+J,EAAMjD,OAAO6D,GACpB7Q,GAAI6Q,EACJ2F,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBAAsB/R,EAAE2B,OAAOvF,MAAO,CAAC2K,GAC/C,EACAqE,cACgCjT,IAA9BgO,EAAMyL,eAAe7K,IACjBZ,EAAMyL,eAAe7K,GAE1B,UAED,kCAAShJ,KAASvL,OAAS,IAAMuU,IAChCtH,IAAMoH,SAASC,QACdvO,OAAOC,QAAQ0Z,GAAKnM,KAAI,YAAa,IAAD,mBAAPpN,GAAF,KAAG,MAC5B,OAAO,yBAAQyD,MAAOzD,EAAE,SAAEA,GAC5B,cA/BHoO,EAsCX,CAsvCqB2L,CACL3L,EACA0K,EAAUQ,MAAMxU,EAAiB0I,EAAM3H,UAAUuI,KAIrD,GAAI/E,MAAMC,QAAQ7F,GAAQ,CACxB,GAAwB,kBAAbA,EAAM,GACf,OAh5BY1D,EAg5BcqO,EA94BtC,gBAACwF,GAAA,EAAG,CACFxL,MAAO,CACLoR,kBAAmB,QACnBC,kBAAmB,MACnBC,aAAc,OACd,UAGF,eAAC7F,GAAA,EAAG,CACF8F,GA7pBW,EA8pBXvR,MAAO,CACLwR,iBAAkB,SAClBC,iBAAkB,OAClB,SAEF,6BAAI9Z,MAEN,eAAC8T,GAAA,EAAG,CAAC8F,GA5pBY,EA4pBS,SACvB7S,IAAMoH,SAASC,QACdX,EAAMjD,OAAOxK,GAAGqN,KAAI,SAAC3J,EAAO6M,GAC1B,OACE,eAACsD,GAAA,EAAG,UACF,eAAChM,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAACC,GAAA,EAAKK,QAAO,CACXvJ,KAAK,SACL+T,cAC8BjT,IAA5BgO,EAAMyL,eAAelZ,IACjByN,EAAMyL,eAAelZ,GAG3BgU,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ5M,SAASnF,EAAE2B,OAAOvF,MAAO,IACzB,CAAC1D,EAAGuQ,GAER,EACA7M,MACE2F,MAAMoE,EAAMjD,OAAOxK,GAAGuQ,IAClB,GACA9C,EAAMjD,OAAOxK,GAAGuQ,GAEtBnI,YAAa/C,KAAS5K,MAAQ,IAAMuF,EAAI,IAAMuQ,EAAQ,SAKhE,SAzCCvQ,GA04BG,GAAwB,mBAAb0D,EAAM,GACf,OAnuBY,SAAC2K,GAC3B,OACE,gBAACwF,GAAA,EAAG,CACFxL,MAAO,CACLoR,kBAAmB,QACnBC,kBAAmB,MACnBC,aAAc,OACd,UAGF,eAAC7F,GAAA,EAAG,CACF8F,GA70BW,EA80BXvR,MAAO,CACLwR,iBAAkB,SAClBC,iBAAkB,OAClB,SAEF,6BAAIzL,MAEN,eAACyF,GAAA,EAAG,UACD/M,IAAMoH,SAASC,QACdX,EAAMjD,OAAO6D,GAAKhB,KAAI,SAAC3J,EAAO6M,GAC5B,OACE,gBAACsD,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACT,eAACjT,EAAA,EAAM,CACL+L,cACgCjT,IAA9BgO,EAAMyL,eAAe7K,IACjBZ,EAAMyL,eAAe7K,GAG3BzH,QAAQ,OACR4B,KAAK,KACL3B,QAAS,SAACS,GACRA,EAAEC,iBACFkG,EAAM6L,oBAAoB,CAACjL,EAAKkC,GAClC,EAAE,SAEF,oBACE3I,UAAU,cACV,cAAY,OACZa,MAAM,iBACNJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,WAKjB,eAACiL,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACT,eAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAExB,eAACC,GAAA,EAAKoS,MAAK,CACTtb,KAAK,WACL+T,cACgCjT,IAA9BgO,EAAMyL,eAAe7K,IACjBZ,EAAMyL,eAAe7K,GAG3B2F,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBAAsB/R,EAAE2B,OAAOiR,QAAS,CAC5C7L,EACAkC,GAEJ,EACA2J,QAASzM,EAAMjD,OAAO6D,GAAKkC,GAC3BnI,YAAa/C,KAAS5K,MAAQ,IAAM4T,QAM5C,eAACyF,GAAA,EAAG,CAACqG,GAAG,WAGd,SAtEC9L,EA2EX,CAgpBuB+L,CAAoB/L,GAE7B,GAAwB,kBAAb3K,EAAM,GACf,OA91BW,SAAC2K,GAC1B,IAAIzQ,EAKJ,OAJImb,IAAc,CAAC,QAA6BtZ,IAAxBsZ,EAAUxa,KAAK8P,KACrCzQ,EAAUmb,EAAUxa,KAAK8P,IAIzB,gBAACwF,GAAA,EAAG,CACFxL,MAAO,CACLoR,kBAAmB,QACnBC,kBAAmB,MACnBC,aAAc,OACd,UAGF,eAAC7F,GAAA,EAAG,CACF8F,GA1tBW,EA2tBXvR,MAAO,CACLwR,iBAAkB,SAClBC,iBAAkB,OAClB,SAEF,6BAAIzL,MAEN,eAACyF,GAAA,EAAG,UACD/M,IAAMoH,SAASC,QACdX,EAAMjD,OAAO6D,GAAKhB,KAAI,SAAC3J,EAAO6M,GAC5B,OACE,gBAACsD,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAAC8F,GA3tBE,EA2tBmB,SACxB,eAACjT,EAAA,EAAM,CACL+L,cACgCjT,IAA9BgO,EAAMyL,eAAe7K,IACjBZ,EAAMyL,eAAe7K,GAG3BzH,QAAQ,OACR4B,KAAK,KACL3B,QAAS,SAACS,GACRA,EAAEC,iBACFkG,EAAM6L,oBAAoB,CAACjL,EAAKkC,GAClC,EAAE,SAEF,oBACE3I,UAAU,cACV,cAAY,OACZa,MAAM,iBACNJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,WAKjB,eAACiL,GAAA,EAAG,CAAC8F,GAAIS,KAAKC,IAxvBP,EACA,GAuvB+C,SACpD,eAACzS,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,cACDnI,IAAxBsZ,EAAUxa,KAAK8P,GACd,eAACkM,GAAA,EAAY,CACX7H,cACgCjT,IAA9BgO,EAAMyL,eAAe7K,IACjBZ,EAAMyL,eAAe7K,GAG3B7Q,GAAI6Q,EACJ2F,SAAU,SAAC1M,EAAGkT,GACZlT,EAAEC,iBACFkG,EAAM4L,sBAAsBmB,EAAU,CAACnM,EAAKkC,GAC9C,EACA7M,MAC+B,KAA7B+J,EAAMjD,OAAO6D,GAAKkC,GACd,KACA9C,EAAMjD,OAAO6D,GAAKkC,GAExB3S,QAASA,EACT6c,YAAa,SAAC5J,GAAM,OAClB,eAAC6J,GAAA,EAAS,2BACJ7J,GAAM,IACV8J,MACEtV,KAAS5K,MAAQ,IAAM4T,EAAM,IAAMkC,EAAQ,MAE7C,IAIN,eAAC1I,GAAA,EAAKK,QAAO,CACXvJ,KAAK,OACL+T,cACgCjT,IAA9BgO,EAAMyL,eAAe7K,IACjBZ,EAAMyL,eAAe7K,GAG3B2F,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBAAsB/R,EAAE2B,OAAOvF,MAAO,CAC1C2K,EACAkC,GAEJ,EACA7M,MAAO+J,EAAMjD,OAAO6D,GAAKkC,GACzBnI,YACE/C,KAAS5K,MAAQ,IAAM4T,EAAM,IAAMkC,EAAQ,UAOrD,eAACuD,GAAA,EAAG,CAACqG,GAAG,WAGd,SAnGC9L,EAwGX,CAyuBuBuM,CAAmBvM,GAE5B,GAAI3K,EAAM,GAAGgG,cAAgB7J,OAC3B,OAnpBW,SAACwO,GAC1B,OACE,gBAACwF,GAAA,EAAG,CACFxL,MAAO,CACLoR,kBAAmB,QACnBC,kBAAmB,MACnBC,aAAc,OACd,UAGF,eAAC7F,GAAA,EAAG,CACF8F,GAn6BW,EAo6BXvR,MAAO,CACLwR,iBAAkB,SAClBC,iBAAkB,OAClB,SAEF,6BAAIzL,MAEN,gBAACyF,GAAA,EAAG,WACF,gBAACD,GAAA,EAAG,CACFxL,MAAO,CACLoR,kBAAmB,SACnBC,kBAAmB,MACnBC,aAAc,OACd,eAE6Bla,IAA9BgO,EAAMyL,eAAe7K,IACpB,eAACyF,GAAA,EAAG,CAAC8F,GAx6BM,EAw6Be,SACxB,6BACE,4CAIL7S,IAAMoH,SAASC,QACdvO,OAAOC,QAAQ2N,EAAMjD,OAAO6D,GAAK,IAAIhB,KAAI,SAAC/F,GACxC,OACE,eAACwM,GAAA,EAAG,CACF8F,GACkB,mBAATtS,EAAE,GAv7BR,GAy7BmB,kBAATA,EAAE,IAEFA,EAAE,GA17BV,GA67BJ,SAED,6BACE,6BAAImD,GAAW4D,GAAO,IAAM/G,EAAE,QAItC,QAGHP,IAAMoH,SAASC,QACdX,EAAMjD,OAAO6D,GAAKhB,KAAI,SAAC/P,EAAKiT,GAC1B,OACE,gBAACsD,GAAA,EAAG,gBAC6BpU,IAA9BgO,EAAMyL,eAAe7K,IACpB,eAACyF,GAAA,EAAG,CAAC8F,GAz8BA,EAy8BqB,SACxB,eAACjT,EAAA,EAAM,CACL+L,cACgCjT,IAA9BgO,EAAMyL,eAAe7K,GAEvBzH,QAAQ,OACR4B,KAAK,KACL3B,QAAS,SAACS,GACRA,EAAEC,iBACFkG,EAAM6L,oBAAoB,CAACjL,EAAKkC,GAClC,EAAE,SAEF,oBACE3I,UAAU,cACV,cAAY,OACZa,MAAM,iBACNJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,WAOlB9B,IAAMoH,SAASC,QACdvO,OAAOC,QAAQxC,GAAK+P,KAAI,YAAiB,IAAD,mBAAdrN,EAAC,KAAE0D,EAAK,KAC1BgP,OAC0BjT,IAA9BgO,EAAMyL,eAAe7K,UACgB5O,IAAjCgO,EAAMyL,eAAe7K,GAAKrO,GACxByN,EAAMyL,eAAe7K,GAAKrO,IACI,IAA9ByN,EAAMyL,eAAe7K,IAK7B,MAAqB,kBAAV3K,EAEP,eAACoQ,GAAA,EAAG,CAAC8F,GAp/BN,EAo/B2B,SACxB,eAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAACC,GAAA,EAAKK,QAAO,CACXvJ,KAAK,SACLqV,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ5M,SAASnF,EAAE2B,OAAOvF,MAAO,IACzB,CAAC2K,EAAKkC,EAAOvQ,GAEjB,EACA0S,SAAUA,EACVhP,MACE2F,MAAMoE,EAAMjD,OAAO6D,GAAKkC,GAAOvQ,IAC3B,GACAyN,EAAMjD,OAAO6D,GAAKkC,GAAOvQ,GAE/BoI,YAAa/C,KAAS5K,MAAQ,IAAMuF,QAOzB,mBAAV0D,EAEP,eAACoQ,GAAA,EAAG,CAAC8F,GA/gCR,EA+gC2B,SACtB,eAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAACC,GAAA,EAAKoS,MAAK,CACTtb,KAAK,WACLqV,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ/R,EAAE2B,OAAOiR,QACT,CAAC7L,EAAKkC,EAAOvQ,GAEjB,EACA0S,SAAUA,EACVwH,QAASzM,EAAMjD,OAAO6D,GAAKkC,GAAOvQ,GAClCoI,YAAa/C,KAAS5K,MAAQ,IAAMuF,aAQPP,IAArCsF,EAAiB0I,EAAM3H,gBACmBrG,IAA1CsF,EAAiB0I,EAAM3H,UAAUuI,SAE/B5O,IADFsF,EAAiB0I,EAAM3H,UAAUuI,GAAKrO,SAElBP,IAApBsZ,EAAUQ,YAGJ9Z,IAFNsZ,EAAUQ,MACRxU,EAAiB0I,EAAM3H,UAAUuI,GAAKrO,IAItC,eAAC8T,GAAA,EAAG,CAAC8F,GA3iCN,EA2iC2B,SACxB,eAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,gBAACC,GAAA,EAAKkS,OAAM,CACV,aAAW,iBACX/F,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBAAsB/R,EAAE2B,OAAOvF,MAAO,CAC1C2K,EACAkC,EACAvQ,GAEJ,EACA0D,MAAO+J,EAAMjD,OAAO6D,GAAKkC,GAAOvQ,GAChC0S,SAAUA,EAAS,UAEnB,kCAASrN,KAASvL,OAAS,IAAMkG,IAChC+G,IAAMoH,SAASC,QACdvO,OAAOC,QACLiZ,EAAUQ,MACRxU,EAAiB0I,EAAM3H,UAAUuI,GAAKrO,KAExCqN,KAAI,YAAa,IAAD,mBAAVrN,EAAC,KAAEC,EAAC,KACV,OAAO,yBAAQyD,MAAO1D,EAAE,SAAEC,GAC5B,YAQS,kBAAVyD,EAEP,eAACoQ,GAAA,EAAG,CAAC8F,GA7kCN,EA6kC2B,SACxB,gBAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,UAC1B,eAACC,GAAA,EAAKK,QAAO,CACXvJ,KAAK,OACL+T,SAAUA,EACVsB,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBAAsB/R,EAAE2B,OAAOvF,MAAO,CAC1C2K,EACAkC,EACAvQ,GAEJ,EACA0D,MAAO+J,EAAMjD,OAAO6D,GAAKkC,GAAOvQ,GAChCoI,YAAa/C,KAAS5K,MAAQ,IAAMuF,IAE7B,aAARqO,GACO,SAANrO,GACgC,YAAhCyN,EAAMjD,OAAO6D,GAAKkC,GAAOvQ,IACvB,eAAC6H,GAAA,EAAKoM,KAAI,CAACrM,UAAU,aAAY,kFAUzC0B,MAAMC,QAAQ7F,GACK,IAAjBA,EAAMjD,OAAqBT,EAAI,YAI3B,UAANA,GACqC,SAArCyN,EAAMjD,OAAO6D,GAAKkC,GAAa,KAExB,GAEP,eAACtC,GAAA,EAAS,CACRC,iBAAiB,IACjB7F,MAAO,CACL6E,cAAe,OACfxE,MAAO,QACP,SAEF,gBAACuF,GAAA,EAAUK,KAAI,CAACC,SAAS,IAAG,UAC1B,gBAACN,GAAA,EAAUO,OAAM,WACf,6BAAIxO,IAAM,MAAI2J,GAAiBjG,GAAM,YAEvC,eAACuK,GAAA,EAAUQ,KAAI,UACb,eAACkF,GAAA,EAAS,CAACC,OAAK,WACb7M,IAAMoH,SAASC,QACd1K,EAAM2J,KAAI,SAAC/F,EAAGuT,GACZ,GAAIvT,EAAEoC,cAAgB7J,OAAQ,CAC5B,IAAMgK,EAAOhK,OAAOC,QAAQwH,GAC5B,OACE,gBAACuM,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CACF8F,GAtoCrB,EAuoCqBvR,MAAO,CACLwR,iBAAkB,SAClBC,iBAAkB,SAGtB,eAAChG,GAAA,EAAG,CAAC8F,GA5oCxB,EA4oC6C,SACxB,eAACjT,EAAA,EAAM,CACL+L,cAEEjT,IADAgO,EAAMyL,eAAe7K,IAEjBZ,EAAMyL,eAAe7K,GAG3BzH,QAAQ,OACR4B,KAAK,KACL3B,QAAS,SAACS,GACRA,EAAEC,iBACFkG,EAAM6L,oBAAoB,CACxBjL,EACAkC,EACAvQ,EACA6a,GAEJ,EAAE,SAEF,oBACEjT,UAAU,cACV,cAAY,OACZa,MAAM,iBACNJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,WAKhB9B,IAAMoH,SAASC,QACdvE,EAAKwD,KAAI,YAAe,IAAD,mBAAZyN,EAAE,KAAEC,EAAE,KACf,OACE,eAACjH,GAAA,EAAG,UACF,eAACjM,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAACC,GAAA,EAAKK,QAAO,CACXvJ,KAAK,OACL+T,SAAUA,EACVsB,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ/R,EAAE2B,OAAOvF,MACT,CACE2K,EACAkC,EACAvQ,EACA6a,EACAC,GAGN,EACApX,MAAOqX,EACP3S,YACE/C,KAAS5K,MACT,IACAqgB,OAMZ,OAIR,CAAO,MAAiB,kBAANxT,EAEd,gBAACuM,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,UACF,eAACnN,EAAA,EAAM,CACL+L,SAAUA,EACV9L,QAAQ,OACR4B,KAAK,KACL3B,QAAS,SAACS,GACRA,EAAEC,iBAEFkG,EAAM6L,oBAAoB,CACxBjL,EACAkC,EACAvQ,EACA6a,GAEJ,EAAE,SAEF,oBACEjT,UAAU,cACV,cAAY,OACZa,MAAM,iBACNJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,WAKjB,eAACiL,GAAA,EAAG,UACF,eAACjM,GAAA,EAAKK,QAAO,CACXvJ,KAAK,SACL+T,SAAUA,EACVsB,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ5M,SACEnF,EAAE2B,OAAOvF,MACT,IAEF,CAAC2K,EAAKkC,EAAOvQ,EAAG6a,GAEpB,EACAnX,MAAO2F,MAAM/B,GAAK,GAAKA,EACvBc,YACE/C,KAAS5K,MAAQ,IAAMuF,SAMX,kBAANsH,EAEd,gBAACuM,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,UACF,eAACnN,EAAA,EAAM,CACL+L,SAAUA,EACV9L,QAAQ,OACR4B,KAAK,KACL3B,QAAS,SAACS,GACRA,EAAEC,iBAEFkG,EAAM6L,oBAAoB,CACxBjL,EACAkC,EACAvQ,EACA6a,GAEJ,EAAE,SAEF,oBACEjT,UAAU,cACV,cAAY,OACZa,MAAM,iBACNJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,WAKjB,eAACiL,GAAA,EAAG,UACF,eAACjM,GAAA,EAAKK,QAAO,CACXvJ,KAAK,OACL+T,cAEEjT,IADAgO,EAAMyL,eAAelZ,IAEjByN,EAAMyL,eAAelZ,GAG3BgU,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ/R,EAAE2B,OAAOvF,MACT,CAAC2K,EAAKkC,EAAOvQ,EAAG6a,GAEpB,EACAnX,MAAO4D,EACPc,YACE/C,KAAS5K,MAAQ,IAAMuF,SAO5B,mBACT,cAQV0D,EAAMgG,cAAgB7J,OAEtB,eAACoO,GAAA,EAAS,CACRC,iBAAiB,IACjB7F,MAAO,CACL6E,cAAe,OACfxE,MAAO,QACP,SAEF,gBAACuF,GAAA,EAAUK,KAAI,CAACC,SAAS,IAAG,UAC1B,eAACN,GAAA,EAAUO,OAAM,UACf,6BAAIxO,MAEN,eAACiO,GAAA,EAAUQ,KAAI,UACb,eAACkF,GAAA,EAAS,CAACC,OAAK,WACd,eAACC,GAAA,EAAG,UACD9M,IAAMoH,SAASC,QACdvO,OAAOC,QAAQ4D,GAAO2J,KAAI,SAACxD,GACzB,MAAuB,kBAAZA,EAAK,GAEZ,eAACiK,GAAA,EAAG,UACF,eAACjM,GAAA,EAAKK,QAAO,CACXvJ,KAAK,SACL+T,SAAUA,EACVsB,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ5M,SACEnF,EAAE2B,OAAOvF,MACT,IAEF,CAAC2K,EAAKkC,EAAOvQ,EAAG6J,EAAK,KACrB,EAEJ,EACAnG,MACE2F,MAAMQ,EAAK,IAAM,GAAKA,EAAK,GAE7BzB,YACE/C,KAAS5K,MAAQ,IAAMoP,EAAK,OAOf,mBAAZA,EAAK,GAEZ,eAACiK,GAAA,EAAG,UACF,eAACjM,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAACC,GAAA,EAAKoS,MAAK,CACTtb,KAAK,WACLqV,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ/R,EAAE2B,OAAOiR,QACT,CAAC7L,EAAKkC,EAAOvQ,EAAG6J,EAAK,KACrB,EAEJ,EACA6I,SAAUA,EACVwH,QAASrQ,EAAK,GACd8Q,MAAO9Q,EAAK,cAUlBpK,IADFsF,EAAiB0I,EAAM3H,gBAIjBrG,IAFNsF,EAAiB0I,EAAM3H,UACrBuI,SAII5O,IAFNsF,EAAiB0I,EAAM3H,UAAUuI,GAC/BrO,SAIaP,IAFfsF,EAAiB0I,EAAM3H,UAAUuI,GAC/BrO,GACA6J,EAAK,UACapK,IAApBsZ,EAAUQ,YAGK9Z,IAFfsF,EAAiB0I,EAAM3H,UAAUuI,GAC/BrO,GACA6J,EAAK,IAGL,eAACiK,GAAA,EAAG,UACF,eAACjM,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,gBAACC,GAAA,EAAKkS,OAAM,CACV,aAAW,iBACX/F,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ/R,EAAE2B,OAAOvF,MACT,CAAC2K,EAAKkC,EAAOvQ,EAAG6J,EAAK,KACrB,EAEJ,EACAnG,MAAOmG,EAAK,GACZ6I,SAAUA,EAAS,UAEnB,kCACGrN,KAASvL,OACR,IACA+P,EAAK,KAER9C,IAAMoH,SAASC,QACdvO,OAAOC,QACLiZ,EAAUQ,MACRxU,EACE0I,EAAM3H,UACNuI,GAAKrO,GAAG6J,EAAK,MAEjBwD,KAAI,YAAa,IAAD,mBAAVrN,EAAC,KAAEC,EAAC,KACV,OACE,yBAAQyD,MAAO1D,EAAE,SACdC,GAGP,YAOW,kBAAZ4J,EAAK,GAEZ,eAACiK,GAAA,EAAG,UACF,eAACjM,GAAA,EAAKK,QAAO,CACXvJ,KAAK,OACL+T,cAEEjT,IADAgO,EAAMyL,eAAelZ,IAEjByN,EAAMyL,eAAelZ,GAG3BgU,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ/R,EAAE2B,OAAOvF,MACT,CAAC2K,EAAKkC,EAAOvQ,EAAG6J,EAAK,KACrB,EAEJ,EACAnG,MAAOmG,EAAK,GACZzB,YACE/C,KAAS5K,MAAQ,IAAMoP,EAAK,OAM/B,mBACT,gBAST,mBACT,OAIR,UA9lBCwE,EAmmBX,CAwCuB2M,CAAmB3M,EAE9B,CAEA,MAAqB,kBAAV3K,EAjgDA,SAAC2K,GACtB,OACE,gBAACwF,GAAA,EAAG,CAEFxL,MAAO,CACLoR,kBAAmB,QACnBC,kBAAmB,MACnBC,aAAc,OACd,UAEF,eAAC7F,GAAA,EAAG,CACF8F,GAzDW,EA0DXvR,MAAO,CACLwR,iBAAkB,SAClBC,iBAAkB,OAClB,SAEF,6BAAIzL,MAEN,eAACyF,GAAA,EAAG,CAAC8F,GA9DO,EA8DS,SACnB,gBAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,UAC1B,eAACC,GAAA,EAAKK,QAAO,CACXvJ,KAAK,SACLnB,GAAI6Q,EACJ2F,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBAAsB5M,SAASnF,EAAE2B,OAAOvF,MAAO,IAAK,CACxD2K,GAEJ,EACA3K,MAAO2F,MAAMoE,EAAMjD,OAAO6D,IAAQ,GAAKZ,EAAMjD,OAAO6D,GACpDqE,cACgCjT,IAA9BgO,EAAMyL,eAAe7K,IACjBZ,EAAMyL,eAAe7K,GAG3BjG,YAAa/C,KAAS5K,MAAQ,IAAM4T,SAEN5O,IAA/B2F,GAAWqI,EAAM3H,gBACoBrG,IAApC2F,GAAWqI,EAAM3H,UAAUuI,IACzB,eAACxG,GAAA,EAAKoM,KAAI,CAACrM,UAAU,aAAY,SAC9BxC,GAAWqI,EAAM3H,UAAUuI,YAtCjCA,EA6CX,CAk9CqB4M,CAAe5M,QAKc5O,IAApC0F,GAAgBsI,EAAM3H,gBACmBrG,IAAzC0F,GAAgBsI,EAAM3H,UAAUuI,SAE9B5O,IADFsZ,EAAUxa,KAAK4G,GAAgBsI,EAAM3H,UAAUuI,IAr3CtC,SAACA,EAAK6M,GAC3B,IAAItd,EAOJ,OALEmb,IAAc,CAAC,QACUtZ,IAAxBsZ,EAAUxa,KAAK8P,SAAgD5O,IAA1BsZ,EAAUxa,KAAK2c,KAErDtd,EAAUmb,EAAUxa,UAAekB,IAAVyb,EAAsBA,EAAQ7M,IAGvD,gBAACwF,GAAA,EAAG,CAEFxL,MAAO,CACLoR,kBAAmB,QACnBC,kBAAmB,MACnBC,aAAc,OACd,UAEF,eAAC7F,GAAA,EAAG,CACF8F,GApNW,EAqNXvR,MAAO,CACLwR,iBAAkB,SAClBC,iBAAkB,OAClB,SAEF,6BAAIzL,MAGN,eAACyF,GAAA,EAAG,CAAC8F,GAxNO,EAwNS,SACnB,eAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAAC2S,GAAA,EAAY,CACX/c,GAAI6Q,EACJ2F,SAAU,SAAC1M,EAAGkT,GACZlT,EAAEC,iBACFkG,EAAM4L,sBAAsBmB,EAAU,CAACnM,GACzC,EACAqE,cACgCjT,IAA9BgO,EAAMyL,eAAe7K,IACjBZ,EAAMyL,eAAe7K,GAG3B3K,MAA6B,KAAtB+J,EAAMjD,OAAO6D,GAAc,KAAOZ,EAAMjD,OAAO6D,GACtDzQ,QAASA,EACT6c,YAAa,SAAC5J,GAAM,OAClB,eAAC6J,GAAA,EAAS,2BAAK7J,GAAM,IAAE8J,MAAOtV,KAAS5K,MAAQ,IAAM4T,IAAO,UAjC/DA,EAwCX,CAs0CqB8M,CACL9M,EACAlJ,GAAgBsI,EAAM3H,UAAUuI,IAIf,mBAAV3K,EA96CA,SAAC2K,GACtB,OACE,gBAACwF,GAAA,EAAG,CAEFxL,MAAO,CACLoR,kBAAmB,QACnBC,kBAAmB,MACnBC,aAAc,OACd,UAEF,eAAC7F,GAAA,EAAG,CACF8F,GA7JW,EA8JXvR,MAAO,CACLwR,iBAAkB,SAClBC,iBAAkB,OAClB,SAEF,6BAAIzL,MAGN,eAACyF,GAAA,EAAG,CAAC8F,GApKK,EAoKS,SACjB,gBAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,UAC1B,eAACC,GAAA,EAAKoS,MAAK,CACTzc,GAAI6Q,EACJ1P,KAAK,WACLqV,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBAAsB/R,EAAE2B,OAAOiR,QAAS,CAAC7L,GACjD,EACAqE,cACgCjT,IAA9BgO,EAAMyL,eAAe7K,IACjBZ,EAAMyL,eAAe7K,GAG3B6L,QAASzM,EAAMjD,OAAO6D,UAEQ5O,IAA/B2F,GAAWqI,EAAM3H,gBACoBrG,IAApC2F,GAAWqI,EAAM3H,UAAUuI,IACzB,eAACxG,GAAA,EAAKoM,KAAI,CAACrM,UAAU,aAAY,SAC9BxC,GAAWqI,EAAM3H,UAAUuI,YApCjCA,EA2CX,CAi4CqB+M,CAAe/M,GAGH,kBAAV3K,EAp+CD,SAAC2K,GACrB,OACE,gBAACwF,GAAA,EAAG,CAEFxL,MAAO,CACLoR,kBAAmB,QACnBC,kBAAmB,MACnBC,aAAc,OACd,UAEF,eAAC7F,GAAA,EAAG,CACF8F,GA3GW,EA4GXvR,MAAO,CACLwR,iBAAkB,SAClBC,iBAAkB,OAClB,SAEF,6BAAIzL,MAGN,eAACyF,GAAA,EAAG,CAAC8F,GAhHO,EAgHS,SACnB,gBAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,UAC1B,eAACC,GAAA,EAAKK,QAAO,CACXvJ,KAAc,aAAR0P,EAAqB,WAAa,OACxC7Q,GAAI6Q,EACJ2F,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBAAsB/R,EAAE2B,OAAOvF,MAAO,CAAC2K,GAC/C,EACAqE,cACgCjT,IAA9BgO,EAAMyL,eAAe7K,IACjBZ,EAAMyL,eAAe7K,GAG3B3K,MAAO+J,EAAMjD,OAAO6D,GACpBjG,YAAa/C,KAAS5K,MAAQ,IAAM4T,SAEN5O,IAA/B2F,GAAWqI,EAAM3H,gBACoBrG,IAApC2F,GAAWqI,EAAM3H,UAAUuI,IACzB,eAACxG,GAAA,EAAKoM,KAAI,CAACrM,UAAU,aAAY,SAC9BxC,GAAWqI,EAAM3H,UAAUuI,YArCjCA,EA4CX,CAs7CqBgN,CAAchN,GAInB3K,EAAMgG,cAAgB7J,OAlyChB,SAACwO,GACrB,OACE,uCACE,eAACwF,GAAA,EAAG,CACFxL,MAAO,CACLoR,kBAAmB,SACnBC,kBAAmB,MACnBC,aAAc,OACd,SAED5S,IAAMoH,SAASC,QACdvO,OAAOC,QAAQ2N,EAAMjD,OAAO6D,IAAMhB,KAAI,SAAC/F,GACrC,OACE,eAACwM,GAAA,EAAG,CACF8F,GACkB,mBAATtS,EAAE,GA9SN,GAgTiB,kBAATA,EAAE,IAEFA,EAAE,GAjTR,GAoTN,SAED,6BACE,6BAAImD,GAAW4D,GAAO,IAAM/G,EAAE,QAItC,OAGJ,eAACuM,GAAA,EAAG,UACD9M,IAAMoH,SAASC,QACdvO,OAAOC,QAAQ2N,EAAMjD,OAAO6D,IAAMhB,KAAI,YAAiB,IAAD,mBAAdrN,EAAC,KAAE0D,EAAK,KACxCgP,OAC0BjT,IAA9BgO,EAAMyL,eAAe7K,UACgB5O,IAAjCgO,EAAMyL,eAAe7K,GAAKrO,GACxByN,EAAMyL,eAAe7K,GAAKrO,IACI,IAA9ByN,EAAMyL,eAAe7K,IAK7B,MAAqB,kBAAV3K,EAEP,eAACoQ,GAAA,EAAG,CAAC8F,GA5UE,EA4UmB,SACxB,eAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAACC,GAAA,EAAKK,QAAO,CACXvJ,KAAK,SACLqV,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ5M,SAASnF,EAAE2B,OAAOvF,MAAO,IACzB,CAAC2K,EAAKrO,GAEV,EACA0S,SAAUA,EACVhP,MACE2F,MAAMoE,EAAMjD,OAAO6D,GAAKrO,IACpB,GACAyN,EAAMjD,OAAO6D,GAAKrO,GAExBoI,YAAa/C,KAAS5K,MAAQ,IAAMuF,QAOzB,mBAAV0D,EAEP,eAACoQ,GAAA,EAAG,CAAC8F,GAvWA,EAuWmB,SACtB,eAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAACC,GAAA,EAAKoS,MAAK,CACTtb,KAAK,WACLqV,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBAAsB/R,EAAE2B,OAAOiR,QAAS,CAC5C7L,EACArO,GAEJ,EACA0S,SAAUA,EACVwH,QAASzM,EAAMjD,OAAO6D,GAAKrO,GAC3B2a,MAAO3a,aAQsBP,IAArCsF,EAAiB0I,EAAM3H,gBACmBrG,IAA1CsF,EAAiB0I,EAAM3H,UAAUuI,SACY5O,IAA7CsF,EAAiB0I,EAAM3H,UAAUuI,GAAKrO,SAClBP,IAApBsZ,EAAUQ,YAER9Z,IADFsZ,EAAUQ,MAAMxU,EAAiB0I,EAAM3H,UAAUuI,GAAKrO,IAIpD,eAAC8T,GAAA,EAAG,CAAC8F,GAjYE,EAiYmB,SACxB,eAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,gBAACC,GAAA,EAAKkS,OAAM,CACV,aAAW,iBACX/F,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBAAsB/R,EAAE2B,OAAOvF,MAAO,CAAC2K,EAAKrO,GACpD,EACA0D,MAAO+J,EAAMjD,OAAO6D,GAAKrO,GACzB0S,SAAUA,EAAS,UAEnB,kCAASrN,KAASvL,OAAS,IAAMkG,IAChC+G,IAAMoH,SAASC,QACdvO,OAAOC,QACLiZ,EAAUQ,MACRxU,EAAiB0I,EAAM3H,UAAUuI,GAAKrO,KAExCqN,KAAI,YAAa,IAAD,mBAAVrN,EAAC,KAAEC,EAAC,KACV,OAAO,yBAAQyD,MAAO1D,EAAE,SAAEC,GAC5B,YAQS,kBAAVyD,EAEP,eAACoQ,GAAA,EAAG,CAAC8F,GA/ZE,EA+ZmB,SACxB,gBAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,UAC1B,eAACC,GAAA,EAAKK,QAAO,CACXvJ,KAAK,OACL+T,SAAUA,EACVsB,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBAAsB/R,EAAE2B,OAAOvF,MAAO,CAAC2K,EAAKrO,GACpD,EACA0D,MAAO+J,EAAMjD,OAAO6D,GAAKrO,GACzBoI,YAAa/C,KAAS5K,MAAQ,IAAMuF,IAE7B,aAARqO,GACO,SAANrO,GACyB,YAAzByN,EAAMjD,OAAO6D,GAAKrO,IAChB,eAAC6H,GAAA,EAAKoM,KAAI,CAACrM,UAAU,aAAY,kFAUzC0B,MAAMC,QAAQ7F,GACK,IAAjBA,EAAMjD,OAAqBT,EAAI,YAGzB,UAANA,GAA+C,SAA9ByN,EAAMjD,OAAO6D,GAAW,KACpC,GAEP,eAACJ,GAAA,EAAS,CACRC,iBAAiB,IACjB7F,MAAO,CAAE6E,cAAe,OAAWxE,MAAO,QAAS,SAEnD,gBAACuF,GAAA,EAAUK,KAAI,CAACC,SAAS,IAAG,UAC1B,gBAACN,GAAA,EAAUO,OAAM,WACf,6BAAIxO,IAAM,MAAI2J,GAAiBjG,GAAM,YAEvC,eAACuK,GAAA,EAAUQ,KAAI,UACb,eAACkF,GAAA,EAAS,CAACC,OAAK,WACb7M,IAAMoH,SAASC,QACd1K,EAAM2J,KAAI,SAAC/F,EAAGuT,GACZ,GAAIvT,EAAEoC,cAAgB7J,OAAQ,CAC5B,IAAMgK,EAAOhK,OAAOC,QAAQwH,GAC5B,OACE,gBAACuM,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CACF8F,GA9cb,EA+cavR,MAAO,CACLwR,iBAAkB,SAClBC,iBAAkB,SAGtB,eAAChG,GAAA,EAAG,CAAC8F,GApdhB,EAodqC,SACxB,eAACjT,EAAA,EAAM,CACL+L,cAEEjT,IADAgO,EAAMyL,eAAe7K,IAEjBZ,EAAMyL,eAAe7K,GAG3BzH,QAAQ,OACR4B,KAAK,KACL3B,QAAS,SAACS,GACRA,EAAEC,iBACFkG,EAAM6L,oBAAoB,CACxBjL,EACArO,EACA6a,GAEJ,EAAE,SAEF,oBACEjT,UAAU,cACV,cAAY,OACZa,MAAM,iBACNJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,WAKhB9B,IAAMoH,SAASC,QACdvE,EAAKwD,KAAI,YAAe,IAAD,mBAAZyN,EAAE,KAAEC,EAAE,KACf,OACE,eAACjH,GAAA,EAAG,UACF,eAACjM,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAACC,GAAA,EAAKK,QAAO,CACXvJ,KAAK,OACL+T,SAAUA,EACVsB,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ/R,EAAE2B,OAAOvF,MACT,CAAC2K,EAAKrO,EAAG6a,EAAKC,GAElB,EACApX,MAAOqX,EACP3S,YACE/C,KAAS5K,MAAQ,IAAMqgB,OAMnC,OAIR,CAAO,MAAiB,kBAANxT,EAEd,gBAACuM,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,UACF,eAACnN,EAAA,EAAM,CACL+L,SAAUA,EACV9L,QAAQ,OACR4B,KAAK,KACL3B,QAAS,SAACS,GACRA,EAAEC,iBAEFkG,EAAM6L,oBAAoB,CACxBjL,EACArO,EACA6a,GAEJ,EAAE,SAEF,oBACEjT,UAAU,cACV,cAAY,OACZa,MAAM,iBACNJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,WAKjB,eAACiL,GAAA,EAAG,UACF,eAACjM,GAAA,EAAKK,QAAO,CACXvJ,KAAK,SACL+T,SAAUA,EACVsB,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ5M,SAASnF,EAAE2B,OAAOvF,MAAO,IACzB,CAAC2K,EAAKrO,EAAG6a,GAEb,EACAnX,MAAO2F,MAAM/B,GAAK,GAAKA,EACvBc,YAAa/C,KAAS5K,MAAQ,IAAMuF,SAKtB,kBAANsH,EAEd,gBAACuM,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,UACF,eAACnN,EAAA,EAAM,CACL+L,SAAUA,EACV9L,QAAQ,OACR4B,KAAK,KACL3B,QAAS,SAACS,GACRA,EAAEC,iBAEFkG,EAAM6L,oBAAoB,CACxBjL,EACArO,EACA6a,GAEJ,EAAE,SAEF,oBACEjT,UAAU,cACV,cAAY,OACZa,MAAM,iBACNJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,WAKjB,eAACiL,GAAA,EAAG,UACF,eAACjM,GAAA,EAAKK,QAAO,CACXvJ,KAAK,OACL+T,cAC8BjT,IAA5BgO,EAAMyL,eAAelZ,IACjByN,EAAMyL,eAAelZ,GAG3BgU,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM4L,sBACJ/R,EAAE2B,OAAOvF,MACT,CAAC2K,EAAKrO,EAAG6a,GAEb,EACAnX,MAAO4D,EACPc,YAAa/C,KAAS5K,MAAQ,IAAMuF,SAMvC,mBACT,cAQP,mBACT,SAKV,CA27BqBsb,CAAcjN,GAGhB,EACT,OAvEgB,QA0EtB,eAAC1H,EAAA,EAAM,CAACC,QAAQ,UAAUjI,KAAK,SAAQ,SACpC0G,KAASxJ,SACH,oBAEe4D,IAAvBgO,EAAM8N,cACL,eAAC5U,EAAA,EAAM,CAACC,QAAQ,YAAYC,QAAS4G,EAAM8N,aAAa,SACrDlW,KAASvJ,WAKpB,EClmDM0f,GAAY3e,EAAQ,IAGnB,SAAS4e,GAAWne,EAAKoe,GAE9B,IAAIpR,EAAOzK,OAAOyK,KAAKhN,GAEjBqe,EAAc9b,OAAOyK,KAAKoR,GAuBhC,OArBApR,EAAOA,EAAKnJ,QAAO,SAACya,GAClB,OAAoC,IAA7BD,EAAYE,QAAQD,EAC7B,KAEKE,MAAK,SAACC,EAAGC,GAAC,OAAKL,EAAYE,QAAQE,GAAKJ,EAAYE,QAAQG,EAAE,IAEpD1R,EAAK2R,QAAO,SAACC,EAAa7N,GACvC,GACE/E,MAAMC,QAAQjM,EAAI+Q,KACE,IAApB/Q,EAAI+Q,GAAK5N,QACTnD,EAAI+Q,GAAK,GAAG3E,cAAgB7J,OAC5B,CACA,IAAMmG,EAAM1I,EAAI+Q,GAAKhB,KAAI,SAACjH,GACxB,OAAOqV,GAAWrV,EAAIsV,EAASrN,GAAK,GACtC,IAEA6N,EAAY7N,GAAOrI,CACrB,MAAOkW,EAAY7N,GAAO/Q,EAAI+Q,GAE9B,OAAO6N,CACT,GAAG,CAAC,EAEN,CAGO,SAASC,GAAsBC,EAAUC,EAAgBvW,GAG9D,IAFA,IAAMwE,EAAOzK,OAAOyK,KAAK8R,GACrBE,EAAOd,GAAUY,GACZtS,EAAI,EAAGA,EAAIQ,EAAK7J,OAAQqJ,IAC3BR,MAAMC,QAAQ+S,EAAKhS,EAAKR,OAC1BwS,EAAOC,GAAqBD,EAAM,CAAChS,EAAKR,IAAKuS,EAAgBvW,IAGjE,OAAOwW,CACT,CAMO,SAASC,GACdH,EACAI,EACAH,EACAvW,GAYA,IAVC,IADDkI,EAAI,4DAAGvO,EAEHuG,EAAMwV,GAAUY,GAChBK,EAASzW,EACT0W,OACiBjd,IAAnB4c,EACIb,GAAUa,EAAevW,SACzBrG,EACAkd,EAAO,YAAOH,GAGX1S,EAAI,EAAGA,EAAI6S,EAAQlc,aACVhB,IAAZ+c,EAAK1S,GADyBA,IAElC2S,EAASA,EAAOD,EAAK1S,IAEvB,IASI8S,EATEC,EAAYlT,GAAiB8S,GAC7BK,EAAML,EAAOhc,OAGnB,GAAIoc,EAAYC,EACd,OAAO9W,EAQT,IAAK,IAAI8D,EAAI,EAAGA,EAAI6S,EAAQlc,aAEVhB,IAAZ+c,EAAK1S,SACiBrK,IAAtBid,EAH8B5S,IAKD4S,EAAV,kBAAZF,EAAK1S,GAAqC4S,EAAkB,GAC9CA,EAAkBF,EAAK1S,IAIlD,YAA0BrK,IAAtBid,GAAoCpT,MAAMC,QAAQmT,SAI5Bjd,IAAtBid,IAEAE,EADEF,EAAkB,GAAGhT,cAAgB7J,OAChC,eACF6c,EAAkB,IAGb,SAKDjd,IAATuO,QAA4CvO,IAAtBid,IAEtBE,EADE5O,EAAKtE,cAAgB7J,OAChB,eAAQmO,GAELA,QAGEvO,IAAZmd,GAAuBH,EAAOM,KAAKH,GAChC5W,GAtBEA,CAuBX,CCnGA,IAAMwV,GAAY3e,EAAQ,IAEX,SAASmgB,GAAgBvP,GAEtC,MAAyBqD,cAAjBhL,EAAQ,EAARA,SAAUtI,EAAE,EAAFA,GAElB,EAAgC4J,qBAAU,mBAAnCgV,EAAQ,KAAEa,EAAW,KAE5B,EAAsB7V,mBAAS,IAAG,mBAA3B/G,EAAG,KAAEgH,EAAM,KAEZ6V,EAAWC,cAGjB,EAA4B/V,mBAASoU,GAAUzY,EAAW+C,KAAW,mBAA9D0E,EAAM,KAAE4S,EAAS,KAGxB,EAA8BhW,mBAAS,CAAC,GAAE,mBAAnCiW,EAAO,KAEd,GAF0B,KAEkBjW,wBAAS3H,IAAU,mBAAxDyZ,EAAc,KAAEoE,EAAiB,KAIlCvE,EADUhE,qBAAWX,IACD6E,QAEpBjH,EAAS,iDAAG,WAAO5C,GAAG,yFACE3P,IAAxBsZ,EAAUxa,KAAK6Q,GAAkB,0EAGZpO,EAAYoO,EAAK,CAAE/N,MAAO,MAAO,KAAD,EAAjDjD,EAAQ,OACd2a,EAAUwE,WACRnf,EAASqD,KAAK4L,KAAI,SAAC/F,GAAC,OAAKA,EAAEtE,GAAG,IAC9BoM,GACA,gDAEF1P,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,gBAZc,sCAafoJ,qBAAU,gBAC0BtJ,IAA9B0F,GAAgBW,IAClBjG,OAAO2K,OAAOrF,GAAgBW,IAAW/F,SAAQ,SAACuH,GAAC,OAAK0K,EAAU1K,EAAE,GAExE,GAAG,IAGHyB,qBAAU,WACR,IAAMiJ,EAAS,iDAAG,kHAAc,OAAP/Q,EAAE,+BAAG,CAAC,EAAC,SAEPD,EAAY8E,EAAU7E,GAAI,KAAD,EAA1C7C,EAAQ,OAERG,EAAOH,EAASqD,KAAK,GACvB+b,EAAYhC,GAAUhR,GAE1BgT,EAAY/B,GAAWld,EAAMif,GAE7B3d,OAAOC,QAAQ0d,GAAWzd,SAAQ,SAACuH,GAC7BA,EAAE,GAAG4H,cAAcxI,SAAS,UAC9B8W,EAAUlW,EAAE,IAAMuD,GAAWvD,EAAE,IAEnC,IAGMmW,EAAkB,iDAAG,kIACahe,IAAlCkF,EAAoBmB,GAAuB,gBAI7C,IAHAwX,EAAkB,CAAC,GAEbhT,EAAOzK,OAAOyK,KAAKkT,GAChB1T,EAAI,EAAGA,EAAIQ,EAAK7J,OAAQqJ,IACzB4T,EAAOpT,EAAKR,GAElB0T,EAAYjB,GACViB,EACA,CAACE,GACD3a,EACA+C,GAM8B,OAFlCsX,EAAUI,GAEVP,EAAYzB,GAAUgC,IAAY,0BAIhC9K,EAAW,CAAC,OACOjT,IAAnByZ,IAA8BxG,EAAWwG,GAEvCyE,EAAe9d,OAAOC,QAAQ6E,EAAoBmB,IAE/CgE,EAAI,EAAE,KAAD,QAAEA,EAAI6T,EAAald,QAAM,iBAIrC,GAHM4N,EAAMsP,EAAa7T,GAAG,GACtBpG,EAAQia,EAAa7T,GAAG,QAGPrK,IAAnB+d,EAAUnP,GAAkB,gEAEZ5O,IAAhBiE,EAAMkB,OAAuC,YAAhBlB,EAAMkB,MAAmB,kCACrClB,EAAMmB,OAAOrH,GAAI,KAAD,GAA7BogB,EAAI,OAEVlL,EAASrE,GAAOuP,EAAK,wBAIf/T,EAAOhK,OAAOC,QAAQ4D,GACnBqG,EAAI,EAAE,KAAD,QAAEA,EAAIF,EAAKpJ,QAAM,iBAO7B,GANAf,QAAQC,IAAI,CACV+D,QACA1D,EAAG6J,EAAKE,GAAG,GACX9J,EAAG4J,EAAKE,GAAG,GACXyP,IAAKgE,EAAUnP,MAImB,IAAlC/E,MAAMC,QAAQiU,EAAUnP,UACO5O,IAA/B+d,EAAUnP,GAAKxE,EAAKE,GAAG,IAAiB,gEAInBtK,IAArBoK,EAAKE,GAAG,GAAGnF,OACU,YAArBiF,EAAKE,GAAG,GAAGnF,MAAmB,kCAEXiF,EAAKE,GAAG,GAAGlF,OAAOrH,GAAI,KAAD,GAAlCogB,EAAI,OAEVlL,EAASrE,GAAI,eAAMxE,EAAKE,GAAG,GAAK6T,GAAO,QAnBV7T,IAAG,wBAfCD,IAAG,wBAwC5C,IADMQ,EAAOzK,OAAOyK,KAAKkT,GAChB1T,EAAI,EAAGA,EAAIQ,EAAK7J,OAAQqJ,IACzB4T,EAAOpT,EAAKR,QAEKrK,IAAnBiT,EAASgL,KAA0C,IAAnBhL,EAASgL,KAC3CF,EAAYjB,GACViB,EACA,CAACE,GACD3a,EACA+C,IAKNwX,EAAkB5K,GAElB0K,EAAUI,GAEVP,EAAYzB,GAAUgC,IAAY,4CACnC,kBArFuB,mCAuFxBC,IAAqB,4CACtB,kBAxGc,mCA0GTI,EAAM,CAAE7a,IAAKxF,GAEnBwU,EADW,CAAE7Q,OAAQT,KAAKC,UAAUkd,IAEtC,GAAG,IAGH,IAiFMhiB,EAAM,iDAAG,WAAOyL,GAAC,6GAWrB,IAVAA,EAAEC,iBAGEiW,EAAYhC,GAAUhR,GACtBsT,EAAUtC,GAAUY,GACxBxS,GAAsB4T,GACtB5T,GAAsBkU,GAClBC,EAAS,CAAC,EAERlU,EAAOhK,OAAOC,QAAQ0d,GACnB1T,EAAI,EAAGA,EAAID,EAAKpJ,OAAQqJ,IAK/B,GAJM9J,EAAI6J,EAAKC,GAAG,GACZ7J,EAAI4J,EAAKC,GAAG,GAGdR,MAAMC,QAAQtJ,GAAI,CAQpB,QANkBR,IAAdse,EAAO/d,KACT+d,EAAO/d,GAAK,CAAEkL,IAAK,GAAI2N,OAAQ,GAAIxU,OAAQ,KAGvC2Z,EAAO,YAAOF,EAAQ9d,SAETP,IAAf4d,EAAQrd,GACV,IAAS8J,EAAI,EAAGA,EAAIuT,EAAQrd,GAAGie,QAAQxd,OAAQqJ,KACvCoU,EAAUF,EAAQhU,OAAOqT,EAAQrd,GAAGie,QAAQnU,GAAG,GAAI,GAAG,IAChDJ,cAAgB7J,QACpBwO,EAAMxO,OAAOyK,KAAK4T,GAAS,GACjCH,EAAO/d,GAAG6Y,OAAOkE,KAAKmB,EAAQ7P,KAE9B0P,EAAO/d,GAAG6Y,OAAOkE,KAAKmB,GAK5B,IAASnU,EAAI,EAAGA,EAAIyT,EAAUxd,GAAGS,OAAQsJ,IACnCA,EAAIiU,EAAQvd,SAAWyJ,GAASsT,EAAUxd,GAAG+J,GAAIiU,EAAQjU,MAIvDyT,EAAUxd,GAAG+J,GAAGL,cAAgB7J,QAC5BwO,EAAMxO,OAAOyK,KAAK0T,EAAQjU,IAAI,GACpCgU,EAAO/d,GAAGqE,OAAO0Y,MAAI,mBAClB1O,EAAM2P,EAAQjU,GAAGsE,IAAI,oBACjBmP,EAAUxd,GAAG+J,IAAE,MAMtBgU,EAAO/d,GAAGkL,IAAI6R,KAAKS,EAAUxd,GAAG+J,IAChCgU,EAAO/d,GAAG6Y,OAAOkE,KAAKiB,EAAQjU,MAG9BA,GAAKiU,EAAQvd,QAAQsd,EAAO/d,GAAGkL,IAAI6R,KAAKS,EAAUxd,GAAG+J,IAEvDG,GAAS6T,EAAO/d,GAAI,CAAEkL,IAAK,GAAI2N,OAAQ,GAAIxU,OAAQ,aAC9C0Z,EAAO/d,EAClB,MAESC,EAAEyJ,cAAgB7J,QAMrBI,IAAMmc,EAASpc,KAAI+d,EAAO/d,GAAKC,GAIvC,GACmC,IAA/BJ,OAAOyK,KAAKyT,GAAQtd,OAAY,iBACP,OAA3B4G,EAAO,oBAAoB,sDAKR9G,EAAYuF,EAAUiY,EAAQvgB,GAAI,KAAD,GAA9CogB,EAAI,OACJA,EAAKxf,SACXmI,OAAO4X,MAAM,iCACbjB,EAAS,IAAMpX,GAAU,mDAEnB,KAAM9G,MAAMZ,SAElBiJ,EACE,KAAMrI,MAAMZ,SAASG,KAAKqC,QACxB,MACA,KAAM5B,MAAMZ,SAASG,KAAKoJ,SAC5B,2DAEL,gBA3FW,sCA4FZ,OACE,uBAAKC,UAAU,OAAM,UACnB,0BAAQA,UAAU,cAAa,sBAClB,6BAAI9B,IAAa,iBAAkB,6BAAItI,IAAO,UAE3D,wBAAMoK,UAAU,eAAc,UAC5B,eAAC,GAAW,CACV4C,OAAQA,EACR1E,SAAUA,EACVqT,iBAAkBpW,EAClBmW,eAAgBA,EAChBG,sBAxLc,SAACG,EAAKgD,GAC1B,IAGI1S,EAHAsU,EAAU5C,GAAUhR,GACpB6T,EAAYD,EAGZE,GAAmB,EACvB,IAAKxU,EAAI,EAAGA,EAAI0S,EAAK/b,OAAS,EAAGqJ,IAC/BuU,EAAYA,EAAU7B,EAAK1S,IACJ,kBAAZ0S,EAAK1S,KAAiBwU,EAAkBxU,GAKrD,GAHuB,kBAAZ0S,EAAK1S,KAAiBwU,EAAkBxU,GACnDuU,EAAU7B,EAAK1S,IAAM0P,GAEI,IAArB8E,EAAwB,CAE1B,IAAMtQ,EAAsB,kBAARwL,EAAmBrW,IAAM,GAC7Cib,EAAU7B,GACR6B,EACA5B,EAAK5R,MAAM,EAAG0T,GACdvb,EACA+C,EACAkI,EAEJ,CAEAoP,EAAUgB,EACZ,EA+JQ9E,oBAxJsB,SAACkD,GAC7B,IAGI1S,EAHA0P,EAAMgC,GAAUhR,GAChBiS,EAASjD,EAGb,IAAK1P,EAAI,EAAGA,EAAI0S,EAAK/b,OAAS,QACZhB,IAAZ+c,EAAK1S,GADsBA,IAE/B2S,EAASA,EAAOD,EAAK1S,IAGvB,IAAMoU,EAAUzB,EAAOzS,OAAOwS,EAAK1S,GAAI,GAEjCkE,EAA6B,kBAAfkQ,EAAQ,GAAkB/a,IAAM,GACpDqW,EAAM+C,GACJ/C,EACAgD,EAAK5R,MAAM,EAAGd,GACd/G,EACA+C,EACAkI,GAKQ,IAANlE,SACuBrK,IAArB4d,EAAQb,EAAK,MACfa,EAAQb,EAAK,IAAM,CAAEyB,QAAS,GAAIM,SAAU,GAAIC,OAAQC,MAGrDrV,GAAU8U,EAAQ,MAErBb,EAAQb,EAAK,IAAI+B,SAASxB,KAAKmB,EAAQ,IAGvCb,EAAQb,EAAK,IAAIyB,QAAQlB,KACvBP,EAAK1S,IAAMuT,EAAQb,EAAK,IAAIgC,OACxBhC,EAAK1S,GACHuT,EAAQ,CAACb,EAAK,KAAKyB,QAAQ9c,QAAO,SAACmG,GAAC,OAAKA,GAAKkV,EAAK1S,EAAE,IAAErJ,OACzD+b,EAAK1S,IAGP0S,EAAK1S,GAAKuT,EAAQb,EAAK,IAAIgC,SAC7BnB,EAAQb,EAAK,IAAIgC,OAAShC,EAAK1S,MAIrCsT,EAAU5D,EACZ,EA2GQJ,eAAgBvd,EAChB0f,aA/JK,SAACjU,GACZA,EAAEC,iBACF2V,GAAU,EACZ,IA8JM,wBACA,uBAAM7U,MAAO,CAAEmK,WAAY,OAAW,SAAEnS,SAIhD,C,cClXaqe,GAAW,SAACjR,GAavB,YAC2BhO,IAAzBgO,EAAM2L,qBACiB3Z,IAAvBgO,EAAM8N,mBACqB9b,IAA3BgO,EAAMkR,uBACoBlf,IAA1BgO,EAAMmR,sBACmBnf,IAAzBgO,EAAMoR,qBACYpf,IAAlBgO,EAAMqR,cACgBrf,IAAtBgO,EAAMsR,kBACiBtf,IAAvBgO,EAAMuR,mBACkBvf,IAAxBgO,EAAMwR,cAEC,UAGP,gBAACpX,GAAA,EAAI,CAACC,SAAU2F,EAAM2L,eAAe,UACnC,eAACvR,GAAA,EAAKI,MAAK,UACT,6BAAI5C,KAAS6Z,gBAEf,eAACrX,GAAA,EAAKK,QAAO,CACXN,UAAU,OACVjJ,KAAK,OACLwgB,OAAO,cACPxE,MAAM,OACN3G,SAAU,SAAC1M,GACT,IAAMwP,EAAOxP,EAAE2B,OAAOmW,MAAM,GAC5B3R,EAAMqR,QAAQhI,GACd,IAAMuI,EAAa,IAAIC,WAEvBD,EAAWE,UAAY,WACrB,IAAMC,EAAUH,EAAWI,OAC3B,GAAI3I,EAAK5W,KAAK0M,SAAS,QAAS,CAC9B,IAAM8S,EAAQ,IAAIC,OAAO,MAAO,KAC5BC,EAAWJ,EAAQ9X,QAAQgY,EAAO,IAAIrI,MAAM,MAEhD5J,EAAMkR,iBAAiBiB,EAAS,IAChCA,EAAS5V,OAAO,EAAG,GACnByD,EAAMoR,eAAee,GACrBnS,EAAMmR,gBAAgB,KACxB,CACI9H,EAAK5W,KAAK0M,SAAS,WACrBa,EAAMkR,iBAAiB,MACvBlR,EAAMoR,eAAe,MACrBpR,EAAMmR,gBACJle,KAAKC,UAAUD,KAAKwF,MAAMsZ,GAAU,KAAM,IAGhD,EACAH,EAAWQ,WAAW/I,EACxB,IAEqB,OAAtBrJ,EAAMsR,aAAgD,OAAxBtR,EAAMwR,eACnC,eAAChR,GAAA,EAAS,UACR,gBAACA,GAAA,EAAUK,KAAI,CAACC,SAAS,IAAG,UAC1B,eAACN,GAAA,EAAUO,OAAM,UAAEnJ,KAAShL,eAC5B,eAAC4T,GAAA,EAAUQ,KAAI,CAACpG,MAAO,CAAEyX,SAAU,SAAUnX,OAAQ,QAAY,SAC/D,gBAACiG,GAAA,EAAK,CAACC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,YACtC,iCACE,8BACGjI,IAAMoH,SAASC,QACdX,EAAMwR,cAAc5H,MAAM,KAAKhK,KAAI,SAAC0S,GAClC,OAAO,8BAAKA,GACd,SAIN,iCACGhZ,IAAMoH,SAASC,QACdX,EAAMsR,YAAY1R,KAAI,SAAC/F,GACrB,OACE,8BACGP,IAAMoH,SAASC,QACd9G,EAAE+P,MAAM,KAAKhK,KAAI,SAAC0S,GAChB,OAAO,8BAAKA,GACd,MAIR,iBAQU,OAAvBtS,EAAMuR,cACL,eAAC/Q,GAAA,EAAS,UACR,gBAACA,GAAA,EAAUK,KAAI,CAACC,SAAS,IAAG,UAC1B,eAACN,GAAA,EAAUO,OAAM,UAAEnJ,KAAShL,eAC5B,eAAC4T,GAAA,EAAUQ,KAAI,CAACpG,MAAO,CAAEyX,SAAU,SAAUnX,OAAQ,QAAY,SAC/D,2BACEN,MAAO,CAAE2X,OAAQ,QACjBC,KAAK,MACLC,KAAK,KACLC,UAAQ,EACRzc,MAAO+J,EAAMuR,sBAMvB,eAACrY,EAAA,EAAM,CAACC,QAAQ,UAAUjI,KAAK,SAAQ,SACpC0G,KAASxJ,QADiC,UAEpC,eAET,eAAC8K,EAAA,EAAM,CAACC,QAAQ,YAA2BC,QAAS4G,EAAM8N,aAAa,SACpElW,KAASvJ,QADqB,YAKvC,ECrGM0f,GAAY3e,EAAQ,IAoBX,SAASujB,GAAQ3S,GAE9B,IAAM3H,EAAagL,cAAbhL,SAGN,EAAwCiL,cAAiB,mBAAlDC,EAAY,KAAiB,UAGbvR,IAAnBgO,EAAM3H,WAAwBA,EAAW2H,EAAM3H,UAGnD,IAiBIiT,EAjBEmE,EAAWC,cAEjB,EAAgC/V,mBAAS,QAAO,mBAAzCiZ,EAAQ,KAAEC,EAAW,KAE5B,EAAsBlZ,mBAAS,IAAG,mBAA3B/G,EAAG,KAAEgH,EAAM,KAClB,EAA8BD,oBAAS,GAAM,mBAAtCmZ,EAAO,KAAEC,EAAU,KAG1B,EAA4BpZ,mBAASoU,GAAU5X,EAAUkC,KAAW,mBAA7D0E,EAAM,KAAE4S,EAAS,KAGxB,EAAwBhW,wBAAS3H,GAAU,mBAApCqX,EAAI,KAAEgI,EAAO,KACpB,EAA0C1X,mBAAS,MAAK,mBAAjD6X,EAAa,KAAEN,EAAgB,KACtC,EAAsCvX,mBAAS,MAAK,mBAA7C2X,EAAW,KAAEF,EAAc,KAClC,EAAwCzX,mBAAS,MAAK,mBAA/C4X,EAAY,KAAEJ,EAAe,KAE9B5F,EAAUjE,qBAAWX,IAiD3B,GA/C2B2E,OAAXtZ,IAAZuZ,EAAmCA,EAAQC,QAC9B,CAAC,EAElBlQ,qBAAU,WAER,IAAMiJ,EAAS,iDAAG,WAAO5C,GAAG,yFACE3P,IAAxBsZ,EAAUxa,KAAK6Q,GAAkB,0EAGZpO,EAAYoO,EAAK,CAAE/N,MAAO,MAAO,KAAD,EAAjDjD,EAAQ,OACd2a,EAAUwE,WACRnf,EAASqD,KAAK4L,KAAI,SAAC/F,GAAC,OAAKA,EAAEtE,GAAG,IAC9BoM,GACA,gDAEF1P,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,gBAZc,2CAcmBF,IAA9B0F,GAAgBW,IAClBjG,OAAO2K,OAAOrF,GAAgBW,IAAW/F,SAAQ,SAACuH,GAAC,OAAK0K,EAAU1K,EAAE,GAExE,GAAG,IAGHyB,qBAAU,WACR,IAAM0X,EAAW,iDAAG,gHAAc,OAAPxf,EAAE,+BAAG,CAAC,EAAC,SAETD,EAAY8E,EAAU7E,GAAI,KAAD,EAA1C7C,EAAQ,OAERG,EAAOH,EAASqD,KAAK,GACvB+b,EAAYhC,GAAUhR,GAI1BgT,EAAYrB,GAFZqB,EAAY/B,GAAWld,EAAMif,GAEgB5Z,EAAWkC,GACxDsX,EAAUI,GAAW,2CACtB,kBAXgB,mCAajB,GAAiC,OAA7BxM,EAAaxP,IAAI,SAAiD,KAA7BwP,EAAaxP,IAAI,QAA1D,CAEA,IAAMqc,EAAM,CAAE7a,IAAKgO,EAAaxP,IAAI,SAEpCif,EADW,CAAEtf,OAAQT,KAAKC,UAAUkd,IAF5B,CAIV,GAAG,CAAC7M,EAAclL,SAGUrG,IAAxBmE,EAAUkC,GACZ,OAAO,gEAGT,IA6CM4a,EAAO,SAACpZ,GACZA,EAAEC,iBACF2V,GAAU,EACZ,EAGMyD,EAAQ,iDAAG,WAAOrZ,GAAC,2FAWU,OAVjCA,EAAEC,iBAEE/I,OAAQiB,OAEOA,KADf9B,EAAO6d,GAAUhR,IACZhM,QACPA,EAAQb,EAAKa,aACNb,EAAKa,OAGVgf,EAAYhC,GAAU7d,GAC1BiM,GAAsB4T,GAAW,kBAIZld,EACjBwF,EACApF,KAAKC,UAAU6c,GACfhf,GACA,KAAD,EAJKof,EAAI,OAKVxO,EAAMwO,EAAKxf,SACXiJ,EAAO+H,EAAIwR,YACXJ,GAAW,GAAO,kDAElB9gB,QAAQC,IAAI,EAAD,IACXyP,EAAM,KAAMpQ,MAAMZ,SAClBsB,QAAQC,IAAI,CACViB,QAAS,KAAM5B,MAAMZ,SAASG,KAAKqC,QACnC+G,QAAS,KAAM3I,MAAMZ,SAASG,KAAKoJ,UAGjCkZ,EAAM,GAERA,EADE,KAAM7hB,MAAMZ,SAASG,KAAKoJ,QAAQjB,SAAS,iBAE3CrB,KAAS5I,gBACT,IACA,KAAMuC,MAAMZ,SAASG,KAAKoJ,QAAQiD,MAChC,KAAM5L,MAAMZ,SAASG,KAAKoJ,QAAQkU,QAAQ,KAAO,GAChD,GAKC,KAAM7c,MAAMZ,SAASG,KAAKoJ,QAGlCN,EAAO,KAAMrI,MAAMZ,SAASG,KAAKqC,QAAU,MAAQigB,GACnDL,GAAW,GAAM,QAGA,MAAfpR,EAAIpK,SACNuB,OAAO4X,MAAM,kCACbjB,EAAS,IAAMpX,IAChB,0DACF,gBAtDa,sCAwDRgb,EAAQ,iDAAG,WAAOxZ,GAAC,2FACJ,GAAnBA,EAAEC,sBAEW9H,IAATqX,EAAkB,gBAEH,OADjBzP,EAAOhC,KAAS7I,SAChBgkB,GAAW,GAAM,8BAGf1J,EAAK5W,KAAK0M,SAAS,QAAQ,CAAD,gBAEE,OADxBrN,EAAW,IAAI+X,UACZC,OAAO,OAAQT,GAAM,mBAGTzX,EAAkByG,EAAUvG,GAAU,KAAD,GAAlDqe,EAAI,OAEVxO,EAAMwO,EAAKxf,SACXiJ,EAAO+H,EAAIwR,YACXJ,GAAW,GAAO,kDAElB9gB,QAAQC,IAAI,EAAD,IACXyP,EAAM,KAAMpQ,MAAMZ,SAClBsB,QAAQC,IAAI,CACViB,QAAS,KAAM5B,MAAMZ,SAASG,KAAKqC,QACnC+G,QAAS,KAAM3I,MAAMZ,SAASG,KAAKoJ,UAGjCkZ,EAAM,GAERA,EADE,KAAM7hB,MAAMZ,SAASG,KAAKoJ,QAAQjB,SAAS,iBAE3CrB,KAAS5I,gBACT,IACA,KAAMuC,MAAMZ,SAASG,KAAKoJ,QAAQiD,MAChC,KAAM5L,MAAMZ,SAASG,KAAKoJ,QAAQkU,QAAQ,KAAO,GAChD,GAKC,KAAM7c,MAAMZ,SAASG,KAAKoJ,QAGlCN,EAAO,KAAMrI,MAAMZ,SAASG,KAAKqC,QAAU,MAAQigB,GACnDL,GAAW,GAAM,YAGjB1J,EAAK5W,KAAK0M,SAAS,SAAS,CAAD,2CAERtM,EAAawF,EAAUkZ,OAAcvf,GAAW,KAAD,GAA5Dme,EAAI,OACVxO,EAAMwO,EAAKxf,SACXiJ,EAAO+H,EAAIwR,YACXJ,GAAW,GAAO,mDAElB9gB,QAAQC,IAAI,EAAD,IACXyP,EAAM,KAAMpQ,MAAMZ,SAClBsB,QAAQC,IAAI,CACViB,QAAS,KAAM5B,MAAMZ,SAASG,KAAKqC,QACnC+G,QAAS,KAAM3I,MAAMZ,SAASG,KAAKoJ,UAGjCkZ,EAAM,GAERA,EADE,KAAM7hB,MAAMZ,SAASG,KAAKoJ,QAAQjB,SAAS,iBAE3CrB,KAAS5I,gBACT,IACA,KAAMuC,MAAMZ,SAASG,KAAKoJ,QAAQiD,MAChC,KAAM5L,MAAMZ,SAASG,KAAKoJ,QAAQkU,QAAQ,KAAO,GAChD,GAKC,KAAM7c,MAAMZ,SAASG,KAAKoJ,QAGlCN,EAAO,KAAMrI,MAAMZ,SAASG,KAAKqC,QAAU,MAAQigB,GACnDL,GAAW,GAAM,QAIF,MAAfpR,EAAIpK,SACNuB,OAAO4X,MAAM,6BACbjB,EAAS,IAAMpX,IAChB,kEACF,gBAnFa,sCAoFd,OACE,uBAAK8B,UAAU,OAAM,UACnB,0BAAQA,UAAU,cAAa,8BAE7B,6BAAI9B,OAEN,wBAAM8B,UAAU,eAAc,UAC5B,gBAACmZ,GAAA,EAAG,CACFC,SAAO,EACPpa,QAAQ,OACRgB,UAAU,yBACVqZ,SAnKiB,SAAC1S,GACxB+R,EAAY/R,GACZlH,EAAO,IACPmZ,GAAW,EACb,EAgKQtS,iBAAiB,OAAM,UAEtBpJ,EAASgB,GAAUY,SAAS,SAC3B,eAACqa,GAAA,EAAIzS,KAAI,UACP,eAACyS,GAAA,EAAIG,KAAI,CAAC3S,SAAS,OAAM,oBAI5BzJ,EAASgB,GAAUY,SAAS,SACE,OAA7BsK,EAAaxP,IAAI,SACf,eAACuf,GAAA,EAAIzS,KAAI,UACP,eAACyS,GAAA,EAAIG,KAAI,CAAC3S,SAAS,OAAM,uBAIjC,uBACElG,MAAO,CACLmN,gBAAiB,OACjB2L,aAAc,MACdC,YAAa,QACbC,YAAa,wBACbC,YAAa,MACb5Y,MAAO,OACPC,OAAQ,eACR,UAEY,SAAb0X,GACC,uBAAKhY,MAAO,CAAEkZ,OAAQ,OAAW,UAC/B,eAAC,GAAW,CACV/W,OAAQA,EACR1E,SAAUA,EACVqT,iBAAkBvV,EAClBsV,eAAgB,CAAC,EACjBG,sBA5OQ,SAACG,EAAKgD,GAA6B,IAInD1S,EAJ4B0X,EAAS,wDACrCpD,EAAU5C,GAAUhR,GACpB6T,EAAYD,EAGZE,GAAmB,EACvB,IAAKxU,EAAI,EAAGA,EAAI0S,EAAK/b,OAAS,EAAGqJ,IAC/BuU,EAAYA,EAAU7B,EAAK1S,IACJ,kBAAZ0S,EAAK1S,KAAiBwU,EAAkBxU,GAErDuU,EAAU7B,EAAK1S,IAAM0P,EACE,kBAAZgD,EAAK1S,KAAiBwU,EAAkBxU,IAEjC,IAAd0X,IAA4C,IAArBlD,IACzBF,EAAU7B,GACR6B,EACA5B,EAAK5R,MAAM,EAAG0T,GACd1a,EACAkC,IAEJsX,EAAUgB,EACZ,EAwNc9E,oBAtNgB,SAACkD,GAC7B,IAGI1S,EAHA0P,EAAMgC,GAAUhR,GAChBiS,EAASjD,EAGb,IAAK1P,EAAI,EAAGA,EAAI0S,EAAK/b,OAAS,QACZhB,IAAZ+c,EAAK1S,GADsBA,IAE/B2S,EAASA,EAAOD,EAAK1S,IAGvB2S,EAAOzS,OAAOwS,EAAK1S,GAAI,GAEvB0P,EAAM+C,GAAqB/C,EAAKgD,EAAK5R,MAAM,EAAGd,GAAIlG,EAAWkC,GAC7DsX,EAAU5D,EACZ,EAyMcJ,eAAgBuH,EAChBpF,aAAcmF,IAEhB,wBACA,uBACErY,MAAO,CACLmK,WAAY,MACZlK,MAAOiY,EAAU,MAAQ,SACzB,SAEDlgB,OAIO,SAAbggB,GACC,uBAAKhY,MAAO,CAAEkZ,OAAQ,OAAW,UAC/B,eAAC,GAAQ,CACPnI,eAAgB0H,EAChBvF,aAAcmF,EACd7B,eAAgBA,EAChBF,iBAAkBA,EAClBC,gBAAiBA,EACjBE,QAASA,EACTE,aAAcA,EACdC,cAAeA,EACfF,YAAaA,IAEf,uBACE1W,MAAO,CACLmK,WAAY,MACZlK,MAAOiY,EAAU,MAAQ,SACzB,SAEDlgB,eAQjB,CC5Xe,SAASohB,GAAmBhU,GACzC,MAA8BrG,mBAAS,MAAK,mBAArCoY,EAAO,KAAEkC,EAAU,KAC1B,OACE,eAACzT,GAAA,EAAS,CAACzF,KAAM,KAAK,SACpB,gBAACyF,GAAA,EAAUK,KAAI,CAACC,SAAU,EAAE,UAC1B,eAACN,GAAA,EAAUO,OAAM,UACdnJ,KAASlJ,OACR,MACAkJ,KAASjJ,OACT,IACAiJ,KAAS9K,gBAEb,eAAC0T,GAAA,EAAUQ,KAAI,UACb,eAACkF,GAAA,EAAS,UACR,gBAACE,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACT,gBAAC/R,GAAA,EAAI,CAACC,SAAU,kBAAM2F,EAAMkU,aAAanC,EAAQ,EAAC,UAChD,eAAC3L,GAAA,EAAG,UACF,uEAEF,eAACA,GAAA,EAAG,UACF,gBAACC,GAAA,EAAG,WACF,eAACjM,GAAA,EAAKI,MAAK,UACT,6BAAI5C,KAAS6Z,gBAEf,eAACrX,GAAA,EAAKK,QAAO,CACXN,UAAU,OACVjJ,KAAK,OACLwgB,OAAO,QACPxE,MAAM,OACN3G,SAAU,SAAC1M,GACTA,EAAEC,iBACF,IAAMuP,EAAOxP,EAAE2B,OAAOmW,MAAM,GAEtBC,EAAa,IAAIC,WAEvBD,EAAWE,UAAY,WACrB,IAAMqC,EAAWvC,EAAWI,OAC5BiC,EAAWE,EACb,EACAvC,EAAWQ,WAAW/I,EACxB,SAIN,eAACjD,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,uBACEzL,MAAO,CACLmK,WAAY,MACZlK,MAAO,OACP,SAEDmF,EAAMoU,gBAIb,eAAChO,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,eAACnN,EAAA,EAAM,CAAChI,KAAK,SAASiI,QAAQ,UAAS,2BAO/C,gBAACkN,GAAA,EAAG,CAAC8F,GAAI,EAAE,UACT,eAAC/F,GAAA,EAAG,UACF,uEAEF,eAACA,GAAA,EAAG,CAACxL,MAAO,CAAEyZ,WAAY,QAAY,SACpC,eAAChO,GAAA,EAAG,UACF,eAACnN,EAAA,EAAM,CACLC,QAAQ,UACRC,QAAS,WACP,IAAMsR,EAAO,IAAIC,KAAK,CACpB1X,KAAKC,UAAU8M,EAAMjD,OAAQ,KAAM,KAErC6N,kBACEF,GACyB,KAAxB1K,EAAMjD,OAAY,IACfiD,EAAMjD,OAAY,IAClB,cAAgB,QAExB,EAAE,wCAaxB,CC9FA,IAAMgR,GAAY3e,EAAQ,IAmBX,SAASklB,GAAkBtU,GAExC,IAAM3H,EAAW,cAGjB,EAAwCiL,cAAiB,mBAAlDC,EAAY,KAGbkM,GAH8B,KAGnBC,eAEjB,EAAgC/V,mBAAS,QAAO,mBAAzCiZ,EAAQ,KAAEC,EAAW,KAE5B,EAAsBlZ,mBAAS,IAAG,mBAA3B/G,EAAG,KAAEgH,EAAM,KAClB,EAA8BD,oBAAS,GAAM,mBAAtCmZ,EAAO,KAAEC,EAAU,KAE1B,EAAkCpZ,mBAAS,IAAG,mBAAvCya,EAAS,KAAEG,EAAY,KAE9B,EAA4B5a,mBAASoU,GAAU5X,EAAUkC,KAAW,mBAA7D0E,EAAM,KAAE4S,EAAS,KAExB,EAA4ChW,mBAAS,CACnD3D,SAAU,CAAEvD,MAAM,KAClB,mBAFKgZ,EAAc,KAAEoE,EAAiB,KAKxC,EAAkClW,qBAAU,mBAArC6a,EAAS,KAAEC,EAAY,KAG9B,EAAwB9a,wBAAS3H,GAAU,mBAApCqX,EAAI,KAAEgI,EAAO,KACpB,EAA0C1X,mBAAS,MAAK,mBAAjD6X,EAAa,KAAEN,EAAgB,KACtC,GAAsCvX,mBAAS,MAAK,qBAA7C2X,GAAW,MAAEF,GAAc,MAClC,GAAwCzX,mBAAS,MAAK,qBAA/C4X,GAAY,MAAEJ,GAAe,MAyDpC,GAtDA7V,qBAAU,WACR,IAAMiJ,EAAS,iDAAG,4GAAc,OAAP/Q,EAAE,+BAAG,CAAC,EAAC,SAEPD,EAAY,YAAaC,GAAI,KAAD,EAA7C7C,EAAQ,OAEd8jB,EAAa9jB,EAASqD,KAAK4L,KAAI,SAAC/F,GAAC,OAAKA,EAAEtE,GAAG,KAAG,2CAC/C,kBALc,mCAOfgP,EADW,CAAE3Q,MAAO,KAEtB,GAAG,CAACoM,EAAOuD,IAGXjI,qBAAU,WACR,IAAMoZ,EAAkB,iDAAG,kHAAc,OAAPlhB,EAAE,+BAAG,CAAC,EAAC,SAEhBD,EAAY8E,EAAU7E,GAAI,KAAD,EAA1C7C,EAAQ,OAERG,EAAOH,EAASqD,KAAK,IACvB+b,EAAYhC,GAAUhR,IAGN,SAAI,GACxBgT,EAAoB,SAAI,CAAC,CAAEtd,KAAM,GAAIwD,MAAO,MAGtC0e,EAAc5G,GAAUtC,IACR,UAAI,EAE1BoE,EAAkB8E,GAElB5E,EAAY/B,GAAWld,EAAMif,GAE7B3d,OAAOC,QAAQ0d,GAAWzd,SAAQ,SAACuH,GAC7BA,EAAE,GAAG4H,cAAcxI,SAAS,UAC9B8W,EAAUlW,EAAE,IAAMuD,GAAWvD,EAAE,IAEnC,IAIAkW,EAAe,IAAIA,EAAe,IAAI,QAEtCA,EAAYrB,GAAsBqB,EAAW5Z,EAAWkC,GACxDsX,EAAUI,GAAW,4CACtB,kBA/BuB,mCAiCxB,GAAiC,OAA7BxM,EAAaxP,IAAI,SAAiD,KAA7BwP,EAAaxP,IAAI,QAA1D,CAEA,IAAMqc,EAAM,CAAE7a,IAAKgO,EAAaxP,IAAI,SAEpC2gB,EADW,CAAEhhB,OAAQT,KAAKC,UAAUkd,IAF5B,CAIV,GAAG,CAAC7M,EAAclL,SAGUrG,IAAxBmE,EAAUkC,GACZ,OAAO,gEAGT,IAyDMuc,GAAoB,iDAAG,WAAO/a,GAAC,iGAIO,OAH1CA,EAAEC,iBACI+a,EAAmBhb,EAAE2B,OAAOvF,MAC5Bma,EAAM,CAAE7a,IAAKsE,EAAE2B,OAAOvF,OACtBzC,EAAK,CAAEE,OAAQT,KAAKC,UAAUkd,IAAO,EAAD,OACxB7c,EAAY,YAAaC,GAAI,KAAD,EAI9C,IAJMmO,EAAG,OACH7L,EAAW6L,EAAI3N,KAAK,GAEpBgC,EAAW,GACRqG,EAAI,EAAGA,EAAIvG,EAASE,SAAShD,OAAQqJ,IACV,WAA9BvG,EAASE,SAASqG,GAAGnL,MACvB8E,EAASsZ,KAAK,CACZ7c,KAAMqD,EAASE,SAASqG,GAAG5J,KAC3BwD,MAAO,IAGuB,SAA9BH,EAASE,SAASqG,GAAGnL,MACvB8E,EAASsZ,KAAK,CACZ7c,KAAMqD,EAASE,SAASqG,GAAG5J,KAC3BwD,MAAOH,EAASE,SAASqG,GAAG5J,KAAO,UAGL,WAA9BqD,EAASE,SAASqG,GAAGnL,MACvB8E,EAASsZ,KAAK,CACZ7c,KAAMqD,EAASE,SAASqG,GAAG5J,KAC3BwD,MAAO,CAAC,MAKR8Z,EAAYhC,GAAUhR,IACR,SAAI8X,EACA,IAApB7e,EAAShD,SAAc+c,EAAoB,SAAI/Z,IAE7C2e,EAAc5G,GAAUtC,IACR,UAAI,EAE1BoE,EAAkB8E,GAElBhF,EAAUI,GAAW,4CACtB,gBAxCyB,sCA2CpBmD,GAAQ,iDAAG,WAAOrZ,GAAC,2FAWU,GAVjCA,EAAEC,iBAEE/I,OAAQiB,OAEOA,KADf9B,EAAO6d,GAAUhR,IACZhM,QACPA,EAAQb,EAAKa,aACNb,EAAKa,OAGVgf,EAAYhC,GAAU7d,GAC1BiM,GAAsB4T,QACQ/d,IAA1B+d,EAAoB,SAAe,iBAEpB,OADjBnW,EAAO,6BACPmZ,GAAW,GAAM,8BAGM,KAArBhD,EAAe,IAAQ,iBAER,OADjBnW,EAAO,yBACPmZ,GAAW,GAAM,8BAGQ,KAAvBhD,EAAiB,MAAQ,iBAEV,OADjBnW,EAAO,0BACPmZ,GAAW,GAAM,sDAMElgB,EACjBwF,EACApF,KAAKC,UAAU6c,GACfhf,GACA,KAAD,GAJKof,EAAI,OAKVxO,EAAMwO,EAAKxf,SACXiJ,EAAO+H,EAAIwR,YACXJ,GAAW,GAAO,mDAElB9gB,QAAQC,IAAI,EAAD,IACXyP,EAAM,KAAMpQ,MAAMZ,SAClBsB,QAAQC,IAAI,CACViB,QAAS,KAAM5B,MAAMZ,SAASG,KAAKqC,QACnC+G,QAAS,KAAM3I,MAAMZ,SAASG,KAAKoJ,UAGjCkZ,EAAM,GAERA,EADE,KAAM7hB,MAAMZ,SAASG,KAAKoJ,QAAQjB,SAAS,iBAE3CrB,KAAS5I,gBACT,IACA,KAAMuC,MAAMZ,SAASG,KAAKoJ,QAAQiD,MAChC,KAAM5L,MAAMZ,SAASG,KAAKoJ,QAAQkU,QAAQ,KAAO,GAChD,GAKC,KAAM7c,MAAMZ,SAASG,KAAKoJ,QAGlCN,EAAO,KAAMrI,MAAMZ,SAASG,KAAKqC,QAAU,MAAQigB,GACnDL,GAAW,GAAM,QAEA,MAAfpR,EAAIpK,SACNuB,OAAO4X,MAAM,oCACbjB,EAAS,IAAMpX,IAChB,2DACF,gBApEa,sCAsER4a,GAAO,SAACpZ,GACZA,EAAEC,iBACF2V,GAAU,EACZ,EAsCM4D,GAAQ,iDAAG,WAAOxZ,GAAC,2FACJ,GAAnBA,EAAEC,sBAEW9H,IAATqX,EAAkB,gBAEH,OADjBzP,EAAOhC,KAAS7I,SAChBgkB,GAAW,GAAM,8BAGf1J,EAAK5W,KAAK0M,SAAS,QAAQ,CAAD,gBAEE,OADxBrN,EAAW,IAAI+X,UACZC,OAAO,OAAQT,GAAM,mBAGTzX,EAAkByG,EAAUvG,GAAU,KAAD,GAAlDqe,EAAI,OAEVxO,EAAMwO,EAAKxf,SACXiJ,EAAO+H,EAAIwR,YACXJ,GAAW,GAAO,kDAElB9gB,QAAQC,IAAI,EAAD,IACXyP,EAAM,KAAMpQ,MAAMZ,SAClBsB,QAAQC,IAAI,CACViB,QAAS,KAAM5B,MAAMZ,SAASG,KAAKqC,QACnC+G,QAAS,KAAM3I,MAAMZ,SAASG,KAAKoJ,UAGjCkZ,EAAM,GAERA,EADE,KAAM7hB,MAAMZ,SAASG,KAAKoJ,QAAQjB,SAAS,iBAE3CrB,KAAS5I,gBACT,IACA,KAAMuC,MAAMZ,SAASG,KAAKoJ,QAAQiD,MAChC,KAAM5L,MAAMZ,SAASG,KAAKoJ,QAAQkU,QAAQ,KAAO,GAChD,GAKC,KAAM7c,MAAMZ,SAASG,KAAKoJ,QAGlCN,EAAO,KAAMrI,MAAMZ,SAASG,KAAKqC,QAAU,MAAQigB,GACnDL,GAAW,GAAM,YAGjB1J,EAAK5W,KAAK0M,SAAS,SAAS,CAAD,2CAERtM,EAAawF,EAAUkZ,QAAcvf,GAAW,KAAD,GAA5Dme,EAAI,OACVxO,EAAMwO,EAAKxf,SACXiJ,EAAO+H,EAAIwR,YACXJ,GAAW,GAAO,mDAElB9gB,QAAQC,IAAI,EAAD,IACXyP,EAAM,KAAMpQ,MAAMZ,SAClBsB,QAAQC,IAAI,CACViB,QAAS,KAAM5B,MAAMZ,SAASG,KAAKqC,QACnC+G,QAAS,KAAM3I,MAAMZ,SAASG,KAAKoJ,UAGjCkZ,EAAM,GAERA,EADE,KAAM7hB,MAAMZ,SAASG,KAAKoJ,QAAQjB,SAAS,iBAE3CrB,KAAS5I,gBACT,IACA,KAAMuC,MAAMZ,SAASG,KAAKoJ,QAAQiD,MAChC,KAAM5L,MAAMZ,SAASG,KAAKoJ,QAAQkU,QAAQ,KAAO,GAChD,GAKC,KAAM7c,MAAMZ,SAASG,KAAKoJ,QAGlCN,EAAO,KAAMrI,MAAMZ,SAASG,KAAKqC,QAAU,MAAQigB,GACnDL,GAAW,GAAM,QAIF,MAAfpR,EAAIpK,SACNuB,OAAO4X,MAAM,oCAEbjB,EAAS,IAAMpX,IAChB,kEACF,gBApFa,sCAsFd,OACE,uBAAK8B,UAAU,OAAM,UACnB,0BAAQA,UAAU,cAAa,8BAE7B,6BAAI9B,OAEN,wBAAM8B,UAAU,eAAc,UAC5B,gBAACmZ,GAAA,EAAG,CACFC,SAAO,EACPpa,QAAQ,OACRgB,UAAU,yBACVqZ,SAlQiB,SAAC1S,GACxB+R,EAAY/R,GACZlH,EAAO,IACPmZ,GAAW,EACb,EA+PQtS,iBAAiB,OAAM,UAEtBpJ,EAASgB,GAAUY,SAAS,SAC3B,eAACqa,GAAA,EAAIzS,KAAI,UACP,eAACyS,GAAA,EAAIG,KAAI,CAAC3S,SAAS,OAAM,oBAI5BzJ,EAASgB,GAAUY,SAAS,SACE,OAA7BsK,EAAaxP,IAAI,SACf,eAACuf,GAAA,EAAIzS,KAAI,UACP,eAACyS,GAAA,EAAIG,KAAI,CAAC3S,SAAS,OAAM,uBAIjC,uBACElG,MAAO,CACLmN,gBAAiB,OACjB2L,aAAc,MACdC,YAAa,QACbC,YAAa,wBACbC,YAAa,MACb5Y,MAAO,OACPC,OAAQ,eACR,UAEY,SAAb0X,IAC+B,OAA7BrP,EAAaxP,IAAI,SACa,KAA7BwP,EAAaxP,IAAI,UACjB,eAACigB,GAAkB,CACjBjX,OAAQA,EACRmX,aArKO,SAACY,GACpB,IACE,IAAMC,EAAW9hB,KAAKwF,MAAMqc,GACtB7G,EAAWF,GAAUhR,GACD,OAAtBgY,EAAgB,QAAYA,EAAgB,MAAIrf,KAEpDuY,EAAmB,SAAI,GACvBA,EAAmB,SAAI,CAAC,CAAExb,KAAM,GAAIwD,MAAO,KAC3C,IAAM+e,EAAShH,GAAW+G,EAAU9G,GAGpC,GAFAhc,QAAQC,IAAI8iB,QAGQhjB,IAAlBgjB,EAAY,UACQhjB,IAApBgjB,EAAc,YACShjB,IAAvBgjB,EAAiB,eACMhjB,IAAvBgjB,EAAiB,SAGjB,YADAT,EAAa3c,KAAS3I,qBAGxBslB,EAAa,SAGaviB,IAAtBgjB,EAAgB,gBAAwBA,EAAgB,QAC5DrF,EAAUqF,GAEV,IAAML,EAAc5G,GAAUtC,GAC9BkJ,EAAsB,UAAI,EAE1B9E,EAAkB8E,EAIpB,CAHE,MAAOpjB,GACPgjB,EAAa3c,KAAS3I,qBACtBgD,QAAQC,IAAIX,EACd,CACF,EAoIc6iB,UAAWA,IAGH,SAAbxB,QAAqC5gB,IAAdwiB,GACtB,uBAAK5Z,MAAO,CAAEkZ,OAAQ,OAAW,WACA,OAA7BvQ,EAAaxP,IAAI,SACY,KAA7BwP,EAAaxP,IAAI,UACjB,gBAACqG,GAAA,EAAKkS,OAAM,CACV,aAAY1U,KAASvL,OAAS,YAC9Bka,SAAUqO,GACV3e,MAAO8G,EAAiB,SAAE,UAE1B,oCAASnF,KAASvL,OAAM,eACvBiN,IAAMoH,SAASC,QACd6T,EAAU5U,KAAI,SAAC/F,GACb,OAAO,yBAAQ5D,MAAO4D,EAAE,SAAEA,GAC5B,QAIN,wBACA,eAAC,GAAW,CACVkD,OAAQA,EACR1E,SAAUA,EACVqT,iBAAkBvV,EAClBsV,eAAgBA,EAChBG,sBA/WQ,SAACG,EAAKgD,GAC1B,IAGI1S,EAHAsU,EAAU5C,GAAUhR,GACpB6T,EAAYD,EAGZE,GAAmB,EACvB,IAAKxU,EAAI,EAAGA,EAAI0S,EAAK/b,OAAS,EAAGqJ,IAC/BuU,EAAYA,EAAU7B,EAAK1S,IACJ,kBAAZ0S,EAAK1S,KAAiBwU,EAAkBxU,GAKrD,GAHuB,kBAAZ0S,EAAK1S,KAAiBwU,EAAkBxU,GACnDuU,EAAU7B,EAAK1S,IAAM0P,GAEI,IAArB8E,EAAwB,CAE1B,IAAMtQ,EAAsB,kBAARwL,EAAmBrW,IAAM,GAC7Cib,EAAU7B,GACR6B,EACA5B,EAAK5R,MAAM,EAAG0T,GACd1a,EACAkC,EACAkI,EAEJ,CACAoP,EAAUgB,EACZ,EAuVc9E,oBArVgB,SAACkD,GAC7B,IAGI1S,EAHA0P,EAAMgC,GAAUhR,GAChBiS,EAASjD,EAGb,IAAK1P,EAAI,EAAGA,EAAI0S,EAAK/b,OAAS,QACZhB,IAAZ+c,EAAK1S,GADsBA,IAE/B2S,EAASA,EAAOD,EAAK1S,IAGvB,IAEMkE,EAA6B,kBAFnByO,EAAOzS,OAAOwS,EAAK1S,GAAI,GAEX,GAAkB3G,IAAM,GACpDqW,EAAM+C,GACJ/C,EACAgD,EAAK5R,MAAM,EAAGd,GACdlG,EACAkC,EACAkI,GAEFoP,EAAU5D,EACZ,EAiUcJ,eAAgBuH,GAChBpF,aAAcmF,KAEhB,uBACErY,MAAO,CACLmK,WAAY,MACZlK,MAAOiY,EAAU,MAAQ,SACzB,SAEDlgB,OAIO,SAAbggB,GACC,uBAAKhY,MAAO,CAAEkZ,OAAQ,OAAW,UAC/B,eAAC,GAAQ,CACPnI,eAAgB0H,GAChBvF,aAAcmF,GACd7B,eAAgBA,GAChBF,iBAAkBA,EAClBC,gBAAiBA,GACjBE,QAASA,EACTE,aAAcA,GACdC,cAAeA,EACfF,YAAaA,KAEf,uBACE1W,MAAO,CACLmK,WAAY,MACZlK,MAAOiY,EAAU,MAAQ,SACzB,SAEDlgB,eAQjB,CC/fA,IAAMmb,GAAY3e,EAAQ,IAmBX,SAAS6lB,GAAoBjV,GAE1C,IAAM3H,EAAW,eAGjB,EAAwCiL,cAAiB,mBAAlDC,EAAY,KACnB,GADoC,KACN5J,mBAAS,KAAG,mBAAnCub,EAAO,KAAEC,EAAU,KAC1B,EAA0Bxb,mBAAS,IAAG,mBAA/Byb,EAAK,KAAEC,EAAQ,KAGhB5F,EAAWC,cAEjB,EAAgC/V,mBAAS,QAAO,mBAAzCiZ,EAAQ,KAAEC,EAAW,KAE5B,EAAsBlZ,mBAAS,IAAG,mBAA3B/G,EAAG,KAAEgH,EAAM,KAClB,EAA8BD,oBAAS,GAAM,mBAAtCmZ,EAAO,KAAEC,EAAU,KAE1B,EAAoCpZ,mBAASoU,GAAU5X,EAAUkC,KAAW,mBAArEid,EAAU,KAAEC,EAAa,KAEhC,EAA4C5b,mBAAS,CAAC,GAAE,mBAAjD8R,EAAc,KAGrB,GAHwC,KAGR9R,sBAAU,mBAAnC6b,EAAQ,KAAEC,EAAW,KAC5B,EAA8B9b,mBAAS,IAAG,mBAAnC+b,EAAO,KAAEC,EAAU,KAG1B,GAAwBhc,wBAAS3H,GAAU,qBAApCqX,GAAI,MAAEgI,GAAO,MACpB,GAA0C1X,mBAAS,MAAK,qBAAjD6X,GAAa,MAAEN,GAAgB,MACtC,GAAsCvX,mBAAS,MAAK,qBAA7C2X,GAAW,MAAEF,GAAc,MAClC,GAAwCzX,mBAAS,MAAK,qBAA/C4X,GAAY,MAAEJ,GAAe,MAG9B7F,GADUhE,qBAAWX,IACD6E,QAGpBjH,GAAS,iDAAG,WAAO5C,GAAG,yFACE3P,IAAxBsZ,GAAUxa,KAAK6Q,GAAkB,0EAGZpO,EAAYoO,EAAK,CAAE/N,MAAO,MAAO,KAAD,EAAjDjD,EAAQ,OACd2a,GAAUwE,WACRnf,EAASqD,KAAK4L,KAAI,SAAC/F,GAAC,OAAKA,EAAEtE,GAAG,IAC9BoM,GACA,gDAEF1P,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,gBAZc,sCAoCf,GAvBAoJ,qBAAU,gBAC0BtJ,IAA9B0F,GAAgBW,IAClBjG,OAAO2K,OAAOrF,GAAgBW,IAAW/F,SAAQ,SAACuH,GAAC,OAAK0K,GAAU1K,EAAE,GAExE,GAAG,IAGHyB,qBAAU,WACR,IAAMiJ,EAAS,iDAAG,4GAAc,OAAP/Q,EAAE,+BAAG,CAAC,EAAC,kBAGLD,EAAY,WAAYC,GAAI,KAAD,EAA5C7C,EAAQ,OAEd8kB,EAAY9kB,EAASqD,KAAK4L,KAAI,SAAC/F,GAAC,OAAKA,EAAEtE,GAAG,KAAG,gDAE7CtD,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,kBATc,mCAWfqS,EADW,CAAE3Q,MAAO,KAEtB,GAAG,CAACoM,EAAOuD,SAGiBvR,IAAxBmE,EAAUkC,GACZ,OAAO,gEAGT,IAyDMud,GAAmB,iDAAG,WAAO/b,GAAC,6FAIQ,OAH1CA,EAAEC,iBACI+b,EAAkBhc,EAAE2B,OAAOvF,MAC3Bma,EAAM,CAAE7a,IAAKsgB,GACbriB,EAAK,CAAEE,OAAQT,KAAKC,UAAUkd,IAAO,EAAD,OACxB7c,EAAY,WAAYC,GAAI,KAAD,EASjB,OATtBmO,EAAG,OACH+T,EAAU/T,EAAI3N,KAAK,GAEnBohB,EAAQM,EAAQN,MAGhB7c,EAAMud,GADI,GACeV,GAC/BD,EAAW5c,GACX8c,EAASD,GACTO,EAAWE,GAAiB,+DAE7B,gBAhBwB,sCAkBnBC,GAAY,SAACZ,EAASE,GAC1B,IAAMrY,EAAS,GACTgZ,EAAYhI,GAAUmH,GA8B5B,OA7BAE,EAAM9iB,SAAQ,SAACiO,GACK,WAAdA,EAAKrP,KACgB,IAAnBqP,EAAKyV,UACPjZ,EAAOuS,KAAK,CAAE7c,KAAM8N,EAAK9N,KAAMwD,MAAOP,IAAKxE,KAAMqP,EAAKrP,OACnD6L,EAAOuS,KAAK,CAAC,CAAE7c,KAAM8N,EAAK9N,KAAMwD,MAAOP,IAAKxE,KAAMqP,EAAKrP,QACrC,SAAdqP,EAAKrP,KACS,IAAnBqP,EAAKyV,UACPjZ,EAAOuS,KAAK,CAAE7c,KAAM8N,EAAK9N,KAAMwD,MAAO,GAAI/E,KAAMqP,EAAKrP,OAClD6L,EAAOuS,KAAK,CAAC,CAAE7c,KAAM8N,EAAK9N,KAAMwD,MAAO,GAAI/E,KAAMqP,EAAKrP,QACpC,SAAdqP,EAAKrP,OACS,IAAnBqP,EAAKyV,UACPjZ,EAAOuS,KAAK,CACV7c,KAAM8N,EAAK9N,KACXwD,MAAO,GACPggB,WAAY1V,EAAK2V,MACjBhlB,KAAMqP,EAAKrP,OAGb6L,EAAOuS,KAAK,CACV,CACE7c,KAAM8N,EAAK9N,KACXwD,MAAO,GACPggB,WAAY1V,EAAK2V,MACjBhlB,KAAMqP,EAAKrP,QAIrB,IACA6kB,EAAUzG,KAAK,CAAEvS,OAAQA,IAClBgZ,CACT,EAGM7C,GAAQ,iDAAG,WAAOrZ,GAAC,yFAevB,OAdAA,EAAEC,iBAEE/I,OAAQiB,EACR9B,EAAO6d,GAAUuH,GACjBa,EAAajB,EAAQtV,KAAI,SAACwW,GAC5B,MAAO,CAAErZ,OAAQqZ,EAAOrZ,OAAO6C,KAAI,SAACpN,GAAC,OAAKA,EAAEyD,KAAK,IACnD,SACmBjE,IAAf9B,EAAKa,QACPA,EAAQb,EAAKa,aACNb,EAAKa,OAEdoL,GAAsBjM,GACtBA,EAAc,QAAIwlB,EAClBxlB,EAAc,QAAIimB,EAClB,mBAIqBtjB,EAAawF,EAAUpF,KAAKC,UAAUhD,GAAOa,GAAO,KAAD,GAAhEof,EAAI,OACVxO,EAAMwO,EAAKxf,SACXiJ,EAAO+H,EAAIwR,YACXJ,GAAW,GAAO,kDAElB9gB,QAAQC,IAAI,EAAD,IACXyP,EAAM,KAAMpQ,MAAMZ,SAElBiJ,EACE,KAAMrI,MAAMZ,SAASG,KAAKqC,QACxB,MACA,KAAM5B,MAAMZ,SAASG,KAAKoJ,SAE9B6Y,GAAW,GAAM,QAGA,MAAfpR,EAAIpK,SACNuB,OAAO4X,MAAM,qCACbjB,EAAS,IAAMpX,IAChB,0DACF,gBAvCa,sCAyCR4a,GAAO,SAACpZ,GACZA,EAAEC,iBACF2V,GAAU,EACZ,EAEM4D,GAAQ,iDAAG,WAAOxZ,GAAC,uFACJ,GAAnBA,EAAEC,sBACW9H,IAATqX,GAAkB,gBAEH,OADjBzP,EAAOhC,KAAS7I,SAChBgkB,GAAW,GAAM,8BAIf1J,GAAK5W,KAAK0M,SAAS,QAAQ,CAAD,gBAEE,OADxBrN,EAAW,IAAI+X,UACZC,OAAO,OAAQT,IAAM,mBAGTzX,EAAkByG,EAAUvG,GAAU,KAAD,GAAlDqe,EAAI,OAEVxO,EAAMwO,EAAKxf,SACXiJ,EAAO+H,EAAIwR,YACXJ,GAAW,GAAO,kDAElB9gB,QAAQC,IAAI,EAAD,IAEXyP,EAAM,KAAMpQ,MAAMZ,SAElBiJ,EACE,KAAMrI,MAAMZ,SAASG,KAAKqC,QACxB,MACA,KAAM5B,MAAMZ,SAASG,KAAKoJ,SAE9B6Y,GAAW,GAAM,YAGjB1J,GAAK5W,KAAK0M,SAAS,SAAS,CAAD,2CAERtM,EAAawF,EAAUkZ,QAAcvf,GAAW,KAAD,GAA5Dme,EAAI,OACVxO,EAAMwO,EAAKxf,SACXiJ,EAAO+H,EAAIwR,YACXJ,GAAW,GAAO,mDAElB9gB,QAAQC,IAAI,EAAD,IACXyP,EAAM,KAAMpQ,MAAMZ,SAElBiJ,EACE,KAAMrI,MAAMZ,SAASG,KAAKqC,QACxB,MACA,KAAM5B,MAAMZ,SAASG,KAAKoJ,SAE9B6Y,GAAW,GAAM,QAIF,MAAfpR,EAAIpK,SACNuB,OAAO4X,MAAM,qCACbjB,EAAS,IAAMpX,IAChB,kEACF,gBAtDa,sCAwDd,OACE,uBAAK8B,UAAU,OAAM,UACnB,0BAAQA,UAAU,cAAa,8BAE7B,6BAAI9B,OAEN,wBAAM8B,UAAU,eAAc,UAC5B,gBAACmZ,GAAA,EAAG,CACFC,SAAO,EACPpa,QAAQ,OACRgB,UAAU,yBACVqZ,SA9KiB,SAAC1S,GACxB+R,EAAY/R,GACZlH,EAAO,IACPmZ,GAAW,EACb,EA2KQtS,iBAAiB,OAAM,UAEtBpJ,EAASgB,GAAUY,SAAS,SAC3B,eAACqa,GAAA,EAAIzS,KAAI,UACP,eAACyS,GAAA,EAAIG,KAAI,CAAC3S,SAAS,OAAM,oBAI5BzJ,EAASgB,GAAUY,SAAS,SACE,OAA7BsK,EAAaxP,IAAI,SACf,eAACuf,GAAA,EAAIzS,KAAI,UACP,eAACyS,GAAA,EAAIG,KAAI,CAAC3S,SAAS,OAAM,uBAIjC,uBACElG,MAAO,CACLmN,gBAAiB,OACjB2L,aAAc,MACdC,YAAa,QACbC,YAAa,wBACbC,YAAa,MACb5Y,MAAO,OACPC,OAAQ,eACR,UAEY,SAAb0X,QAAoC5gB,IAAbwjB,GACtB,uBAAK5a,MAAO,CAAEkZ,OAAQ,OAAW,UAC/B,gBAAC1Z,GAAA,EAAKkS,OAAM,CACV,aAAY1U,KAASvL,OAAS,WAC9Bka,SAAUqP,GACV3f,MAAOyf,EAAQ,UAEf,oCAAS9d,KAASvL,OAAM,cACvBiN,IAAMoH,SAASC,QACd6U,EAAS5V,KAAI,SAAC/F,GACZ,OAAO,yBAAQ5D,MAAO4D,EAAE,SAAEA,GAC5B,QAGJ,wBACA,gBAACqM,GAAA,EAAS,CAACC,OAAK,YACd,eAACC,GAAA,EAAG,UACF,2CAAa8O,EAAQliB,YAEvB,wBACCsG,IAAMoH,SAASC,QACduU,EAAQtV,KAAI,SAACwW,EAAQ/Z,GACnB,OACE,eAAC+J,GAAA,EAAG,CACFxL,MAAO,CACLiO,QAAS,IACT,SAEF,eAACrI,GAAA,EAAS,CAACC,iBAAiB,IAAG,SAC7B,gBAACD,GAAA,EAAUK,KAAI,CAACC,SAAUzE,EAAE,UAC1B,eAACmE,GAAA,EAAUO,OAAM,UACf,6BACE,0CAAY1E,EAAC,WAGjB,eAACmE,GAAA,EAAUQ,KAAI,UACZ1H,IAAMoH,SAASC,QACdvO,OAAO2K,OAAOqZ,EAAOrZ,QAAQ6C,KAAI,SAACxD,GAChC,OACE,gBAACgK,GAAA,EAAG,CACFxL,MAAO,CACLoR,kBAAmB,QACnBC,kBAAmB,MACnBC,aAAc,MACdrD,QAAS,IACT,UAEF,eAACxC,GAAA,EAAG,CACF8F,GAAI,EACJvR,MAAO,CACLwR,iBAAkB,SAClBC,iBAAkB,OAClB,SAEF,6BACE,6BAAIjQ,EAAK3J,WAGb,eAAC4T,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACM,SAAd/P,EAAKlL,KACJ,gBAACkJ,GAAA,EAAKkS,OAAM,CACV,aACE1U,KAASvL,OAAS,IAAM+P,EAAK3J,KAG/B8T,SAAU,SAAC1M,GACTA,EAAEC,iBACFsC,EAAKnG,MAAQ4D,EAAE2B,OAAOvF,KACxB,EAAE,UAEF,yBAAQA,MAAM,GAAE,SACb2B,KAASvL,OACR,IACA+P,EAAK3J,OAER6G,IAAMoH,SAASC,QACdvE,EAAK6Z,WAAWrW,KAAI,SAAC/F,GACnB,OACE,yBAAQ5D,MAAO4D,EAAE,SAAEA,GAEvB,QAGY,SAAduC,EAAKlL,KACP,eAACkJ,GAAA,EAAKK,QAAO,CACXvJ,KAAK,OAELnB,GAAIqM,EAAK3J,KACT8T,SAAU,SAAC1M,GACTA,EAAEC,iBACFsC,EAAKnG,MAAQ4D,EAAE2B,OAAOvF,KACxB,EACA,aACE2B,KAAS5K,MAAQ,IAAMoP,EAAK3J,OAIhC,eAAC2H,GAAA,EAAKK,QAAO,CACXvJ,KAAK,SACLnB,GAAIqM,EAAK3J,KAET8T,SAAU,SAAC1M,GACTA,EAAEC,iBACFsC,EAAKnG,MAAQ+I,SACXnF,EAAE2B,OAAOvF,MACT,GAEJ,EACA,aACE2B,KAAS5K,MAAQ,IAAMoP,EAAK3J,WAO1C,aAOd,KAEkB,IAAnByiB,EAAQliB,QACP,eAACkG,EAAA,EAAM,CACLC,QAAQ,OACRC,QAAS,WACP,IAAMid,EAAQP,GAAUZ,EAASE,GACjCD,EAAWkB,EACb,EAAE,SAEF,oBACElc,UAAU,oBACV,cAAY,OACZa,MAAO,aACPJ,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,YAMnB,wBACA,wBACA,eAAC,GAAW,CACV2B,OAAQuY,EACRjd,SAAUA,EACVqT,iBAAkBvV,EAClBsV,eAAgBA,EAChBG,sBArZQ,SAACG,EAAKgD,GAC1B,IAGI1S,EAHAsU,EAAU5C,GAAUuH,GACpBgB,EAAgB3F,EAGhBE,GAAmB,EACvB,IAAKxU,EAAI,EAAGA,EAAI0S,EAAK/b,OAAS,EAAGqJ,IAC/Bia,EAAgBA,EAAcvH,EAAK1S,IACZ,kBAAZ0S,EAAK1S,KAAiBwU,EAAkBxU,GAKrD,GAHuB,kBAAZ0S,EAAK1S,KAAiBwU,EAAkBxU,GACnDia,EAAcvH,EAAK1S,IAAM0P,GAEA,IAArB8E,EAAwB,CAE1B,IAAMtQ,EAAsB,kBAARwL,EAAmBrW,IAAM,GAC7Cib,EAAU7B,GACR6B,EACA5B,EAAK5R,MAAM,EAAG0T,GACd1a,EACAkC,EACAkI,EAEJ,CACAgV,EAAc5E,EAChB,EA6Xc9E,oBA3XgB,SAACkD,GAC7B,IAGI1S,EAHA0P,EAAMgC,GAAUuH,GAChBtG,EAASjD,EAGb,IAAK1P,EAAI,EAAGA,EAAI0S,EAAK/b,OAAS,QACZhB,IAAZ+c,EAAK1S,GADsBA,IAE/B2S,EAASA,EAAOD,EAAK1S,IAGvB,IAEMkE,EAA6B,kBAFnByO,EAAOzS,OAAOwS,EAAK1S,GAAI,GAEX,GAAkB3G,IAAM,GACpDqW,EAAM+C,GACJ/C,EACAgD,EAAK5R,MAAM,EAAGd,GACdlG,EACAkC,EACAkI,GAEFgV,EAAcxJ,EAChB,EAuWcJ,eAAgBuH,GAChBpF,aAAcmF,KAGhB,wBAEA,uBACErY,MAAO,CACLmK,WAAY,MACZlK,MAAOiY,EAAU,MAAQ,SACzB,SAEDlgB,OAIO,SAAbggB,GACC,uBAAKhY,MAAO,CAAEkZ,OAAQ,OAAW,UAC/B,eAAC,GAAQ,CACPnI,eAAgB0H,GAChBvF,aAAcmF,GACd7B,eAAgBA,GAChBF,iBAAkBA,GAClBC,gBAAiBA,GACjBE,QAASA,GACTE,aAAcA,GACdC,cAAeA,GACfF,YAAaA,KAEf,uBACE1W,MAAO,CACLmK,WAAY,MACZlK,MAAOiY,EAAU,MAAQ,SACzB,SAEDlgB,eAQjB,C,cCtjBe,SAAS2jB,GAAsBvW,GAgB5C,YACwBhO,IAAtBgO,EAAMwW,kBACgBxkB,IAAtBgO,EAAMyW,kBACgBzkB,IAAtBgO,EAAM0W,kBACW1kB,IAAjBgO,EAAMuJ,aACcvX,IAApBgO,EAAM2W,gBACW3kB,IAAjBgO,EAAM4W,aACiB5kB,IAAvBgO,EAAM6W,mBACkB7kB,IAAxBgO,EAAM8W,oBACY9kB,IAAlBgO,EAAMqR,cACSrf,IAAfgO,EAAMqJ,WACerX,IAArBgO,EAAM+W,iBACc/kB,IAApBgO,EAAMgX,UAEC,UAGP,gBAAC5c,GAAA,EAAI,CAACC,SAAU2F,EAAMwW,YAAY,UAChC,gBAACpQ,GAAA,EAAG,CAACxL,MAAO,CAAEyZ,WAAY,QAAY,UACpC,eAAChO,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACT,gBAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,UAC1B,gBAACC,GAAA,EAAKkS,OAAM,CACV,aAAW,uBACXrW,MAAO+J,EAAMuJ,OACbhD,SAAU,SAAC1M,GACTA,EAAEC,iBACFkG,EAAM2W,UAAU9c,EAAE2B,OAAOvF,MAC3B,EAAE,UAEF,yBAAQA,MAAM,IAAG,eACjB,yBAAQA,MAAM,IAAG,eACjB,yBAAQA,MAAM,IAAG,eACjB,yBAAQA,MAAM,MAAI,oBAEpB,eAACmE,GAAA,EAAKoM,KAAI,CAACrM,UAAU,aAAY,mCAGrC,eAACkM,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACT,gBAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,UAC1B,gBAACC,GAAA,EAAKkS,OAAM,CACV,aAAW,sBACX5R,IAAKsF,EAAMyW,YAAY,UAEvB,yBAAQxgB,MAAM,IAAG,eACjB,yBAAQA,MAAM,IAAG,eACjB,yBAAQA,MAAM,IAAG,eACjB,yBAAQA,MAAM,IAAG,kBAEnB,eAACmE,GAAA,EAAKoM,KAAI,CAACrM,UAAU,aAAY,kCAGrC,eAACkM,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACT,gBAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,UAC1B,gBAACC,GAAA,EAAKkS,OAAM,CACV,aAAW,+BACX5R,IAAKsF,EAAM0W,YAAY,UAEvB,yBAAQzgB,MAAM,IAAG,eACjB,yBAAQA,MAAM,IAAG,kBAEnB,eAACmE,GAAA,EAAKoM,KAAI,CAACrM,UAAU,aAAY,8CAMvC,eAACiM,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACT,eAAC/R,GAAA,EAAKK,QAAO,CACXN,UAAU,OACVjJ,KAAK,OACLwgB,OAAO,OACPxE,MAAM,OACN3G,SAAU,SAAC1M,GACT,IAAMod,EAAQpd,EAAE2B,OAAOmW,MAAM,GAEvBC,EAAa,IAAIC,WAEvBD,EAAWE,UAAY,WACrB,IAAMqC,EAAWvC,EAAWI,OAEtBC,EAAQ,IAAIC,OAAO,MAAO,KAC5BC,EAAWgC,EAASla,QAAQgY,EAAO,IAAIrI,MAAM,MAEjD5J,EAAM6W,aAAa1E,EAAS,IAC5BnS,EAAMqR,QAAQ4F,GACd9E,EAAS5V,OAAO,EAAG,GACnByD,EAAM8W,cAAc3E,EACtB,EACAP,EAAWQ,WAAW6E,EACxB,QAIN,eAAC7Q,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,eAACjM,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAACC,GAAA,EAAKoS,MAAK,CACTtb,KAAK,WACLgc,MAAM,+CACNxS,IAAKsF,EAAM4W,eAKG,OAArB5W,EAAM+W,YACL,eAAC3Q,GAAA,EAAG,UACF,eAAC5F,GAAA,EAAS,UACR,gBAACA,GAAA,EAAUK,KAAI,CAACC,SAAS,IAAG,UAC1B,eAACN,GAAA,EAAUO,OAAM,UACdnJ,KAAS/K,QAAU,MAAQmT,EAAMqJ,KAAK5W,OAEzC,eAAC+N,GAAA,EAAUQ,KAAI,CAACpG,MAAO,CAAEyX,SAAU,SAAUnX,OAAQ,QAAY,SAC/D,gBAACiG,GAAA,EAAK,CAACC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,YACtC,iCACE,8BACGjI,IAAMoH,SAASC,QACdX,EAAMgX,UAAUpN,MAAM5J,EAAMuJ,QAAQ3J,KAAI,SAAC0S,GACvC,OAAO,8BAAKA,GACd,SAIN,iCACGhZ,IAAMoH,SAASC,QACdX,EAAM+W,WAAWnX,KAAI,SAAC/F,GACpB,OACE,8BACGP,IAAMoH,SAASC,QACd9G,EAAE+P,MAAM5J,EAAMuJ,QAAQ3J,KAAI,SAAC0S,GACzB,OAAO,8BAAKA,GACd,MAIR,mBAShB,eAAClM,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,eAACnN,EAAA,EAAM,CAACC,QAAQ,UAAUjI,KAAK,SAAQ,SACpC0G,KAASxJ,eAMtB,CCxKe,SAASmoB,GAAsBvW,GAC5C,YACwBhO,IAAtBgO,EAAMkX,kBACgBllB,IAAtBgO,EAAMwW,kBACWxkB,IAAjBgO,EAAMjD,aACW/K,IAAjBgO,EAAM4W,aAC2B5kB,IAAjCgO,EAAMmX,6BACkBnlB,IAAxBgO,EAAMoX,cAEC,UAGP,gBAAClR,GAAA,EAAS,CAACC,OAAK,YACd,eAACC,GAAA,EAAG,CAACxL,MAAO,CAAEyZ,WAAY,OAAW5U,cAAe,QAAY,SAC9D,eAAC4G,GAAA,EAAG,UAC4B,IAA7BrG,EAAMkX,YAAYlkB,QACjB,gBAACoH,GAAA,EAAKkS,OAAM,CACV,aAAY1U,KAASvL,OAAS,cAC9Bka,SAAUvG,EAAMmX,uBAAuB,UAEvC,oCACGvf,KAASvL,OAAM,uCAEjBiN,IAAMoH,SAASC,QACdX,EAAMkX,YAAYtX,KAAI,SAAC/F,GACrB,OAAO,yBAAQ5D,MAAO4D,EAAO,IAAE,SAAEA,EAAO,KAC1C,YAMV,eAACuM,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,eAACjM,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAACC,GAAA,EAAKoS,MAAK,CACTtb,KAAK,WACLgc,MAAM,uDACNxS,IAAKsF,EAAM4W,eAKnB,eAACxQ,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,eAAC,GAAW,CACVtJ,OAAQiD,EAAMjD,OACd1E,SAAU,gBACVqT,iBAAkB,CAAE2L,cAAe,CAAC,GACpC5L,eAAgB,CAAExU,OAAQ,CAAExE,MAAM,IAClCmZ,sBAAuB5L,EAAMoX,cAC7BvL,oBAAqB,WAAO,EAC5BF,eAAgB3L,EAAMwW,oBAMlC,CC7CA,IAAMzI,GAAY3e,EAAQ,IAEpBwnB,GAAStd,IAAMC,YACf+d,GAAYhe,IAAMC,YAClBkd,GAAcnd,IAAMC,YACpBmd,GAAcpd,IAAMC,YAEX,SAASge,KACtB,MAAoC5d,mBAAS,MAAK,mBAA3Cod,EAAU,KAAED,EAAa,KAChC,EAAkCnd,mBAAS,MAAK,mBAAzCqd,EAAS,KAAEH,EAAY,KACxBW,EAASlQ,qBAAWX,IAAY8Q,KACtC,EAAsB9d,mBAAS,GAAE,mBAA1BsF,EAAG,KAAEyY,EAAM,KAClB,EAAwB/d,mBAAS,MAAK,mBAA/B0P,EAAI,KAAEgI,EAAO,KAEpB,EAAgC1X,mBAAS,QAAO,mBAAzCiZ,EAAQ,KAAEC,EAAW,KAE5B,EAA4ClZ,mBAAS,GAAE,mBAAhDge,EAAc,KAAEC,EAAiB,KACxC,EAAsCje,mBAAS,IAAG,mBAA3Cud,EAAW,KAAEW,EAAc,KAClC,EAAoCle,mBAAS,IAAG,mBAAzCme,EAAU,KAAEC,EAAa,KAChC,EAA4Bpe,mBAAS,CAAC,GAAE,mBAAjCoD,EAAM,KAAE4S,EAAS,KAExB,EAAsBhW,mBAAS,IAAG,mBAA3B/G,EAAG,KAAEgH,EAAM,KAClB,EAA8BD,oBAAS,GAAM,mBAAtCmZ,EAAO,KAAEC,EAAU,KAE1B,EAA4BpZ,mBAAS,KAAI,mBAAlC4P,EAAM,KAAEoN,EAAS,KAExBrb,qBAAU,WACR,IAAM0c,EAAc,iDAAG,8GACHzkB,EAAY,cAAe,CAAC,GAAG,KAAD,EAA1CoO,EAAG,OAETkW,EAAelW,EAAI3N,MAAM,2CAC1B,kBAJmB,mCAKpBgkB,GACF,GAAG,IAEH,IAAMxB,GAAW,iDAAG,WAAO3c,GAAC,uFAKS,GAJnCA,EAAEC,iBACIyP,EAAS+N,GAAUvd,QAAQ9D,MAC3BgiB,EAAWxB,GAAY1c,QAAQ9D,MAC/BwT,EAAWiN,GAAY3c,QAAQ9D,MAC/BqT,EAAMsN,GAAO7c,QAAQ0S,QAEZ,KAAXlD,GAA8B,KAAb0O,GAAgC,KAAbxO,EAAe,gBAEpC,OADjB7P,EAAO,qCACPmZ,GAAW,GAAM,6BAGfxJ,IAAW0O,GAAY1O,IAAWE,GAAYwO,IAAaxO,EAAQ,iBAEpD,OADjB7P,EAAO,mDACPmZ,GAAW,GAAM,8BAGN,OAAT1J,QAA0BrX,IAATqX,EAAkB,iBAEpB,OADjBzP,EAAO,yBACPmZ,GAAW,GAAM,2BAShB,OANHnZ,EAAO,IACPmZ,GAAW,GACX2E,EAAO,GACPF,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK,iCAAmC+kB,EAAiB,cACxD,UACGvO,GAAgBC,EAAMC,EAAKC,EAAQ0O,EAAUxO,GAAU,KAAD,GAC5D+N,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK,+BAAiC+kB,EAAiB,gBAEzDC,GAAkB,SAACM,GAAI,OAAKA,EAAO,CAAC,IACpCR,EAAO,KAAK,4CACb,gBApCgB,sCAsCXS,GAAQ,iDAAG,WAAOte,GAAC,qFAGsB,GAF7CA,EAAEC,iBACEiW,EAAYhC,GAAUhR,GAC1BgT,EAAY5T,GAAsB4T,QAEf/d,IAAf8lB,GAA2C,KAAfA,EAAiB,gBAE9B,OADjBle,EAAO,iCACPmZ,GAAW,GAAM,0BASjB,GALFhD,EAAkB,OAAIA,EAAkB,OAAErc,QACxC,SAACmG,GAAC,MACoB,kBAAZA,EAAE5D,QAAuB2F,MAAM/B,EAAE5D,QACrB,kBAAZ4D,EAAE5D,OAAkC,KAAZ4D,EAAE5D,OACjC4F,MAAMC,QAAQjC,EAAE5D,QAA6B,IAAnB4D,EAAE5D,MAAMjD,MAAa,KAGhD4I,MAAMmU,EAAgB,MAAG,CAAD,gBAET,OADjBnW,EAAO,kCACPmZ,GAAW,GAAM,8BAGgB,IAA/BhD,EAAkB,OAAE/c,OAAY,iBAEjB,OADjB4G,EAAO,qCACPmZ,GAAW,GAAM,2BAgBhB,OAZHnZ,EAAO,IACPmZ,GAAW,GAEL7iB,EAAO,CAAC,GACRuN,EAAM,IACR6R,KAAKS,GACT7f,EAAc,QAAI,CAAEuN,OAEpBia,EAAO,GACPF,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK,iCAAmC+kB,EAAiB,cACxD,UACGxN,GAAgB2N,EAAY5nB,EAAM0mB,GAAO7c,QAAQ0S,SAAS,KAAD,GAC/D+K,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK,+BAAiC+kB,EAAiB,gBAEzDC,GAAkB,SAACM,GAAI,OAAKA,EAAO,CAAC,IACpCR,EAAO,KAAK,4CACb,gBAjDa,sCA0DRP,GAAsB,iDAAG,WAAOtd,GAAC,+FAKK,OAJ1CA,EAAEC,iBACIge,EAAaZ,EAAYxjB,QAAO,SAAC0kB,GAAE,OAAKA,EAAG7iB,MAAQsE,EAAE2B,OAAOvF,KAAK,IAAE,GACnEoiB,EAAcP,EAAWhiB,SACzBsa,EAAM,CAAE7a,IAAK8iB,GACb7kB,EAAK,CAAEE,OAAQT,KAAKC,UAAUkd,IAAO,EAAD,OACxB7c,EAAY,YAAaC,GAAI,KAAD,EAAxCmO,EAAG,OACH7L,EAAW6L,EAAI3N,KAAK,GACtBiD,EAAS,GACOnB,EAASkB,OAAO4I,KAAI,SAACjH,GAAE,OAAKA,EAAG1B,MAAM,IAC7C3E,SAAQ,SAACqG,GACnB1B,EAASA,EAAOtD,OACdgF,EAAGiH,KAAI,SAAC/P,GACN,IAAIkc,EACW,WAAblc,EAAIqB,KACAwE,IACa,WAAb7F,EAAIqB,KACJ,CAACwE,MACD7F,EAAIqB,KACJ,IAGN,MAAO,CAAEuB,KAAM5C,EAAI4C,KAAMwD,MAAO8V,EAClC,IAEJ,KACMuM,EAAU,CAAC,GACH,KAAI5iB,IAClB4iB,EAAgB,OAAIrhB,EACpB0Y,EAAU2I,GACVP,EAAcle,EAAE2B,OAAOvF,OAAO,4CAC/B,gBA/B2B,sCA6D5B,OACE,uBAAKkE,UAAU,OAAM,UACnB,yBAAQA,UAAU,cAAa,uCAC/B,wBAAMA,UAAU,eAAc,UAC5B,gBAACmZ,GAAA,EAAG,CACFC,SAAO,EACPpa,QAAQ,OACRgB,UAAU,yBACVqZ,SA3EiB,SAAC1S,GACxB+R,EAAY/R,GACZlH,EAAO,IACPmZ,GAAW,EACb,EAwEQtS,iBAAiB,OAAM,UAEvB,eAAC6S,GAAA,EAAIzS,KAAI,UACP,eAACyS,GAAA,EAAIG,KAAI,CAAC3S,SAAS,OAAM,oBAG3B,eAACwS,GAAA,EAAIzS,KAAI,UACP,eAACyS,GAAA,EAAIG,KAAI,CAAC3S,SAAS,OAAM,uBAG7B,gBAACoF,GAAA,EAAS,CAACC,OAAK,YACA,SAAbyM,GACC,eAACxM,GAAA,EAAG,UACF,eAAC,GAAiB,CAChBoQ,YAAa2B,GACbpb,OAAQA,EACR6Z,OAAQA,GACRO,uBAAwBA,GACxBC,cAtDQ,SAACrL,EAAKgD,GAC1B,IAGI1S,EAHAsU,EAAU5C,GAAUhR,GACpB6T,EAAYD,EAGZE,GAAmB,EACvB,IAAKxU,EAAI,EAAGA,EAAI0S,EAAK/b,OAAS,EAAGqJ,IAC/BuU,EAAYA,EAAU7B,EAAK1S,IACJ,kBAAZ0S,EAAK1S,KAAiBwU,EAAkBxU,GAKrD,GAHuB,kBAAZ0S,EAAK1S,KAAiBwU,EAAkBxU,GACnDuU,EAAU7B,EAAK1S,IAAM0P,GAEI,IAArB8E,EAAwB,CAE1B,IAAMtQ,EAAsB,kBAARwL,EAAmBrW,IAAM,GAE7Cib,EAAU7B,GACR6B,EACA5B,EAAK5R,MAAM,EAAG0T,QACd7e,OACAA,EACAuO,EAEJ,CACAoP,EAAUgB,EACZ,EA6BcuG,YAAaA,MAIL,SAAbtE,GACC,eAACxM,GAAA,EAAG,UACF,eAACmQ,GAAqB,CACpBC,YAAaA,GACbC,YAAaA,GACblN,OAAQA,EACRoN,UAAWA,EACXD,YAAaA,GACbE,OAAQA,GACRC,aAAcA,EACdC,cAAeA,EACfzF,QAASA,EACThI,KAAMA,EACN0N,WAAYA,EACZC,UAAWA,MAIjB,eAAC5Q,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,uBACEzL,MAAO,CACLmK,WAAY,MACZlK,MAAOiY,EAAU,MAAQ,SACzB,SAEDlgB,QAIP,eAACwT,GAAA,EAAG,CAACxL,MAAO,CAAEyZ,WAAY,OAAW5U,cAAe,QAAY,SAC9D,eAAC4G,GAAA,EAAG,UACF,eAACkS,GAAA,EAAW,CACVtZ,IAAKA,EACLiO,MAAK,UAAKjO,EAAG,KACb9F,QAAiB,MAAR8F,EAAc,UAAY,aAIzC,eAACmH,GAAA,EAAG,CAACxL,MAAO,CAAEyZ,WAAY,OAAW5U,cAAe,QAAY,SAC9D,eAAC4G,GAAA,EAAG,UACF,oDAGJ,eAACD,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,2BACEtW,GAAG,SACH6K,MAAO,CAAE2X,OAAQ,QACjBC,KAAK,MACLC,KAAK,KACLC,UAAQ,EACRzc,MAAOuhB,EAAOC,KACX7X,KAAI,SAAC4Y,GAAC,OAAKA,EAAE5lB,GAAG,IAChB6lB,UACAjX,KAAK,mBAQxB,C,cCtSMkX,IAFYtpB,EAAQ,IAEEkK,IAAMC,aAC5B+d,GAAYhe,IAAMC,YAClBkd,GAAcnd,IAAMC,YACpBmd,GAAcpd,IAAMC,YACpBof,GAAcrf,IAAMC,YAEX,SAASqf,KACtB,IAAMpB,EAASlQ,qBAAWX,IAAY8Q,KACtC,EAAsB9d,mBAAS,GAAE,mBAA1BsF,EAAG,KAAEyY,EAAM,KAElB,EAA4C/d,mBAAS,GAAE,mBAAhDge,EAAc,KAAEC,EAAiB,KACxC,EAAsCje,mBAAS,IAAG,mBAA3Cud,EAAW,KAAEW,EAAc,KAElC,EAAsBle,mBAAS,IAAG,mBAA3B/G,EAAG,KAAEgH,EAAM,KAClB,EAA8BD,oBAAS,GAAM,mBAAtCmZ,EAAO,KAAEC,EAAU,KAG1BzX,qBAAU,WACR,IAAM0c,EAAc,iDAAG,8GACHzkB,EAAY,cAAe,CAAEK,MAAO,MAAO,KAAD,EAAtD+N,EAAG,OAETkW,EAAelW,EAAI3N,MAAM,2CAC1B,kBAJmB,mCAKpBgkB,GACF,GAAG,IAGH,IAAMa,EAAsB,iDAAG,kHAMgB,GALvCtP,EAAS+N,GAAUvd,QAAQ9D,MAC3BuT,EAASiN,GAAY1c,QAAQ9D,MAC7BwT,EAAWiN,GAAY3c,QAAQ9D,MAC/BiJ,EAAMwZ,GAAoB3e,QAAQ9D,MAClC6iB,EAAWJ,GAAoB3e,QAAQgf,cACvCxO,EAAWoO,GAAY5e,QAAQ0S,QAEpB,IAAbqM,EAAc,iBAEC,OADjBlf,EAAO,wCACPmZ,GAAW,GAAM,8BAGJ,KAAXxJ,GAA8B,KAAbE,GAA8B,KAAXD,EAAa,iBAElC,OADjB5P,EAAO,qCACPmZ,GAAW,GAAM,8BAGfxJ,IAAWC,GAAUD,IAAWE,GAAYD,IAAWC,EAAQ,iBAEhD,OADjB7P,EAAO,6CACPmZ,GAAW,GAAM,2BAYF,GATjBnZ,EAAO,IACPmZ,GAAW,GACX2E,EAAO,GAEPF,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK,mCAAqC+kB,EAAiB,cAGvDhG,EAAQ,GACF,QAARzS,EAAa,iBACN7C,EAAI,EAAE,KAAD,QAAEA,EAAI6a,EAAYlkB,QAAM,kCACpBqX,GACd6M,EAAY7a,GAAG9G,IACfgU,EACAC,EACAC,EACAc,GACA,KAAD,GANKlK,EAAC,OAOPsR,EAAMrC,KAAKjP,GACXqX,GAASrb,EAAI,GAAK6a,EAAYlkB,OAAU,KAAK,QATPqJ,IAAG,iEAY3BgO,GAAgBnL,EAAKqK,EAAQC,EAAQC,EAAUc,GAAU,KAAD,GAAlElK,EAAC,OACPsR,EAAMrC,KAAKjP,GAAG,YAEC,IAAbkK,EAAiB,kCACGyO,aAAYrH,GAAOjH,OAAO,KAAD,GAAzCqH,EAAO,OACbnH,kBAAOmH,EAAS,2BAChByF,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK,4DACJ,QAEL4kB,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK,iCAAmC+kB,EAAiB,gBAE3DC,GAAkB,SAACM,GAAI,OAAKA,EAAO,CAAC,IACpCR,EAAO,KAAK,4CACb,kBA/D2B,mCAkEtBuB,EAAmB,iDAAG,sHAGmB,GAFvC/Z,EAAMwZ,GAAoB3e,QAAQ9D,MAClC6iB,EAAWJ,GAAoB3e,QAAQgf,cACvCxO,EAAWoO,GAAY5e,QAAQ0S,QAEpB,IAAbqM,EAAc,gBAEC,OADjBlf,EAAO,wCACPmZ,GAAW,GAAM,0BAYnB,GATAnZ,EAAO,IACPmZ,GAAW,GACX2E,EAAO,GACPF,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK,mCAAqC+kB,EAAiB,cAGvDhG,EAAQ,GACF,QAARzS,EACF,IAAS7C,EAAI,EAAGA,EAAI6a,EAAYlkB,OAAQqJ,IAChCqO,EAAO,IAAIC,KAAK,CAAC1X,KAAKC,UAAUgkB,EAAY7a,GAAI,KAAM,KACtDmO,EAAW0M,EAAY7a,GAAG9G,IAAM,QAElC8T,EAAO,UACMrX,IAAbuY,IAAuC,IAAbA,EAC5BK,kBAAOF,EAAMF,GAEbnB,EAAO,IAAIwB,KAAK,CAACH,GAAOF,GAG1BmH,EAAMrC,KAAKjG,GAEXmO,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK4X,EAAW,gCAElBkN,GAASrb,EAAI,GAAK6a,EAAYlkB,OAAU,UAGpC8kB,EAAaZ,EAAYxjB,QAAO,SAAC0kB,GAAE,OAAKA,EAAG7iB,MAAQ2J,CAAG,IAAE,GACxDwL,EAAO,IAAIC,KAAK,CAAC1X,KAAKC,UAAU4kB,EAAY,KAAM,KAClDtN,EAAWtL,EAAM,QAEnBmK,EAAO,UACMrX,IAAbuY,IAAuC,IAAbA,EAC5BK,kBAAOF,EAAMF,GAEbnB,EAAO,IAAIwB,KAAK,CAACH,GAAOF,GAE1BmH,EAAMrC,KAAKjG,GACXmO,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK4X,EAAW,gCAEnB,IACgB,IAAbD,EAAiB,kCACGyO,aAAYrH,GAAOjH,OAAO,KAAD,GAAzCqH,EAAO,OACbnH,kBAAOmH,EAAS,wBAChByF,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK,yDACJ,QAGL4kB,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK,iCAAmC+kB,EAAiB,gBAE3DC,GAAkB,SAACM,GAAI,OAAKA,EAAO,CAAC,IACpCR,EAAO,KAAK,4CACb,kBAvEwB,mCAwEzB,OACE,uBAAKvd,UAAU,OAAM,UACnB,yBAAQA,UAAU,cAAa,yCAC/B,uBAAMA,UAAU,eAAc,SAC5B,gBAAC+L,GAAA,EAAS,CAACC,OAAK,YACd,eAACC,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,uDAGJ,eAACD,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACe,IAAvB+K,EAAYlkB,QACX,gBAACoH,GAAA,EAAKkS,OAAM,CACV,aAAY1U,KAASvL,OAAS,cAC9BqO,IAAKge,GAAoB,UAEzB,oCAAS9gB,KAASvL,OAAM,iBACxB,0CACCiN,IAAMoH,SAASC,QACduW,EAAYtX,KAAI,SAAC/F,GACf,OAAO,yBAAQ5D,MAAO4D,EAAO,IAAE,SAAEA,EAAO,KAC1C,YAOV,eAACuM,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,eAACjM,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,SAC1B,eAACC,GAAA,EAAKoS,MAAK,CACTtb,KAAK,WACLgc,MAAM,0CACNxS,IAAKie,WAMb,gBAACvS,GAAA,EAAG,WACF,gBAACC,GAAA,EAAG,WACF,eAACD,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,6DAGJ,gBAACD,GAAA,EAAG,CAACxL,MAAO,CAAEyZ,WAAY,QAAY,UACpC,eAAChO,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACT,gBAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,UAC1B,gBAACC,GAAA,EAAKkS,OAAM,CACV,aAAW,uBACX5R,IAAK4c,GAAU,UAEf,yBAAQrhB,MAAM,IAAG,eACjB,yBAAQA,MAAM,IAAG,eACjB,yBAAQA,MAAM,IAAG,eACjB,yBAAQA,MAAM,MAAI,oBAEpB,eAACmE,GAAA,EAAKoM,KAAI,CAACrM,UAAU,aAAY,mCAKrC,eAACkM,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACT,gBAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,UAC1B,gBAACC,GAAA,EAAKkS,OAAM,CACV,aAAW,sBACX5R,IAAK+b,GAAY,UAEjB,yBAAQxgB,MAAM,IAAG,eACjB,yBAAQA,MAAM,IAAG,eACjB,yBAAQA,MAAM,IAAG,eACjB,yBAAQA,MAAM,IAAG,kBAEnB,eAACmE,GAAA,EAAKoM,KAAI,CAACrM,UAAU,aAAY,kCAKrC,eAACkM,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACT,gBAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,UAC1B,gBAACC,GAAA,EAAKkS,OAAM,CACV,aAAW,+BACX5R,IAAKgc,GAAY,UAEjB,yBAAQzgB,MAAM,IAAG,eACjB,yBAAQA,MAAM,IAAG,kBAEnB,eAACmE,GAAA,EAAKoM,KAAI,CAACrM,UAAU,aAAY,8CAMvC,eAACiM,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,eAACnN,EAAA,EAAM,CAACC,QAAQ,UAAUC,QAASyf,EAAuB,qCAMhE,gBAACxS,GAAA,EAAG,WACF,eAACD,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,sEAGJ,eAACD,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,eAACnN,EAAA,EAAM,CAACC,QAAQ,UAAUC,QAAS6f,EAAoB,qCAO/D,eAAC7S,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,uBACEzL,MAAO,CACLmK,WAAY,MACZlK,MAAOiY,EAAU,MAAQ,SACzB,SAEDlgB,QAIP,eAACwT,GAAA,EAAG,CAACxL,MAAO,CAAEyZ,WAAY,OAAW5U,cAAe,QAAY,SAC9D,eAAC4G,GAAA,EAAG,UACF,eAACkS,GAAA,EAAW,CACVtZ,IAAKA,EACLiO,MAAK,UAAKjO,EAAG,KACb9F,QAAiB,MAAR8F,EAAc,UAAY,aAIzC,eAACmH,GAAA,EAAG,CAACxL,MAAO,CAAEyZ,WAAY,OAAW5U,cAAe,QAAY,SAC9D,eAAC4G,GAAA,EAAG,UACF,oDAGJ,eAACD,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,2BACEtW,GAAG,SACH6K,MAAO,CAAE2X,OAAQ,QACjBC,KAAK,MACLC,KAAK,KACLC,UAAQ,EACRzc,MAAOuhB,EAAOC,KACX7X,KAAI,SAAC4Y,GAAC,OAAKA,EAAE5lB,GAAG,IAChB6lB,UACAjX,KAAK,kBAQxB,CC3UkBpS,EAAQ,IAA1B,IAEM8pB,GAAiB5f,IAAMC,YAEd,SAAS4f,KACtB,IAAM3B,EAASlQ,qBAAWX,IAAY8Q,KACtC,EAAsB9d,mBAAS,GAAE,mBAA1BsF,EAAG,KAAEyY,EAAM,KAElB,EAA4C/d,mBAAS,GAAE,mBAAhDge,EAAc,KAAEC,EAAiB,KACxC,EAAsCje,mBAAS,IAAG,mBAA3Cud,EAAW,KAAEW,EAAc,KAClC,EAAoCle,qBAAU,mBAAvCme,EAAU,KAAEC,EAAa,KAChC,EAA0Bpe,qBAAU,mBAA7Byf,EAAK,KAAEC,EAAQ,KACtB,EAA8C1f,qBAAU,mBAAjD2f,EAAe,KAEtB,GAF0C,KAEpB3f,mBAAS,KAAG,mBAA3B/G,EAAG,KAAEgH,EAAM,KAClB,EAA8BD,oBAAS,GAAM,mBAAtCmZ,EAAO,KAAEC,EAAU,KAG1BzX,qBAAU,WACR,IAAM0c,EAAc,iDAAG,8GACHzkB,EAAY,cAAe,CAAEK,MAAO,MAAO,KAAD,EAAtD+N,EAAG,OAETkW,EAAelW,EAAI3N,MAAM,2CAC1B,kBAJmB,mCAKpBgkB,GACF,GAAG,IAGH,IAeMuB,EAAkB,iDAAG,qGACD,IAApBD,EAAqB,gBAEN,OADjB1f,EAAO,wCACPmZ,GAAW,GAAM,0BAO8B,GAH7CyG,EAAW,GACXC,EAAQ,YAAOL,GAGC,MADdM,EAAcR,GAAenf,QAAQ9D,OACrB,iBAEH,OADjB2D,EAAO,oCACPmZ,GAAW,GAAM,2BA4BlB,GAxBG2G,EAAYzgB,SAAS,MACvBugB,EAAWA,EAAS7lB,OAAOylB,GAC3BK,EAAW,IAIIC,EAAYzf,QAAQ,MAAO,IAAI2P,MAAM,KACvCtX,SAAQ,SAACuH,GACpB,GAAIA,EAAEZ,SAAS,KAAM,CACnB,IAAM0gB,EAAW9f,EAAE+P,MAAM,KAEnBgQ,EAAQR,EAAMhL,QAAQpP,SAAS2a,EAAS,KACxCE,EAAMT,EAAMhL,QAAQpP,SAAS2a,EAAS,KAC5C,IAAe,IAAXC,IAAyB,IAATC,EAClB,IAAK,IAAIxd,EAAIud,EAAOvd,GAAKwd,EAAKxd,IAC5Bmd,EAASlK,KAAK8J,EAAM/c,IACpBod,EAASld,OAAOkd,EAASrL,QAAQgL,EAAM/c,IAAK,EAGlD,MAAW+c,EAAMngB,SAAS+F,SAASnF,MACjC2f,EAASlK,KAAKtQ,SAASnF,IACvB4f,EAASld,OAAOkd,EAASrL,QAAQpP,SAASnF,IAAK,GAEnD,IAEsB,IAApB2f,EAASxmB,OAAY,iBAIN,OAHjB4G,EACE,8EAEFmZ,GAAW,GAAM,2BAUhB,OAPHnZ,EAAO,IACPmZ,GAAW,GACX2E,EAAO,GAEPF,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK,iCAAmC+kB,EAAiB,cACxD,UACG1M,GAAmB6M,EAAY0B,GAAU,KAAD,GAC9ChC,EAAOvO,QAAQ,CACb/X,KAAM,OACN0B,IAAK,+BAAiC+kB,EAAiB,gBAGzDC,GAAkB,SAACM,GAAI,OAAKA,EAAO,CAAC,IACpCR,EAAO,KACP2B,EAASI,GAAU,4CACpB,kBAlEuB,mCAoExB,OACE,uBAAKtf,UAAU,OAAM,UACnB,yBAAQA,UAAU,cAAa,kDAG/B,uBAAMA,UAAU,eAAc,SAC5B,gBAAC+L,GAAA,EAAS,CAACC,OAAK,YACd,eAACC,GAAA,EAAG,CAACxL,MAAO,CAAE6E,cAAe,QAAY,SACvC,eAAC4G,GAAA,EAAG,UACF,uDAGJ,gBAACD,GAAA,EAAG,CAACxL,MAAO,CAAE6E,cAAe,QAAY,UACvC,eAAC4G,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACe,IAAvB+K,EAAYlkB,QACX,gBAACoH,GAAA,EAAKkS,OAAM,CACV,aAAY1U,KAASvL,OAAS,cAC9Bka,SApGe,SAAC1M,GAC9B,IAAMqR,EAAWrR,EAAE2B,OAAOvF,MAC1B,GAA+B,IAA3B4D,EAAE2B,OAAOud,cAGX,OAFAhB,OAAc/lB,QACdqnB,OAASrnB,GAGX,IACM8nB,EADc5C,EAAYxjB,QAAO,SAAC0kB,GAAE,OAAKA,EAAG7iB,MAAQ2V,CAAQ,IAAE,GACzCd,QAAQxK,KAAI,SAAC0S,GAAC,OAAKA,EAAEta,IAAI,IAAEqW,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAIC,CAAC,IAE1EwJ,EAAc7M,GACdmO,EAASS,EACX,EAwFiD,UAEjC,oCAASliB,KAASvL,OAAM,iBACvBiN,IAAMoH,SAASC,QACduW,EAAYtX,KAAI,SAAC/F,GACf,OAAO,yBAAQ5D,MAAO4D,EAAO,IAAE,SAAEA,EAAO,KAC1C,eAKQ7H,IAAf8lB,GACC,gBAACzR,GAAA,EAAG,2CAC2B,6BAAIyR,IAAe,MAAI,IACnDsB,EAAM5X,KAAK,MAAK,gBAIZxP,IAAVonB,GAAwC,IAAjBA,EAAMpmB,QAC5B,eAACoT,GAAA,EAAG,CAACxL,MAAO,CAAE6E,cAAe,QAAY,SACvC,eAAC4G,GAAA,EAAG,8EAKGrU,IAAVonB,GAAwC,IAAjBA,EAAMpmB,QAC5B,uCACE,eAACoT,GAAA,EAAG,CAACxL,MAAO,CAAE6E,cAAe,QAAY,SACvC,eAAC4G,GAAA,EAAG,CAAC8F,GAAI,EAAE,SACT,gBAAC/R,GAAA,EAAKE,MAAK,CAACH,UAAU,OAAM,UAC1B,eAACC,GAAA,EAAKK,QAAO,CAACvJ,KAAM,OAAQwJ,IAAKwe,KACjC,gBAAC9e,GAAA,EAAKoM,KAAI,CAACrM,UAAU,aAAY,8CAE/B,wBAAM,uDAAqD,IAC3D,wBAAM,gCAA6B,wBAAM,+BAMjD,eAACiM,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,eAACnN,EAAA,EAAM,CAACE,QAASmgB,EAAmB,iCAK5C,eAACnT,GAAA,EAAG,CAACxL,MAAO,CAAE6E,cAAe,QAAY,SACvC,eAAC4G,GAAA,EAAG,UACF,uBACEzL,MAAO,CACLmK,WAAY,MACZlK,MAAOiY,EAAU,MAAQ,SACzB,SAEDlgB,QAIP,eAACwT,GAAA,EAAG,CAACxL,MAAO,CAAEyZ,WAAY,OAAW5U,cAAe,QAAY,SAC9D,eAAC4G,GAAA,EAAG,UACF,eAACkS,GAAA,EAAW,CACVtZ,IAAKA,EACLiO,MAAK,UAAKjO,EAAG,KACb9F,QAAiB,MAAR8F,EAAc,UAAY,aAIzC,eAACmH,GAAA,EAAG,CAACxL,MAAO,CAAEyZ,WAAY,OAAW5U,cAAe,QAAY,SAC9D,eAAC4G,GAAA,EAAG,UACF,oDAGJ,eAACD,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,UACF,2BACEtW,GAAG,SACH6K,MAAO,CAAE2X,OAAQ,QACjBC,KAAK,MACLC,KAAK,KACLC,UAAQ,EACRzc,MAAOuhB,EAAOC,KACX7X,KAAI,SAAC4Y,GAAC,OAAKA,EAAE5lB,GAAG,IAChB6lB,UACAjX,KAAK,kBAQxB,CC2CeuY,OAjOf,WACE,MAA0CpgB,mBAA0B,IAAG,mBAAhEhN,EAAa,KAAEqtB,EAAgB,KACtC,EAAwBrgB,mBAA0B,IAAG,mBAA9C8d,EAAI,KAAEwC,EAAO,KACpB,EAA0BtgB,qBAA8B,mBAAjDmS,EAAK,KAAEoO,EAAQ,KACtB,EAAwBvgB,mBAAiB,CAAC,GAAE,mBAArC7I,EAAI,KAAEqpB,EAAO,KAEhBhT,EAAY7N,IAAM8N,SAChBvP,EAAMjH,aAAa6D,QAAQ,SAOjC,SAAS7E,EAAiBC,GACxBmqB,GAAiB,SAAC9B,GAAI,MAAK,CAACroB,GAAK8D,OAAOukB,EAAK,GAE/C,CAGA,SAASpoB,EAAmBC,GAC1B,IAAIwI,EAAG,YAAO5L,GACd4L,EAAIgE,OAAOxM,EAAI,GACfiqB,EAAiBzhB,EACnB,CAGA,SAASvI,IACPgqB,EAAiB,GACnB,CnC/DAjuB,OACmBiG,IAAjB2C,EAA6BA,EAAemE,OAAOC,SAASqhB,OAAS,MmCgEvE,IAAMC,EAAyB,CAC7B1tB,cAAeA,EACfiD,mBACAE,qBACAE,sBAGFL,EAAoBK,mBAAqBA,EACzCL,EAAoBC,iBAAmBA,EACvCD,EAAoBG,mBAAqBA,EAazCwL,qBAAU,WAER,IAAMgf,EAAU,iDAAG,uHAGQ/mB,EAAY,QAAS,CAAC,EAAG,IAAI,KAAD,EAA7C5C,EAAQ,OAEdupB,EAASvpB,EAASA,SAASG,MAAM,gDAEjCmB,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,kBATe,mCAYhB,QAAcF,IAAV8Z,EAEJ,IACEwO,GAGF,CAFE,MAAO/oB,GACPU,QAAQC,IAAIX,EACd,CAEF,GAAG,IAEH,IAAMgpB,EAAoB,CACxBzO,MAAOA,EACPhb,KAAMA,EACNgf,WAlCF,SAAoBtE,EAAmB5K,GACrCuZ,GAAQ,SAACjC,GACP,OAAO,2BAAKA,GAAI,kBAAGtX,EAAG,YAAO4K,IAC/B,GACF,GAoCA,SAASvC,EAAQpZ,GACfoqB,GAAQ,SAAC/B,GAAI,MAAK,CAACroB,GAAK8D,OAAOukB,EAAK,IACpC,IAAIsC,EAAW9a,SAAS+a,eAAe,UACtB,OAAbD,QAAkCxoB,IAAbwoB,IACvBA,EAASE,UAAYF,EAASG,aAClC,CAEA,SAASzR,EAAUnZ,GACjB,IAAIwI,EAAG,YAAOkf,GACdlf,EAAIgE,OAAOxM,EAAI,GACfkqB,EAAQ1hB,EACV,CAGA,SAAS4Q,IACP8Q,EAAQ,GACV,CAEA,IAAMW,EAAiB,CACrBnD,KAAMA,EACNxO,UACAC,YACAC,aAgBF,OAbAH,GAAYG,UAAYA,EACxBH,GAAYC,QAAUA,EACtBD,GAAYE,UAAYA,EAIwB,GAA5C,QAAQlH,KAAKlJ,OAAOhB,UAAUmK,WAChCkF,EAAUpN,QAAU,WAEpBoN,EAAUpN,QAAUjF,EAIV,OAAR+C,EAEA,sBAAKsC,UAAU,MAAK,SAClB,eAAC,IAAM,UACL,gBAAC,IAAM,WACL,eAAC,IAAK,CAAC4U,KAAK,IAAII,QAAS,eAACzV,GAAQ,MAClC,eAAC,IAAK,CACJqV,KAAK,eACLI,QAAS,eAACwD,GAAO,CAACta,SAAU,cAE9B,eAAC,IAAK,CAAC0W,KAAK,IAAII,QAAS,eAAC,IAAQ,CAACrU,GAAG,IAAIb,SAAO,aAOzD,eAAC,GAAW4gB,SAAQ,CAClB5kB,MAAO,CACLtJ,cAAe0tB,EACf7O,QAAS+O,EACT9C,KAAMmD,GACN,SAEF,eAAC,IAAM,UACL,gBAAC1U,GAAA,EAAS,CACRC,OAAK,EACLvL,MAAO,CACL4E,YAAa,EACbsb,aAAc,EACd5f,OAAQ,QACRD,MAAO,QACP,UAEqB,eAAtBkM,EAAUpN,QACT,eAACqM,GAAA,EAAG,CAACxL,MAAO,CAAEiO,QAAS,GAAI,SACzB,eAACD,GAAuB,MAG1B,GAEF,gBAACxC,GAAA,EAAG,CACFxL,MAAO,CACLiO,QAAS,GACT,UAEqB,aAAtB1B,EAAUpN,QACT,eAACsM,GAAA,EAAG,CAACqG,GAAG,OAAO9R,MAAO,CAAEiO,QAAS,EAAG9G,SAAU,SAAa,SACzD,eAACzD,GAAU,MAGb,GAE2C,GAA5C,QAAQ0D,KAAKlJ,OAAOhB,UAAUmK,YAC7B,eAACoE,GAAA,EAAG,CAACqG,GAAG,OAAO9R,MAAO,CAAEiO,QAAS,GAAI,SACnC,eAAC/B,GAAe,MAGpB,eAACT,GAAA,EAAG,CAACzL,MAAO,CAAE4E,YAAa,EAAGsb,aAAc,GAAI,SAC9C,gBAAC,IAAM,WACL,eAAC,IAAK,CAAC/L,KAAK,IAAII,QAAS,eAAC9T,GAAQ,MAClC,eAAC,IAAK,CAAC0T,KAAK,QAAQI,QAAS,eAAC9T,GAAQ,MACtC,eAAC,IAAK,CAAC0T,KAAK,eAAeI,QAAS,eAAC3J,GAAW,MAChD,eAAC,IAAK,CACJuJ,KAAK,oBACLI,QAAS,eAACmF,GAAiB,MAE7B,eAAC,IAAK,CACJvF,KAAK,qBACLI,QAAS,eAAC8F,GAAmB,MAG/B,eAAC,IAAK,CACJlG,KAAK,sBACLI,QAAS,eAACI,GAAe,MAE3B,eAAC,IAAK,CAACR,KAAK,sBAAsBI,QAAS,eAAC,GAAY,MACxD,eAAC,IAAK,CAACJ,KAAK,iBAAiBI,QAAS,eAACoI,GAAiB,MACxD,eAAC,IAAK,CAACxI,KAAK,eAAeI,QAAS,eAACgK,GAAe,MACpD,eAAC,IAAK,CAACpK,KAAK,kBAAkBI,QAAS,eAACwD,GAAO,MAC/C,eAAC,IAAK,CAAC5D,KAAK,SAASI,QAAS,eAAChM,GAAI,CAACxB,IAAI,YAExC,eAAC,IAAK,CAACoN,KAAK,gBAAgBI,QAAS,eAACzI,GAAgB,MACtD,eAAC,IAAK,CAACqI,KAAK,OAAOI,QAAS,eAACzT,GAAY,MAEzC,eAAC,IAAK,CAACqT,KAAK,IAAII,QAAS,eAAC,IAAQ,CAACrU,GAAG,OAAOb,SAAO,WAGjC,aAAtBkN,EAAUpN,SACmC,GAA5C,QAAQiI,KAAKlJ,OAAOhB,UAAUmK,YAC5B,eAACoE,GAAA,EAAG,CAACqG,GAAG,OAAO9R,MAAO,CAAE4E,YAAa,EAAGsb,aAAc,GAAI,SACxD,eAAChU,GAAe,eAQlC,ECnRAiU,IAASC,OACP,eAAC,IAAMC,WAAU,UACf,eAAC,GAAG,MAENvb,SAAS+a,eAAe,Q","file":"static/js/main.55c4d426.chunk.js","sourcesContent":["import { base_api_url } from \"../config\";\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\nconst https = require(\"https\");\r\n\r\nexport let api_url;\r\n\r\nexport const instance = axios.create({\r\n  httpsAgent: new https.Agent({\r\n    //unsafe, delete in prod\r\n    //rejectUnauthorized: false,\r\n  }),\r\n});\r\n\r\nexport let notificationManager = {\r\n  PushNotification: (obj) => {},\r\n  RemoveNotification: (id) => {},\r\n  ClearNotifications: () => {},\r\n};\r\n\r\n//set APIs url according to configuration or GUI host\r\nexport function SetAPIUrl() {\r\n  api_url =\r\n    base_api_url !== undefined ? base_api_url : window.location.origin + \"/v1\";\r\n}\r\n\r\n//login\r\nexport function login(username, password, tenant, saveToken = true) {\r\n  const body = {\r\n    username: `${username}`,\r\n    password: `${password}`,\r\n    tenant: `${tenant}`,\r\n  };\r\n  const options = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"no-cache\",\r\n      //Authorization: GetToken(),\r\n    },\r\n  };\r\n\r\n  const url_string = api_url + \"/login\";\r\n\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .post(url_string, body, options)\r\n      .then((response) => {\r\n        if (saveToken === true) {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\r\n            \"token-expiration-time\",\r\n            response.data.token_expiration_time\r\n          );\r\n          localStorage.setItem(\"username\", response.data.user.username);\r\n          localStorage.setItem(\"user-role\", response.data.user.type);\r\n          localStorage.setItem(\"user-tenant\", tenant);\r\n          localStorage.setItem(\"login-time\", new Date().getTime().toString());\r\n        }\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\n//refresh token\r\nexport function refreshToken() {\r\n  const options = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"no-cache\",\r\n      Authorization: GetToken(),\r\n    },\r\n  };\r\n\r\n  const url_string = api_url + \"/login\";\r\n\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .put(url_string, {}, options)\r\n      .then((response) => {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        localStorage.setItem(\"login-time\", new Date().getTime().toString());\r\n        localStorage.setItem(\r\n          \"token-expiration-time\",\r\n          response.data.token_expiration_time\r\n        );\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nexport async function post_file_generic(\r\n  resource_type,\r\n  formData,\r\n  additionalHeader = {},\r\n  token = undefined\r\n) {\r\n  if (token === undefined) token = GetToken();\r\n  const url_string = api_url + \"/\" + resource_type + \"/file\";\r\n\r\n  console.log(\"POST file:\" + url_string);\r\n\r\n  const tempH = {\r\n    \"Content-Type\": \"multipart/form-data\",\r\n    \"Cache-Control\": \"no-cache\",\r\n    Authorization: token,\r\n  };\r\n\r\n  Object.entries(additionalHeader).forEach(([k, v]) => {\r\n    tempH[k] = v;\r\n  });\r\n  const options = {\r\n    headers: tempH,\r\n  };\r\n\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .post(url_string, formData, options)\r\n      .then((response) => {\r\n        notificationManager.PushNotification({\r\n          name: \"info\",\r\n          time: new Date().toTimeString(),\r\n          msg: \"Successful POST of file on: \" + resource_type,\r\n        });\r\n\r\n        resolve({ response: response }); //true;\r\n      })\r\n      .catch((error) => {\r\n        notificationManager.PushNotification({\r\n          name: \"error\",\r\n          time: new Date().toTimeString(),\r\n          msg: \"Error doing a POST of file on: \" + resource_type,\r\n        });\r\n        reject({ error: error }); //false;\r\n      });\r\n  });\r\n}\r\n\r\nexport async function post_generic(resource_type, body, token = undefined) {\r\n  if (token === undefined) token = GetToken();\r\n  const url_string = api_url + \"/\" + resource_type + \"/\";\r\n\r\n  console.log(\"POST :\" + url_string);\r\n\r\n  const options = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"no-cache\",\r\n      Authorization: token,\r\n    },\r\n  };\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .post(url_string, body, options)\r\n      .then((response) => {\r\n        notificationManager.PushNotification({\r\n          name: \"info\",\r\n          time: new Date().toTimeString(),\r\n          msg: \"Successful POST of a resource type: \" + resource_type,\r\n        });\r\n\r\n        resolve({ response: response }); //true;\r\n      })\r\n      .catch((error) => {\r\n        notificationManager.PushNotification({\r\n          name: \"error\",\r\n          time: new Date().toTimeString(),\r\n          msg: \"Error doing a POST of a resource type: \" + resource_type,\r\n        });\r\n        reject({ error: error }); //false;\r\n      });\r\n  });\r\n}\r\n\r\nexport async function put_generic(resource_type, body, id, token = undefined) {\r\n  const url_string = api_url + \"/\" + resource_type + \"/\" + id;\r\n  if (token === undefined) token = GetToken();\r\n\r\n  console.log(\"PUT :\" + url_string);\r\n\r\n  const options = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"no-cache\",\r\n      Authorization: token,\r\n    },\r\n  };\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .put(url_string, body, options)\r\n      .then((response) => {\r\n        //obscure password in notification bar\r\n        if (body[\"password\"] !== undefined)\r\n          body[\"password\"] = \"\".padStart(body[\"password\"].length, \"*\");\r\n\r\n        notificationManager.PushNotification({\r\n          name: \"info\",\r\n          time: new Date().toTimeString(),\r\n          msg:\r\n            \"Successful PUT of a resource type: \" +\r\n            resource_type +\r\n            \", id: \" +\r\n            id +\r\n            \", body: \" +\r\n            JSON.stringify(body),\r\n        });\r\n\r\n        resolve({ response: response }); //true;\r\n      })\r\n      .catch((error) => {\r\n        //obscure password in notification bar\r\n        if (body[\"password\"] !== undefined)\r\n          body[\"password\"] = \"\".padStart(body[\"password\"].length, \"*\");\r\n\r\n        notificationManager.PushNotification({\r\n          name: \"error\",\r\n          time: new Date().toTimeString(),\r\n          msg:\r\n            \"Error doing a PUT on resource type: \" +\r\n            resource_type +\r\n            \", id: \" +\r\n            id +\r\n            \", body: \" +\r\n            JSON.stringify(body) +\r\n            \". \" +\r\n            error.message,\r\n        });\r\n\r\n        reject({ error: error }); //false;\r\n      });\r\n  });\r\n}\r\n\r\nexport async function delete_generic(resource_type, id, token = undefined) {\r\n  let url_string = api_url + \"/\" + resource_type;\r\n  if (token === undefined) token = GetToken();\r\n  if (id !== undefined) {\r\n    url_string += \"/\" + id;\r\n  }\r\n  console.log(\"DELETE :\" + url_string);\r\n\r\n  //url: url_string;\r\n  let options = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"no-cache\",\r\n      Authorization: token,\r\n    },\r\n  };\r\n\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .delete(url_string, options)\r\n      .then((response) => {\r\n        if (id !== undefined) {\r\n          notificationManager.PushNotification({\r\n            name: \"info\",\r\n            time: new Date().toTimeString(),\r\n            msg: \"Deleted resource: \" + id + \", of type: \" + resource_type,\r\n          });\r\n        } else {\r\n          notificationManager.PushNotification({\r\n            name: \"info\",\r\n            time: new Date().toTimeString(),\r\n            msg: \"Deleted resources of type: \" + resource_type,\r\n          });\r\n        }\r\n        resolve({ response: response }); //true;\r\n      })\r\n      .catch((error) => {\r\n        notificationManager.PushNotification({\r\n          name: \"error\",\r\n          time: new Date().toTimeString(),\r\n          msg:\r\n            \"error deleting resource: \" +\r\n            id +\r\n            \", of type: \" +\r\n            resource_type +\r\n            \". \" +\r\n            error.message,\r\n        });\r\n        if (error.statusCode === 404) {\r\n          //Not found\r\n          notificationManager.PushNotification({\r\n            name: \"error\",\r\n            time: new Date().toTimeString(),\r\n            msg:\r\n              \"Please check if your user is authorized to delete the resource. \" +\r\n              error.message,\r\n          });\r\n        }\r\n\r\n        reject({ error: error }); //false;\r\n      });\r\n  });\r\n}\r\n\r\nexport async function get_generic(resource_type, qs = {}, token) {\r\n  let url = api_url + \"/\" + resource_type + \"/\";\r\n  if (token === undefined) token = GetToken();\r\n\r\n  if (qs.filter !== undefined) {\r\n    url = url.concat(\"?filter=\" + qs.filter);\r\n  } else {\r\n    url = url.concat(\"?filter=\");\r\n  }\r\n  if (qs.limit !== undefined) {\r\n    url = url.concat(\"&limit=\" + qs.limit);\r\n  }\r\n  if (qs.page !== undefined) {\r\n    url = url.concat(\"&page=\" + qs.page);\r\n  }\r\n\r\n  console.log(\"GET :\" + url);\r\n\r\n  let options = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"no-cache\",\r\n      Authorization: token,\r\n    },\r\n\r\n    json: true,\r\n  };\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .get(url, options)\r\n      .then((response) => {\r\n        resolve({\r\n          response: response,\r\n          docs: response.data.docs,\r\n          totalDocs: response.data.totalDocs,\r\n          limit: response.data.limit,\r\n          totalPages: response.data.totalPages,\r\n          page: response.data.page,\r\n          pagingCounter: response.data.pagingCounter,\r\n          hasPrevPage: response.data.hasPrevPage,\r\n          hasNextPage: response.data.hasNextPage,\r\n          prevPage: response.data.prevPage,\r\n          nextPage: response.data.nextPage,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        /*commons.PushMsg({\r\n          type: \"error\",\r\n          msg:\r\n            \"Error getting resource(s) of type: \" +\r\n            resource_type +\r\n            \", with filter: \" +\r\n            qs.limit +\r\n            \". \" +\r\n            error.message,\r\n        });*/\r\n        reject({ error: error });\r\n      });\r\n  });\r\n}\r\n\r\nexport async function get_one_generic(resource_type, id, token) {\r\n  let url = api_url + \"/\" + resource_type + \"/\" + id;\r\n  if (token === undefined) token = GetToken();\r\n\r\n  console.log(\"GET ONE:\" + url);\r\n\r\n  let options = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"no-cache\",\r\n      Authorization: token,\r\n    },\r\n\r\n    json: true,\r\n  };\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .get(url, options)\r\n      .then((response) => {\r\n        resolve({\r\n          response: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        reject({ error: error });\r\n      });\r\n  });\r\n}\r\n\r\n//return the login token from the localstorage\r\nexport function GetToken() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n","const localization_it = {\r\n  username: \"Nome utente\",\r\n  password: \"Password\",\r\n  tenant: \"Organizzazione\",\r\n  keep_logged: \"Mantieni Accesso\",\r\n  select: \"Seleziona\",\r\n  language: \"Lingua\",\r\n  welcome: \"Bentornato\",\r\n  role: \"Ruolo\",\r\n  session_expire_in: \"La sessione scadrà in \",\r\n  resources: \"Risorse\",\r\n  notifications: \"Notifiche\",\r\n  file_content: \"Contenuto del file\",\r\n  preview: \"Anteprima\",\r\n  configuration: \"Configurazione\",\r\n\r\n  clear_all: \"Cancella tutto\",\r\n\r\n  ///Completamento campi\r\n  enter: \"Inserisci\",\r\n  username_suggestion: \"Inserisci il nome utente\",\r\n  password_suggestion: \"Inserisci la password\",\r\n  tenant_suggestion: \"Inserisci la tua organizzazione\",\r\n  add_tenant: \"Aggiungi organizzazione\",\r\n\r\n  //Homepage\r\n  welcome_hp: \"Benvenuto nel pannello di controllo di Measurify!\",\r\n  left_bar_descr_hp:\r\n    \"Nella barra a sinistra sono presenti le informazioni relative al tuo account e i collegamenti alle pagine.\",\r\n  right_bar_descr_hp:\r\n    'La barra a destra può essere aperta cliccando sul pulsante \"Notifiche\" per mostrare la lista delle notifiche.',\r\n  session_expire_info_hp: ``,\r\n  github_page_hp: \"Pagina Github di Measurify\",\r\n  github_issue_page_hp: \"Segnala bug o problemi\",\r\n\r\n  //profile page\r\n  profile_page_desc:\r\n    \"questa è la pagina in cui puoi visionare il tuo profilo o modificare la password\",\r\n  pass_change_confirm: \"La password verrà modificata, procedere?\",\r\n  pass_not_match:\r\n    \"La password inserita e la conferma non combaciano, si prega di reinserirle\",\r\n  old_pass_empty: \"Per favore, inserire la vecchia password\",\r\n  old_pass_wrong: \"La vecchia password è sbagliata\",\r\n  pass_not_null: \"La password non può essere vuota\",\r\n  password_changed: \"Password cambiata\",\r\n\r\n  //404\r\n  oh_no: \"Oh No!\",\r\n  broken_link:\r\n    \"Sembra che tu abbia utilizzato un collegamento non funzionante.\",\r\n\r\n  ///Azioni\r\n  submit: \"Invio\",\r\n  cancel: \"Annulla\",\r\n  login: \"Accedi\",\r\n  logout: \"Esci\",\r\n  repeat: \"Ripeti\",\r\n  close: \"Chiudi\",\r\n  import: \"Importa\",\r\n  export: \"Esporta\",\r\n\r\n  ///Errori\r\n  login_error: \"Login errata!\",\r\n  unauthorised_user: \"Non sei abilitato a utilizzare questa pagina\",\r\n  session_expired: \"Sessione scaduta\",\r\n  no_file: \"Si prega di selezionare un file\",\r\n  duplicate_error: \"Nel database è già presente una risorsa con\",\r\n  error_imported_file:\r\n    \"Nel file sono presenti errori, non è stato possibile importarlo\",\r\n};\r\n\r\nexport default localization_it;\r\n","const localization_en = {\r\n  username: \"Username\",\r\n  password: \"Password\",\r\n  tenant: \"Tenant\",\r\n  keep_logged: \"Keep Logged In\",\r\n\r\n  select: \"Select\",\r\n  language: \"Language\",\r\n  welcome: \"Welcome back\",\r\n  role: \"Role\",\r\n  session_expire_in: \"Session will expire in \",\r\n  resources: \"Resources\",\r\n  notifications: \"Notifications\",\r\n  file_content: \"File content\",\r\n  preview: \"Preview\",\r\n  configuration: \"Configuration\",\r\n\r\n  clear_all: \"Clear all\",\r\n\r\n  enter: \"Enter\",\r\n  username_suggestion: \"Insert your username\",\r\n  password_suggestion: \"Insert your password\",\r\n  tenant_suggestion: \"Insert your tenant\",\r\n  add_tenant: \"Add tenant\",\r\n\r\n  //Homepage\r\n  welcome_hp: \"Welcome to the Administration dashboard!\",\r\n  left_bar_descr_hp:\r\n    \"The left bar contains the information about your account and  the list of tabs\",\r\n  right_bar_descr_hp:\r\n    'The right bar contains the notification bar (Click on \"Notifications\" to open).',\r\n  session_expire_info_hp: \"\",\r\n  github_page_hp: \"\",\r\n  github_issue_page_hp: \"Report bugs or issues\",\r\n\r\n  //profile page\r\n  profile_page_desc:\r\n    \"from this page you can view your own profile or change the password\",\r\n  pass_change_confirm: \"Password will be changed, do you confirm?\",\r\n  pass_not_match:\r\n    \"Provided password and the confirmation do not match. Please insert them again\",\r\n  old_pass_empty: \"Please. enter old password\",\r\n  old_pass_wrong: \"The old password is wrong\",\r\n  pass_not_null: \"Password cannot be empty\",\r\n  password_changed: \"Password changed\",\r\n\r\n  //404\r\n  oh_no: \"Oh No!\",\r\n  broken_link: \"It looks like you have clicked on a broken link.\",\r\n\r\n  ///Actions\r\n  submit: \"Submit\",\r\n  cancel: \"Cancel\",\r\n  login: \"Login\",\r\n  logout: \"Logout\",\r\n  repeat: \"Repeat\",\r\n  close: \"Close\",\r\n  import: \"Import\",\r\n  export: \"Export\",\r\n\r\n  ///Errors\r\n  login_error: \"Wrong login!\",\r\n  unauthorised_user: \"You are not allowed to use this page\",\r\n  session_expired: \"Session expired\",\r\n  no_file: \"Please, select a file\",\r\n  duplicate_error: \"The database already contains a resource with\",\r\n  error_imported_file: \"File contains errors. It was not possible to import it\",\r\n};\r\n\r\nexport default localization_en;\r\n","//validation functions used for input disable/validation etc.\r\n//the can be defined when required and used as \"pointer to function\" into the appropriate dict config.js\r\n//return must be coherent with name: i.e isInUse => true when is used\r\n\r\nimport { get_generic } from \"./http_operations\";\r\n\r\n//this function return true if the feature is in use (check on measurements/devices)\r\nexport async function isFeatureInUse(feature) {\r\n  const qs = { filter: JSON.stringify({ feature: feature }) };\r\n\r\n  try {\r\n    //check if feature has associated measurements\r\n    const res = await get_generic(\"measurements\", qs);\r\n    if (res.totalDocs > 0) {\r\n      //has measurements, so it's in use\r\n      return true;\r\n    } else {\r\n      //if the feature has no measurements, check if it has device associated\r\n      const qs = { filter: JSON.stringify({ features: feature }) };\r\n      const res = await get_generic(\"devices\", qs);\r\n\r\n      if (res.totalDocs > 0) {\r\n        //has a device, so it's in use\r\n        return true;\r\n      } else return false;\r\n    }\r\n  } catch (errors) {\r\n    console.log(errors);\r\n    return false;\r\n  }\r\n}\r\n\r\n//this function always return true\r\nexport function alwaysTrue() {\r\n  return true;\r\n}\r\n","import { isFeatureInUse, alwaysTrue } from \"./services/validations\";\r\n\r\n//base url of APIs (define it as undefined if you want to use the url where the GUI is actually hosted)\r\nexport const base_api_url = \"https://hi-drive.measurify.org/v1\";\r\n//export const base_api_url = undefined;\r\n\r\n//name of this dashboard, shown to users\r\nexport const website_name = \"Admin Dashboard\";\r\n\r\n//languages enabled for this GUI, only english \"en\" and italian \"it\" are supported with this version\r\n//if no languages are enabled, the GUI will be localized in english\r\n//export const languages = [\"en\", \"it\"];\r\nexport const languages = [];\r\n\r\n//gui layout\r\n// options are \"horizontal\" or \"vertical\"\r\nexport const layout = \"vertical\";\r\n\r\n//operation pages\r\n//those are the pages of operations performed on experiments,\r\n// which are: updatehistory, downloadexperiment, removesteps\r\nexport const operationPages = [\r\n  \"updatehistory\",\r\n  \"downloadexperiment\",\r\n  \"removesteps\",\r\n];\r\n\r\n//dictionary of pages: key is the route for the API REST, value is an array that contains the fields shown to users\r\n//action is a special field that will enable actions for each row || still required, future version may have it removed\r\nexport const pages = {};\r\npages[\"users\"] = [\"username\", \"type\", \"_actions\"];\r\npages[\"roles\"] = [\"_id\", \"_actions\"];\r\n//pages[\"tags\"] = [\"_id\", \"_actions\"];\r\n//pages[\"things\"] = [\"_id\", \"_actions\"];\r\n//pages[\"features\"] = [\"_id\", \"_actions\"];\r\n//pages[\"devices\"] = [\"_id\", \"tags\", \"_actions\"];\r\npages[\"protocols\"] = [\"_id\", \"description\", \"_actions\"];\r\npages[\"experiments\"] = [\"_id\", \"description\", \"protocol\", \"_actions\"];\r\n/*pages[\"measurements\"] = [\r\n  \"thing\",\r\n  \"feature\",\r\n  \"device\",\r\n  \"startDate\",\r\n  \"tags\",\r\n  \"_actions\",\r\n];*/\r\n\r\n//alias dictionary: key is the page, value are object with pairs of the fields that will be renamed into page table header (\"key\" is renamed as \"value\")\r\nexport const aliasPages = {};\r\n//aliasPages[\"features\"] = { _id: \"Feature Name\", _actions: \"Actions\" };\r\n//aliasPages[\"tags\"] = { _id: \"Tag Name\", _actions: \"Actions\" };\r\n//aliasPages[\"devices\"] = { _id: \"Device Name\", _actions: \"Actions\" };\r\naliasPages[\"users\"] = { _actions: \"Management\" };\r\naliasPages[\"roles\"] = { _actions: \"Management\" };\r\naliasPages[\"protocols\"] = { _actions: \"Management\" };\r\naliasPages[\"experiments\"] = { _actions: \"Management\" };\r\n\r\n//restriction dictionary: key is the page, value is an array of roles allowed to access to that page\r\nexport const restrictionPages = {};\r\n\r\nrestrictionPages[\"users\"] = [\"admin\"];\r\nrestrictionPages[\"protocols\"] = [\"admin\"];\r\nrestrictionPages[\"roles\"] = [\"admin\"];\r\n\r\n//actions dictionary: key is the page, value is an array that contains actions || working actions arae \"view\" | \"edit\" | \"delete\" | \"duplicate\"\r\nexport const pageActions = {};\r\n///pageActions[\"features\"] = [\"view\", \"edit\", \"duplicate\", \"delete\"];\r\npageActions[\"users\"] = [\"view\", \"delete\"];\r\npageActions[\"roles\"] = [\"view\", \"delete\"];\r\n//pageActions[\"things\"] = [\"view\", \"delete\"];\r\n//pageActions[\"tags\"] = [\"view\", \"edit\", \"delete\"];\r\n//pageActions[\"devices\"] = [\"view\", \"edit\", \"delete\"];\r\npageActions[\"protocols\"] = [\"view\", \"delete\"];\r\npageActions[\"experiments\"] = [\"view\", \"edit\", \"duplicate\", \"delete\"];\r\n//pageActions[\"measurements\"] = [\"view\", \"edit\", \"delete\"];\r\n\r\n//view dictionary: key is the page, value is an array that contains the fields shown to the user with \"view\" action\r\nexport const viewFields = {};\r\nviewFields[\"users\"] = [\"username\", \"type\", \"fieldmask\", \"status\"];\r\nviewFields[\"roles\"] = [\"_id\", \"default\", \"actions\"];\r\n/*viewFields[\"features\"] = [\r\n  { items: [\"name\", \"type\", \"unit\", \"dimension\"] },\r\n  \"tags\",\r\n];\r\nviewFields[\"tags\"] = [\"tags\"];\r\nviewFields[\"things\"] = [\"_id\", \"visibility\", \"tags\"];\r\nviewFields[\"devices\"] = [\"_id\", \"features\", \"tags\", \"scripts\"];*/\r\nviewFields[\"protocols\"] = [\"_id\", \"description\", \"metadata\"];\r\nviewFields[\"experiments\"] = [\r\n  \"_id\",\r\n  \"description\",\r\n  \"state\",\r\n  \"startDate\",\r\n  \"endDate\",\r\n  \"manager\",\r\n  \"place\",\r\n  \"protocol\",\r\n  \"metadata\",\r\n  \"history\",\r\n];\r\n/*viewFields[\"measurements\"] = [\r\n  \"thing\",\r\n  \"feature\",\r\n  \"device\",\r\n  \"startDate\",\r\n  \"visibility\",\r\n  \"tags\",\r\n  \"samples\",\r\n];*/\r\n\r\n//edit dictionary: key is the page, value is an array that contains the fields that can be edited with \"edit\" action\r\n//fields should be specified in the same format of the object that will be represented:\r\n// - key:\"\" for an string field,\r\n// - key:NaN for a numeric field\r\n// - key:[\"\"] for an array of string\r\n// - key:[{subKey1:\"\",subkey2:\"\"}] for an array of object with 2 keys each whose value is a string\r\n\r\nexport const editFields = {};\r\n\r\neditFields[\"experiments\"] = {\r\n  _id: \"\",\r\n  description: \"\",\r\n  state: NaN,\r\n  startDate: \"\",\r\n  endDate: \"\",\r\n  manager: \"\",\r\n  protocol: \"\",\r\n  place: [{ name: \"\" }],\r\n  metadata: [{ name: \"\", value: \"\" }],\r\n  tags: [\"\"],\r\n};\r\n\r\n/*editFields[\"features\"] = {\r\n  _id: \"\",\r\n  items: [{ name: \"\", type: \"\", unit: \"\", dimension: NaN }],\r\n  tags: [\"\"],\r\n};\r\neditFields[\"tags\"] = {\r\n  tags: [\"\"],\r\n};\r\neditFields[\"devices\"] = { visibility: \"\", tags: [\"\"] };\r\neditFields[\"measurements\"] = { tags: [\"\"] };*/\r\n//add dictionary: key is the page, value is an array that contains the fields that can will be used to post the entity\r\n//fields should be specified in the same format of the objet that will be represented:\r\n// - key:\"\" for an string field,\r\n// - key:NaN for a numeric field\r\n// - key:[\"\"] for an array of string\r\n// - key:[{subKey1:\"\",subkey2:\"\"}] for an array of object with 2 keys each whose value is a string\r\n\r\nexport const addFields = {};\r\naddFields[\"tenants\"] = {\r\n  token: \"\",\r\n  _id: \"\",\r\n  organization: \"\",\r\n  address: \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  admin_username: \"\",\r\n  admin_password: \"\",\r\n  passwordhash: true,\r\n};\r\n/*addFields[\"tags\"] = { _id: \"\", tags: [\"\"] };\r\naddFields[\"things\"] = { _id: \"\", visibility: \"\", tags: [\"\"] };\r\naddFields[\"features\"] = {\r\n  _id: \"\",\r\n  items: [{ name: \"\", type: \"\", unit: \"\", dimension: NaN, range: [\"\"] }],\r\n  tags: [\"\"],\r\n};\r\n\r\n\r\naddFields[\"devices\"] = {\r\n  _id: \"\",\r\n  features: [\"\"],\r\n};\r\n*/\r\naddFields[\"users\"] = { username: \"\", password: \"\", type: \"\" };\r\naddFields[\"roles\"] = {\r\n  _id: \"\",\r\n  default: {\r\n    create: false,\r\n    read: \"\",\r\n    update: \"\",\r\n    delete: \"\",\r\n  },\r\n  actions: [\r\n    {\r\n      entity: \"\",\r\n      crud: {\r\n        create: false,\r\n        read: \"\",\r\n        update: \"\",\r\n        delete: \"\",\r\n      },\r\n    },\r\n  ],\r\n};\r\naddFields[\"protocols\"] = {\r\n  _id: \"\",\r\n  description: \"\",\r\n  metadata: [\r\n    {\r\n      name: \"\",\r\n      description: \"\",\r\n      type: \"\",\r\n    },\r\n  ],\r\n  topics: [\r\n    {\r\n      name: \"\",\r\n      description: \"\",\r\n      fields: [{ name: \"\", description: \"\", type: \"\" }],\r\n    },\r\n  ],\r\n};\r\n\r\n//NOTE: experiments page works differently, so keep it empty\r\naddFields[\"experiments\"] = {\r\n  _id: \"\",\r\n  description: \"\",\r\n  state: NaN,\r\n  startDate: \"\",\r\n  endDate: \"\",\r\n  manager: \"\",\r\n  place: [{ name: \"\" }],\r\n};\r\n\r\n//NOTE: measurements page works differently, so keep it empty\r\n/*addFields[\"measurements\"] = {\r\n  thing: \"\",\r\n  device: \"\",\r\n  tags: [\"\"],\r\n};*/\r\n\r\n//edit fields specifiers dictionary\r\n//this dictionary allow to specify particular behaviour for input fields, that can be managed by a specific function\r\n// type can be \"disable\" -> policy is applied to fields to be disabled, true when field should be disabled\r\n//\r\nexport const editFieldsSpecifier = {};\r\n/*editFieldsSpecifier[\"features\"] = {\r\n  _id: { _type: \"disable\", policy: isFeatureInUse },\r\n  items: { _type: \"disable\", policy: isFeatureInUse },\r\n};*/\r\neditFieldsSpecifier[\"experiments\"] = {\r\n  protocol: { _type: \"disable\", policy: alwaysTrue },\r\n  metadata: { name: { _type: \"disable\", policy: alwaysTrue } },\r\n};\r\n\r\n//dictionary to select the way to post entity/ies, it's an array which can contain \"form\", \"file\", or both\r\nexport const addTypes = {};\r\n//addTypes[\"tags\"] = [\"form\", \"file\"];\r\n//addTypes[\"things\"] = [\"form\", \"file\"];\r\n//addTypes[\"features\"] = [\"form\", \"file\"];\r\naddTypes[\"users\"] = [\"form\", \"file\"];\r\naddTypes[\"roles\"] = [\"form\", \"file\"];\r\n//addTypes[\"devices\"] = [\"form\", \"file\"];\r\naddTypes[\"tenants\"] = [\"form\"];\r\naddTypes[\"protocols\"] = [\"form\", \"file\"];\r\naddTypes[\"experiments\"] = [\"form\", \"file\"];\r\n//addTypes[\"measurements\"] = [\"form\"];\r\n\r\n//dictionary for fetched types\r\n//types are fetched on the /types route and matched with fields following this dictionary\r\nexport const fetchedPageTypes = {};\r\nfetchedPageTypes[\"users\"] = { status: \"UserStatusTypes\" };\r\nfetchedPageTypes[\"roles\"] = {\r\n  default: {\r\n    read: \"RoleCrudTypes\",\r\n    update: \"RoleCrudTypes\",\r\n    delete: \"RoleCrudTypes\",\r\n  },\r\n  actions: {\r\n    crud: {\r\n      read: \"RoleCrudTypes\",\r\n      update: \"RoleCrudTypes\",\r\n      delete: \"RoleCrudTypes\",\r\n    },\r\n  },\r\n};\r\n/*fetchedPageTypes[\"devices\"] = {\r\n  measurementBufferPolicy: \"MeasurementBufferPolicyTypes\",\r\n  visibility: \"VisibilityTypes\",\r\n};\r\nfetchedPageTypes[\"things\"] = {\r\n  visibility: \"VisibilityTypes\",\r\n};\r\nfetchedPageTypes[\"tag\"] = {\r\n  visibility: \"VisibilityTypes\",\r\n};\r\nfetchedPageTypes[\"things\"] = {\r\n  visibility: \"VisibilityTypes\",\r\n};\r\nfetchedPageTypes[\"scripts\"] = {\r\n  visibility: \"VisibilityTypes\",\r\n};\r\nfetchedPageTypes[\"rights\"] = {\r\n  type: \"RightTypes\",\r\n};\r\nfetchedPageTypes[\"features\"] = {\r\n  items: { type: \"ItemTypes\" },\r\n};\r\nfetchedPageTypes[\"measurements\"] = {\r\n  visibility: \"VisibilityTypes\",\r\n};\r\nfetchedPageTypes[\"issues\"] = {\r\n  type: \"IssueTypes\",\r\n  status: \"IssueStatusType\",\r\n};*/\r\nfetchedPageTypes[\"protocols\"] = {\r\n  metadata: { type: \"MetadataTypes\" },\r\n  field: { type: \"TopicFieldTypes\" },\r\n};\r\nfetchedPageTypes[\"experiments\"] = {\r\n  visibility: \"VisibilityTypes\",\r\n  //state: \"ExperimentStateTypes\",\r\n};\r\n/*fetchedPageTypes[\"constraints\"] = {\r\n  type1: \"ConstraintTypes\",\r\n  type2: \"ConstraintTypes\",\r\n};*/\r\n\r\n//dictionary for fetched data\r\n//data is fetched on the according resource route and matched with fields following this dictionary\r\n//the value of the specified field is the route to search for data. _ids of that route will be used as options\r\nexport const fetchedPageData = {};\r\nfetchedPageData[\"users\"] = { type: \"roles\" };\r\n/*fetchedPageData[\"tags\"] = { tags: \"tags\" };\r\nfetchedPageData[\"things\"] = { tags: \"tags\" };\r\nfetchedPageData[\"devices\"] = { features: \"features\" };\r\nfetchedPageData[\"features\"] = { tags: \"tags\" };\r\nfetchedPageData[\"measurements\"] = {\r\n  device: \"devices\",\r\n  thing: \"things\",\r\n  tags: \"tags\",\r\n};*/\r\n\r\nexport const guidelines = {};\r\nguidelines[\"protocols\"] = {\r\n  _id: \"Please, enter protocol's name.\",\r\n  description: \"Please, enter a short protocol's description.\",\r\n};\r\nguidelines[\"experiments\"] = {\r\n  _id: \"Please, enter experiment's name (N.B. don't use the # character in experiment's name).\",\r\n  state: \"Please, enter 0 for ongoing experiment, 1 for finished experiment.\",\r\n  description: \"Please, enter a short experiment's description.\",\r\n  manager: \"Please, enter the experiment's company name (as a short Acronym).\",\r\n  startDate: \"Please, use yyyy/mm/dd format.\",\r\n  endDate: \"Please, use yyyy/mm/dd format.\",\r\n};\r\n\r\nguidelines[\"updateHistory\"] = {\r\n  step: \"Please, enter the step number.\",\r\n};\r\n","import localization_it from \"./localizations/localization_it\";\r\nimport localization_en from \"./localizations/localization_en\";\r\n\r\nimport { languages } from \"../config\";\r\n\r\ninterface ILocalization {\r\n  username: string;\r\n  password: string;\r\n  tenant: string;\r\n  keep_logged: string;\r\n  select: string;\r\n  language: string;\r\n  welcome: string;\r\n  role: string;\r\n  session_expire_in: string;\r\n  resources: string;\r\n  notifications: string;\r\n  file_content: string;\r\n  preview: string;\r\n  configuration: string;\r\n\r\n  clear_all: string;\r\n\r\n  ///Fields\r\n  enter: string;\r\n  username_suggestion: string;\r\n  password_suggestion: string;\r\n  tenant_suggestion: string;\r\n  add_tenant: string;\r\n\r\n  //homepage\r\n  welcome_hp: string;\r\n  left_bar_descr_hp: string;\r\n  right_bar_descr_hp: string;\r\n  session_expire_info_hp: string;\r\n  github_page_hp: string;\r\n  github_issue_page_hp: string;\r\n\r\n  //profile page\r\n  profile_page_desc: string;\r\n  pass_change_confirm: string;\r\n  pass_not_match: string;\r\n  old_pass_empty: string;\r\n  old_pass_wrong: string;\r\n  pass_not_null: string;\r\n  password_changed: string;\r\n\r\n  //404\r\n  oh_no: string;\r\n  broken_link: string;\r\n\r\n  ///Actions\r\n  submit: string;\r\n  cancel: string;\r\n  login: string;\r\n  logout: string;\r\n  repeat: string;\r\n  close: string;\r\n  import: string;\r\n  export: string;\r\n\r\n  ///Errors\r\n  login_error: string;\r\n  unauthorised_user: string;\r\n  session_expired: string;\r\n  no_file: string;\r\n  error_imported_file: string;\r\n  duplicate_error: string;\r\n}\r\n\r\nexport default function locale() {\r\n  let tkn = localStorage.getItem(\"language\");\r\n  if (languages.length === 0) {\r\n    return localization_en as ILocalization;\r\n  }\r\n  if (languages.length === 1) {\r\n    tkn = languages[0];\r\n  }\r\n  //let localization : ILocalization;\r\n\r\n  //check token first\r\n  if (tkn === \"it\") {\r\n    return localization_it as ILocalization;\r\n  }\r\n\r\n  if (tkn === \"en\") {\r\n    return localization_en as ILocalization;\r\n  }\r\n\r\n  //then check language from browser\r\n  if (navigator.language.substring(0, 2) === \"it\") {\r\n    return localization_it as ILocalization;\r\n  }\r\n\r\n  if (navigator.language.substring(0, 2) === \"en\") {\r\n    return localization_en as ILocalization;\r\n  }\r\n\r\n  //if the token found or language is not valid -> default language: english\r\n  return localization_en as ILocalization;\r\n}\r\n","import { get_one_generic } from \"./http_operations\";\r\n\r\n//variable to store role as a simple cache\r\nlet roleCache = undefined;\r\n\r\n//get and set the role definition\r\nexport async function SetRoleDefinition() {\r\n  const role = localStorage.getItem(\"user-role\");\r\n  if (role === null || role === undefined || role === \"\") return;\r\n  try {\r\n    const response = await get_one_generic(\"roles\", role);\r\n    if (response !== undefined)\r\n      localStorage.setItem(\"role\", JSON.stringify(response.response.data));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n//check if an user is allowed to do a specific action\r\n//returns true if the use can perform the action, false otherwise\r\nexport function canDo(userRole, resource, actionCRUD) {\r\n  //check if cache-like variable is set\r\n  if (roleCache === undefined) {\r\n    //get role from localstorage (saved there after login)\r\n    const tmp = localStorage.getItem(\"role\");\r\n\r\n    //if the role is not defined, use the hardcoded version\r\n    if (tmp === undefined || tmp === null)\r\n      return canDoDeprecated(userRole, resource, actionCRUD);\r\n\r\n    //if role was found from the localstorage, set the cache-like variable\r\n    roleCache = JSON.parse(tmp);\r\n  }\r\n\r\n  //check if action list is not empty\r\n  if (roleCache.actions.length !== 0) {\r\n    //find the corresponding resource in action list\r\n    const entityDef = roleCache.actions.filter(\r\n      (el) => el.entity === resource\r\n    )[0];\r\n    //check if the action is actually found and if the action has a corresponding in crud object\r\n    if (entityDef !== undefined && entityDef[actionCRUD] !== undefined) {\r\n      return (\r\n        //return true when the crud action is not none nor false\r\n        entityDef[actionCRUD] !== \"none\" && entityDef[actionCRUD] !== false\r\n      );\r\n    }\r\n  }\r\n\r\n  //default case (action list is empty or action list does not contains the specified resource)\r\n  //return true when default of the action is not none nor false\r\n  return (\r\n    roleCache.default[actionCRUD] !== \"none\" &&\r\n    roleCache.default[actionCRUD] !== false\r\n  );\r\n}\r\n\r\n//hardcoded check for user rights\r\nfunction canDoDeprecated(userRole, resource, actionCRUD) {\r\n  if (actionCRUD === \"create\") {\r\n    if (userRole === \"admin\") return true;\r\n    if (userRole === \"provider\") {\r\n      if (resource === \"users\") return false;\r\n      if (resource === \"protocols\") return false;\r\n      if (resource === \"experiments\") return true;\r\n    }\r\n    if (userRole === \"supplier\") {\r\n      if (resource === \"users\") return false;\r\n      if (resource === \"protocols\") return false;\r\n      if (resource === \"experiments\") return true;\r\n    }\r\n    if (userRole === \"analyst\") {\r\n      if (resource === \"users\") return false;\r\n      if (resource === \"protocols\") return false;\r\n      if (resource === \"experiments\") return false;\r\n    }\r\n  }\r\n  if (actionCRUD === \"read\") {\r\n    if (userRole === \"admin\") return true;\r\n    if (userRole === \"provider\") {\r\n      if (resource === \"users\") return false;\r\n      if (resource === \"protocols\") return false;\r\n      if (resource === \"experiments\") return true;\r\n    }\r\n    if (userRole === \"supplier\") {\r\n      if (resource === \"users\") return false;\r\n      if (resource === \"protocols\") return false;\r\n      if (resource === \"experiments\") return false;\r\n    }\r\n    if (userRole === \"analyst\") {\r\n      if (resource === \"users\") return false;\r\n      if (resource === \"protocols\") return false;\r\n      if (resource === \"experiments\") return true;\r\n    }\r\n  }\r\n  if (actionCRUD === \"update\") {\r\n    if (userRole === \"admin\") return true;\r\n    if (userRole === \"provider\") {\r\n      if (resource === \"users\") return false;\r\n      if (resource === \"protocols\") return false;\r\n      if (resource === \"experiments\") return true;\r\n    }\r\n    if (userRole === \"supplier\") {\r\n      if (resource === \"users\") return false;\r\n      if (resource === \"protocols\") return false;\r\n      if (resource === \"experiments\") return false;\r\n    }\r\n    if (userRole === \"analyst\") {\r\n      if (resource === \"users\") return false;\r\n      if (resource === \"protocols\") return false;\r\n      if (resource === \"experiments\") return false;\r\n    }\r\n  }\r\n  if (actionCRUD === \"delete\") {\r\n    if (userRole === \"admin\") return true;\r\n    if (userRole === \"provider\") {\r\n      if (resource === \"users\") return false;\r\n      if (resource === \"protocols\") return false;\r\n      if (resource === \"experiments\") return true;\r\n    }\r\n    if (userRole === \"supplier\") {\r\n      if (resource === \"users\") return false;\r\n      if (resource === \"protocols\") return false;\r\n      if (resource === \"experiments\") return false;\r\n    }\r\n    if (userRole === \"analyst\") {\r\n      if (resource === \"users\") return false;\r\n      if (resource === \"protocols\") return false;\r\n      if (resource === \"experiments\") return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport locale from \"../../common/locale\";\r\nimport { languages } from \"../../config\";\r\nimport \"./languageSelector.scss\";\r\n\r\nexport const LanguageSelector = () => {\r\n  function setSessionLanguage(language: string) {\r\n    localStorage.setItem(\"language\", language);\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {locale().language}\r\n      <div>\r\n        {languages.includes(\"it\") && (\r\n          <Button\r\n            variant=\"outline-info\"\r\n            onClick={() => setSessionLanguage(\"it\")}\r\n          >\r\n            Ita\r\n          </Button>\r\n        )}\r\n        {languages.includes(\"en\") && (\r\n          <Button\r\n            variant=\"outline-info\"\r\n            onClick={() => setSessionLanguage(\"en\")}\r\n          >\r\n            Eng\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n  //\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport locale from \"../../common/locale\";\r\nimport { login } from \"../../services/http_operations\";\r\nimport { SetRoleDefinition } from \"../../services/userRolesManagement\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { languages } from \"../../config\";\r\nimport \"./authPage.scss\";\r\nimport { LanguageSelector } from \"../languageSelector/languageSelector\";\r\nimport { Form, Container, Row, Col } from \"react-bootstrap\";\r\nconst userRef = React.createRef();\r\nconst pswRef = React.createRef();\r\nconst tenantRef = React.createRef();\r\n\r\nconst AuthPageComp = () => {\r\n  //const { location, replace } = useHistory();\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  async function submitForm(e) {\r\n    e.preventDefault();\r\n\r\n    const user = userRef.current.value;\r\n    const psw = pswRef.current.value;\r\n    const tenant = tenantRef.current.value;\r\n    if (user === \"\") {\r\n      setMsg(\"Please, insert your username\");\r\n      return;\r\n    }\r\n    if (psw === \"\") {\r\n      setMsg(\"Please, insert your password\");\r\n      return;\r\n    }\r\n    try {\r\n      await login(user, psw, tenant);\r\n      await SetRoleDefinition();\r\n      window.location.replace(\"/\");\r\n    } catch (error) {\r\n      console.log({ error: error.response.data });\r\n      setMsg(error.response.data.message + \" : \" + error.response.data.details);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"title-wrapper\">\r\n        <div className=\"title-section\">Measurify</div>\r\n        <br />\r\n        <div className=\"subtitle-section\">From the edge to cloud and back</div>\r\n      </div>\r\n      {languages.length > 1 && (\r\n        <div className=\"language-wrapper\">\r\n          <LanguageSelector />\r\n        </div>\r\n      )}\r\n\r\n      <br />\r\n      <br />\r\n      <div className=\"login-section\">\r\n        <h4>{locale().login}</h4>\r\n        <Form onSubmit={submitForm}>\r\n          <Form.Group className=\"mb-3\" controlId=\"username\">\r\n            <Form.Label>{locale().username}</Form.Label>\r\n            <Form.Control\r\n              ref={userRef}\r\n              type=\"text\"\r\n              placeholder={locale().username_suggestion}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>{locale().password}</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              ref={pswRef}\r\n              placeholder={locale().password_suggestion}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"tenant\">\r\n            <Form.Label>{locale().tenant}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              ref={tenantRef}\r\n              placeholder={locale().tenant_suggestion}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"success\" type=\"submit\">\r\n            {locale().submit}\r\n          </Button>\r\n        </Form>\r\n        <br />\r\n        <div style={{ color: \"red\" }}>{msg}</div>\r\n        <br />\r\n        <div className=\"form-row row\">\r\n          <NavLink to={`/add/tenants`}>\r\n            <Button variant=\"outline-success\" size=\"sm\">\r\n              {locale().add_tenant}\r\n              <i\r\n                className=\"fa fa-plus-circle\"\r\n                aria-hidden=\"true\"\r\n                title={\"Add\"}\r\n                style={{\r\n                  width: 30 + \"px\",\r\n                  height: 30 + \"px\",\r\n                  marginRight: 10 + \"px\",\r\n                  opacity: 0.85,\r\n                }}\r\n              ></i>\r\n            </Button>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const AuthPage = AuthPageComp;\r\n","import React, { useEffect } from \"react\";\r\nimport locale from \"../../common/locale\";\r\nimport { website_name } from \"../../config\";\r\n\r\nimport \"./homePage.scss\";\r\n\r\nconst HomePageComp = () => {\r\n  useEffect(() => {});\r\n  return (\r\n    <div className=\"page\">\r\n      <header className=\"page-header\">{website_name}</header>\r\n      <main className=\"page-content\">\r\n        <div className=\"home-page\">\r\n          <div className=\"info-box\">\r\n            <div className=\"info-text\">\r\n              {locale().welcome_hp}\r\n              <br />\r\n              <br />\r\n              {locale().left_bar_descr_hp}\r\n              <br />\r\n              <br />\r\n              {locale().right_bar_descr_hp}\r\n              <br />\r\n              <br />\r\n              {locale().session_expire_info_hp}\r\n              <br />\r\n              <br />\r\n              <a\r\n                href=\"https://github.com/measurify/server/issues\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                title=\"https://github.com/measurify/server/issues\"\r\n              >\r\n                {locale().github_issue_page_hp}\r\n              </a>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const HomePage = HomePageComp;\r\n","import React from \"react\";\r\nimport locale from \"../../common/locale\";\r\n\r\nimport \"./notFoundPage.scss\";\r\n\r\nconst notFoundPageComp = () => {\r\n  return (\r\n    <div className=\"notFound-page\">\r\n      {locale().oh_no}\r\n      <br />\r\n      <br />\r\n      {locale().broken_link}\r\n      <br />\r\n      <br />\r\n      <a\r\n        href=\"https://github.com/measurify/server/issues\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        title=\"https://github.com/measurify/server/issues\"\r\n      >\r\n        {locale().github_issue_page_hp}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const NotFoundPage = notFoundPageComp;\r\n","//check if a generic object is default, according to its type\r\nexport const isDefault = (obj) => {\r\n  //undefined is considered default\r\n  if (obj === undefined) return true;\r\n  //null is considered default\r\n  if (obj == null) return true;\r\n\r\n  //boolean are considered always default since no default value can be considered\r\n  if (typeof obj === \"boolean\") {\r\n    return true;\r\n  }\r\n\r\n  //Nan is default for numbers\r\n  if (typeof obj === \"number\") {\r\n    return isNaN(obj);\r\n  }\r\n\r\n  //default check for strings\r\n  if (typeof obj === \"string\") {\r\n    return obj === \"\";\r\n  }\r\n\r\n  //input field is an array\r\n  if (Array.isArray(obj)) {\r\n    if (obj.length === 0) return true;\r\n    let def = true;\r\n    obj.forEach((elem) => {\r\n      def = def && isDefault(elem);\r\n    });\r\n    return def;\r\n  }\r\n\r\n  //check all values if object\r\n  if (obj.constructor === Object) {\r\n    let def = true;\r\n    Object.entries(obj).forEach(([_, v]) => {\r\n      def = def && isDefault(v);\r\n    });\r\n    return def;\r\n  }\r\n  return true;\r\n};\r\n\r\n//non-default items lenght\r\nexport const nonDefaultLength = (obj) => {\r\n  if (Array.isArray(obj) === false) return -1;\r\n  return obj.filter((e) => !isDefault(e)).length;\r\n};\r\n\r\n//remove all default or empty field from an object, recursively\r\nexport const removeDefaultElements = (obj) => {\r\n  if (Array.isArray(obj)) {\r\n  }\r\n  if (obj.constructor === Object) {\r\n    const entr = Object.entries(obj);\r\n    for (let i = 0; i < entr.length; i++) {\r\n      //check if value is an array\r\n      if (Array.isArray(entr[i][1])) {\r\n        for (let j = 0; j < entr[i][1].length; j++) {\r\n          if (\r\n            entr[i][1][j].constructor === Object ||\r\n            Array.isArray(entr[i][1][j])\r\n          ) {\r\n            removeDefaultElements(entr[i][1][j]);\r\n            if (isDefault(entr[i][1][j])) {\r\n              entr[i][1].splice(j, 1);\r\n            }\r\n          } else {\r\n            if (isDefault(entr[i][1][j])) {\r\n              entr[i][1].splice(j, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      //check if value is an Object\r\n      if (entr[i][1].constructor === Object) {\r\n        const subEntr = Object.entries(entr[i][1]);\r\n        for (let j = 0; j < subEntr.length; j++) {\r\n          if (\r\n            subEntr[i][1].constructor === Object ||\r\n            Array.isArray(subEntr[i][1])\r\n          ) {\r\n            removeDefaultElements(subEntr[i][1]);\r\n          } else {\r\n            if (isDefault(subEntr[i][1])) delete entr[i][1][subEntr[i][0]];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return obj;\r\n};\r\n\r\n//check if two objects (arrays, variables or objects) are equal\r\nexport const areEqual = (obj1, obj2) => {\r\n  //undefined check\r\n  if (obj1 === undefined || obj2 === undefined) return false;\r\n  //single value and ref check\r\n  if (obj1 === obj2) return true;\r\n\r\n  if (typeof obj1 !== typeof obj2) return false;\r\n\r\n  //one is array, other isn't\r\n  if (\r\n    (Array.isArray(obj1) && !Array.isArray(obj2)) ||\r\n    (!Array.isArray(obj1) && Array.isArray(obj2))\r\n  )\r\n    return false;\r\n\r\n  //both are array\r\n  if (Array.isArray(obj1) && Array.isArray(obj2)) {\r\n    //different length => not equal\r\n    if (obj1.length !== obj2.length) return false;\r\n    for (let i = 0; i < obj1.length; i++) {\r\n      if (!areEqual(obj1[i], obj2[i])) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  //one is object, other isn't\r\n  if (\r\n    (obj1.constructor === Object && obj2.constructor !== Object) ||\r\n    (obj1.constructor !== Object && obj2.constructor === Object)\r\n  )\r\n    return false;\r\n\r\n  //both are object\r\n  if (obj1.constructor === Object && obj2.constructor === Object) {\r\n    const k1 = Object.keys(obj1);\r\n    const k2 = Object.keys(obj2);\r\n    if (k1.length !== k2.length) return false;\r\n    if (!areEqual(k1, k2)) return false;\r\n\r\n    const v1 = Object.values(obj1);\r\n    const v2 = Object.values(obj2);\r\n    if (!areEqual(v1, v2)) return false;\r\n\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n//Capitalize the first letter of a string\r\nexport function Capitalize(s) {\r\n  return s && s[0].toUpperCase() + s.slice(1);\r\n}\r\n\r\n//format string date into yyyy/mm/dd\r\nexport function FormatDate(dt) {\r\n  return dt.slice(0, 10).replaceAll(\"-\", \"/\");\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport \"./navigation.scss\";\r\n\r\nimport locale from \"../../common/locale\";\r\nimport { refreshToken } from \"../../services/http_operations\";\r\n\r\nimport fontawesome from \"@fortawesome/fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faBars,\r\n  faUserTie,\r\n  faUserGraduate,\r\n  faUserCog,\r\n  faUserTag,\r\n  faUser,\r\n  faCheck,\r\n} from \"@fortawesome/fontawesome-free-solid\";\r\n\r\nimport {\r\n  pages,\r\n  languages,\r\n  website_name,\r\n  operationPages,\r\n  restrictionPages,\r\n} from \"../../config\";\r\nimport { LanguageSelector } from \"../languageSelector/languageSelector\";\r\nimport { canDo } from \"../../services/userRolesManagement\";\r\nimport { Capitalize } from \"../../services/misc_functions\";\r\nfontawesome.library.add(\r\n  faTimes,\r\n  faBars,\r\n  faUserTie,\r\n  faUserGraduate,\r\n  faUserCog,\r\n  faUserTag,\r\n  faUser,\r\n  faCheck\r\n);\r\n\r\nlet intervalRef = React.createRef();\r\nlet loginTime = React.createRef();\r\n\r\nlet remainingSeconds = React.createRef();\r\nlet duration = React.createRef();\r\n\r\nlet role = React.createRef();\r\nlet username = React.createRef();\r\nlet tenant = React.createRef();\r\n\r\nexport default function Navigation() {\r\n  const [isOpened, setIsOpened] = useState(false);\r\n\r\n  const usr = localStorage.getItem(\"username\");\r\n  const rl = localStorage.getItem(\"user-role\");\r\n  const tn = localStorage.getItem(\"user-tenant\");\r\n\r\n  username.current = usr !== null ? usr : \"\";\r\n  role.current = rl !== null ? rl : \"\";\r\n  tenant.current = tn !== null && tn !== \"\" ? tn : \"-\";\r\n\r\n  //useeffect on change time\r\n  useEffect(() => {\r\n    //convert duration time in string format to milliseconds\r\n    function DurationToMilliSeconds() {\r\n      let exp = localStorage.getItem(\"token-expiration-time\");\r\n\r\n      if (exp === null) return 300;\r\n      if (exp.endsWith(\"h\")) {\r\n        return parseInt(exp.slice(0, -1)) * 60 * 60 * 1000;\r\n      } else if (exp.endsWith(\"m\")) {\r\n        return parseInt(exp.slice(0, -1)) * 60 * 1000;\r\n      } else if (exp.endsWith(\"s\")) {\r\n        return parseInt(exp.slice(0, -1)) * 1000;\r\n      }\r\n      //default case, right now the same as seconds\r\n      else {\r\n        return parseInt(exp.slice(0, -1)) * 1000;\r\n      }\r\n    }\r\n\r\n    //calculate remaining seconds and refresh token if required\r\n    function CalcEnding() {\r\n      let t0;\r\n      let remainingSec;\r\n      //if remaining time is already calculated, just decrement that number by 1\r\n      if (remainingSeconds.current !== null) {\r\n        remainingSec = remainingSeconds.current - 1;\r\n      }\r\n      //otherwise, calculate remaining seconds\r\n      else {\r\n        //check if login time is already defined, if it's null get it from localstorage or current time (refresh case)\r\n        if (loginTime.current === null) {\r\n          const retryLoginTime = localStorage.getItem(\"login-time\");\r\n          //if localstorage containst login time, use it and store it into state\r\n          if (retryLoginTime !== null) {\r\n            loginTime.current = retryLoginTime;\r\n            t0 = parseInt(retryLoginTime, 10);\r\n          }\r\n          //otherwise get it from current time and store it into state\r\n          else {\r\n            t0 = Date.now();\r\n            loginTime.current = t0;\r\n          }\r\n        }\r\n        //use logintime stored into state\r\n        else {\r\n          t0 = parseInt(loginTime.current, 10);\r\n        }\r\n        if (duration.current === null)\r\n          duration.current = DurationToMilliSeconds();\r\n        const endTime = t0 + duration.current;\r\n\r\n        remainingSec = (endTime - Date.now()) / 1000;\r\n      }\r\n\r\n      if (remainingSec < 60) {\r\n        clearInterval(intervalRef.current);\r\n        refreshToken().then(() => {\r\n          remainingSeconds.current = null;\r\n          loginTime.current = null;\r\n\r\n          intervalRef.current = setInterval(() => {\r\n            CalcEnding();\r\n          }, 1000);\r\n          return;\r\n        });\r\n      }\r\n      if (remainingSec <= 0) {\r\n        localStorage.clear();\r\n        //session expired, automatically logout\r\n        window.location.replace(\"/\");\r\n        return;\r\n      }\r\n\r\n      //const mins = Math.floor(remainingSec / 60);\r\n      //const secs = Math.floor(remainingSec % 60);\r\n\r\n      remainingSeconds.current = parseInt(remainingSec, 10);\r\n    }\r\n\r\n    intervalRef.current = setInterval(() => {\r\n      CalcEnding();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  function logOut() {\r\n    localStorage.clear();\r\n    document.location.replace(\"/\");\r\n  }\r\n\r\n  function renderIconRole() {\r\n    if (role.current === \"admin\") {\r\n      return (\r\n        <i className=\"fa fa-user-tie\" aria-hidden=\"true\" title=\"Admin\"></i>\r\n      );\r\n    } else if (role.current === \"provider\") {\r\n      return (\r\n        <i\r\n          className=\"fa fa-user-graduate\"\r\n          aria-hidden=\"true\"\r\n          title=\"Provider\"\r\n        ></i>\r\n      );\r\n    } else if (role.current === \"analyst\") {\r\n      return (\r\n        <i className=\"fa fa-user-cog\" aria-hidden=\"true\" title=\"Analyst\"></i>\r\n      );\r\n    } else if (role.current === \"supplier\") {\r\n      return (\r\n        <i className=\"fa fa-user-tag\" aria-hidden=\"true\" title=\"Supplier\"></i>\r\n      );\r\n    } else {\r\n      return (\r\n        <i className=\"fa fa-user\" aria-hidden=\"true\" aria-label=\"User\"></i>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className=\"app-nav\">\r\n      <Button className=\"app-nav-opener\" onClick={() => setIsOpened(!isOpened)}>\r\n        {isOpened ? (\r\n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        ) : (\r\n          <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n        )}\r\n      </Button>\r\n      <NavLink to=\"/home\" className=\"nav-wrap\">\r\n        {website_name}\r\n      </NavLink>\r\n      <hr />\r\n      <div className={`app-nav-wrapper ${isOpened ? \"opened\" : \"\"}`}>\r\n        <div className=\"app-nav-links\">\r\n          <hr />\r\n          <div className=\"data-wrapper\">\r\n            <NavLink to={`/viewProfile/`} key={`viewProfile`}>\r\n              {locale().welcome + \" \"}\r\n              <b>{username.current}</b>\r\n            </NavLink>\r\n            <div style={{ paddingLeft: 10 + \"px\" }}>\r\n              <h3>\r\n                {locale().role + \" \"}\r\n                {renderIconRole()}\r\n              </h3>\r\n            </div>\r\n            <div style={{ paddingLeft: 10 + \"px\" }}>\r\n              <h3>\r\n                {locale().tenant + \" \"}\r\n                <b>{tenant.current}</b>\r\n              </h3>\r\n            </div>\r\n            <br />\r\n            <div style={{ paddingLeft: 20 + \"px\", paddingBottom: 20 + \"px\" }}>\r\n              <Button variant=\"outline-danger\" onClick={() => logOut()}>\r\n                {locale().logout}\r\n              </Button>\r\n            </div>\r\n            {languages.length > 1 && (\r\n              <React.Fragment>\r\n                <hr />\r\n                <h2>\r\n                  <LanguageSelector />\r\n                </h2>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n          <hr />\r\n          <div className=\"app-nav-text\">{locale().resources}</div>\r\n          <hr />\r\n          {Object.keys(pages).map((k) => {\r\n            //check if user can access to the page\r\n            if (\r\n              !canDo(role.current, k, \"read\") ||\r\n              (restrictionPages[k] !== undefined &&\r\n                !restrictionPages[k].includes(role.current))\r\n            ) {\r\n              return \"\";\r\n            }\r\n            return (\r\n              <NavLink\r\n                to={`/` + k}\r\n                className={(navData) => (navData.isActive ? \"active\" : \"\")}\r\n                //activeClassName=\"active\"\r\n                key={k}\r\n                onClick={() => setIsOpened(false)}\r\n              >\r\n                {Capitalize(k)}\r\n              </NavLink>\r\n            );\r\n          })}\r\n          <hr />\r\n          {operationPages.length !== 0 && (\r\n            <>\r\n              <div className=\"app-nav-text\">Manage Experiments</div> <hr />\r\n            </>\r\n          )}\r\n          {operationPages.includes(\"updatehistory\") &&\r\n            canDo(role.current, \"experiments\", \"update\") && (\r\n              <NavLink\r\n                to={`/updatehistory`}\r\n                className={(navData) => (navData.isActive ? \"active\" : \"\")}\r\n                //activeClassName=\"active\"}\r\n                onClick={() => setIsOpened(false)}\r\n              >\r\n                Update Experiments History\r\n              </NavLink>\r\n            )}\r\n          {operationPages.includes(\"downloadexperiment\") &&\r\n            canDo(role.current, \"experiments\", \"read\") && (\r\n              <NavLink\r\n                to={`/downloadexperiment`}\r\n                className={(navData) => (navData.isActive ? \"active\" : \"\")}\r\n                //activeClassName=\"active\"}\r\n                onClick={() => setIsOpened(false)}\r\n              >\r\n                Download Experiments Data\r\n              </NavLink>\r\n            )}\r\n          {operationPages.includes(\"removesteps\") &&\r\n            canDo(role.current, \"experiments\", \"update\") && (\r\n              <NavLink\r\n                to={`/removesteps`}\r\n                className={(navData) => (navData.isActive ? \"active\" : \"\")}\r\n                //activeClassName=\"active\"}\r\n                onClick={() => setIsOpened(false)}\r\n              >\r\n                Remove History Steps\r\n              </NavLink>\r\n            )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { viewFields } from \"../../config\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport fontawesome from \"@fortawesome/fontawesome\";\r\nimport {\r\n  faEye,\r\n  faPencilAlt,\r\n  faCopy,\r\n} from \"@fortawesome/fontawesome-free-solid\";\r\nimport {\r\n  Button,\r\n  OverlayTrigger,\r\n  Popover,\r\n  Accordion,\r\n  Table,\r\n} from \"react-bootstrap\";\r\n\r\nimport { delete_generic } from \"../../services/http_operations\";\r\nimport { FormatDate } from \"../../services/misc_functions\";\r\n\r\nfontawesome.library.add(faEye, faPencilAlt, faCopy);\r\n\r\nfunction ActionContent(props) {\r\n  const toShow = {};\r\n  viewFields[props.resType].forEach((k) => {\r\n    if (k.constructor === Object) {\r\n      Object.keys(k).forEach((subK) => {\r\n        if (Array.isArray(props.resource[subK])) {\r\n          toShow[subK] = props.resource[subK].map((e) => {\r\n            const row = {};\r\n            k[subK].forEach((f) => {\r\n              row[f] = e[f];\r\n            });\r\n            return row;\r\n          });\r\n        } else {\r\n          toShow[subK] = props.resource[subK];\r\n        }\r\n      });\r\n    } else {\r\n      if (Object.keys(props.resource).includes(k)) {\r\n        toShow[k] = props.resource[k];\r\n      }\r\n    }\r\n  });\r\n\r\n  //render accordion with table when field is array of object\r\n  return UnrollView(toShow);\r\n}\r\n\r\nfunction UnrollView(item) {\r\n  return (\r\n    <Accordion defaultActiveKey={0} size={\"lg\"}>\r\n      {React.Children.toArray(\r\n        Object.entries(item).map(([key, value], i) => {\r\n          return (\r\n            <Accordion.Item eventKey={i}>\r\n              <Accordion.Header>\r\n                <b>{key}</b>\r\n              </Accordion.Header>\r\n              <Accordion.Body>\r\n                {value instanceof Object ? (\r\n                  Array.isArray(value) ? (\r\n                    value[0] !== undefined ? (\r\n                      Object.values(value[0]).some(\r\n                        (e) => e instanceof Object\r\n                      ) ? (\r\n                        React.Children.toArray(\r\n                          value.map((single, i) => {\r\n                            return (\r\n                              <Accordion>\r\n                                <Accordion.Item eventKey=\"0\">\r\n                                  <Accordion.Header>\r\n                                    {key} <i>[{i}]</i>\r\n                                  </Accordion.Header>\r\n                                  <Accordion.Body>\r\n                                    {UnrollView(single)}\r\n                                  </Accordion.Body>\r\n                                </Accordion.Item>\r\n                              </Accordion>\r\n                            );\r\n                          })\r\n                        )\r\n                      ) : value[0] instanceof Object ? (\r\n                        <Table responsive striped bordered hover size=\"sm\">\r\n                          <thead>\r\n                            <tr>\r\n                              {React.Children.toArray(\r\n                                Object.keys(value[0]).map((e) => {\r\n                                  return <th>{e}</th>;\r\n                                })\r\n                              )}\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {React.Children.toArray(\r\n                              value.map((row) => {\r\n                                return (\r\n                                  <tr>\r\n                                    {React.Children.toArray(\r\n                                      Object.values(row).map((v) => {\r\n                                        if (Array.isArray(v))\r\n                                          return <td>[{v.join(\", \")}]</td>;\r\n                                        return <td>{v}</td>;\r\n                                      })\r\n                                    )}\r\n                                  </tr>\r\n                                );\r\n                              })\r\n                            )}\r\n                          </tbody>\r\n                        </Table>\r\n                      ) : (\r\n                        \"[ \" + value.join(\" , \") + \" ]\"\r\n                      )\r\n                    ) : (\r\n                      \"[ ]\"\r\n                    )\r\n                  ) : (\r\n                    <Table responsive striped bordered hover size=\"sm\">\r\n                      <tbody>\r\n                        {React.Children.toArray(\r\n                          Object.entries(value).map((entr) => {\r\n                            return (\r\n                              <tr>\r\n                                <td>\r\n                                  <b>{entr[0]}</b>\r\n                                </td>\r\n                                <td>\r\n                                  {typeof entr[1] !== \"string\"\r\n                                    ? entr[1].toString()\r\n                                    : entr[1]}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  )\r\n                ) : value === undefined || value == null ? (\r\n                  <i>None</i>\r\n                ) : key.toLowerCase().includes(\"date\") ? (\r\n                  FormatDate(value)\r\n                ) : (\r\n                  value\r\n                )}\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          );\r\n        })\r\n      )}\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default function ActionManager(props) {\r\n  const [res, setRes] = useState(undefined);\r\n  useEffect(() => {\r\n    //use effect body\r\n  }, [props]);\r\n\r\n  const viewPopover =\r\n    res !== undefined ? (\r\n      <Popover\r\n        id=\"popover-positioned-left\"\r\n        style={{\r\n          width: 20 + \"vw\",\r\n          minWidth:\r\n            /Mobi/i.test(window.navigator.userAgent) == true ? 250 : 400 + \"px\",\r\n        }}\r\n      >\r\n        <Popover.Header as=\"h3\">View Resource</Popover.Header>\r\n        <Popover.Body>\r\n          <ActionContent resource={res} resType={props.resType} />\r\n        </Popover.Body>\r\n      </Popover>\r\n    ) : (\r\n      <Popover id=\"popover-positioned-left\" style={{ width: 20 + \"vw\" }}>\r\n        <Popover.Header as=\"h3\">\r\n          Loading<Popover.Body></Popover.Body>\r\n        </Popover.Header>\r\n      </Popover>\r\n    );\r\n  if (props.action === \"view\") {\r\n    return (\r\n      <OverlayTrigger\r\n        trigger=\"click\"\r\n        placement=\"left\"\r\n        overlay={viewPopover}\r\n        rootClose={true}\r\n      >\r\n        <Button\r\n          variant=\"link\"\r\n          size=\"sm\"\r\n          onClick={() => {\r\n            setRes(props.takeSingle(props.id));\r\n          }}\r\n        >\r\n          <i\r\n            className=\"fa fa-eye\"\r\n            aria-hidden=\"true\"\r\n            title=\"View\"\r\n            style={{\r\n              width: 30 + \"px\",\r\n              height: 30 + \"px\",\r\n              marginRight: 10 + \"px\",\r\n              opacity: 0.85,\r\n            }}\r\n          ></i>\r\n        </Button>\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n  if (props.action === \"delete\") {\r\n    return (\r\n      <Button\r\n        variant=\"link\"\r\n        size=\"sm\"\r\n        onClick={async () => {\r\n          const result = window.confirm(\"Want to delete: \" + props.id + \"?\");\r\n          if (result) {\r\n            try {\r\n              const response = await delete_generic(props.resType, props.id);\r\n\r\n              if (response.response.status === 200) {\r\n                props.removeSingle(props.id);\r\n              }\r\n            } catch (error) {\r\n              console.log(error);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        <i\r\n          className=\"fa fa-times\"\r\n          aria-hidden=\"true\"\r\n          title=\"Delete\"\r\n          style={{\r\n            width: 30 + \"px\",\r\n            height: 30 + \"px\",\r\n            marginRight: 10 + \"px\",\r\n            opacity: 0.85,\r\n          }}\r\n        ></i>\r\n      </Button>\r\n    );\r\n  }\r\n  if (props.action === \"edit\") {\r\n    return (\r\n      <NavLink to={`/edit/` + props.resType + \"/\" + props.id}>\r\n        <Button variant=\"link\" size=\"sm\">\r\n          <i\r\n            className=\"fa fa-pencil-alt\"\r\n            aria-hidden=\"true\"\r\n            title=\"Edit\"\r\n            style={{\r\n              width: 30 + \"px\",\r\n              height: 30 + \"px\",\r\n              marginRight: 10 + \"px\",\r\n              opacity: 0.85,\r\n            }}\r\n          ></i>\r\n        </Button>\r\n      </NavLink>\r\n    );\r\n  }\r\n  if (props.action === \"duplicate\") {\r\n    return (\r\n      <NavLink to={`/add/` + props.resType + \"/?from=\" + props.id}>\r\n        <Button variant=\"link\" size=\"sm\">\r\n          <i\r\n            className=\"fa fa-copy\"\r\n            aria-hidden=\"true\"\r\n            title=\"Duplicate\"\r\n            style={{\r\n              width: 30 + \"px\",\r\n              height: 30 + \"px\",\r\n              marginRight: 10 + \"px\",\r\n              opacity: 0.85,\r\n            }}\r\n          ></i>\r\n        </Button>\r\n      </NavLink>\r\n    );\r\n  }\r\n\r\n  return <div />;\r\n}\r\n","import React from \"react\";\r\nimport { aliasPages } from \"../../config\";\r\n\r\nimport { Table } from \"react-bootstrap\";\r\nimport ActionManager from \"../actionsManager/actionsManager\";\r\nimport { canDo } from \"../../services/userRolesManagement\";\r\n\r\nexport default function ContentTable(props) {\r\n  if (props.header === undefined || props.resources === undefined)\r\n    return <div>Loading</div>;\r\n  if (props.header.includes(\"_actions\") && props._actions === undefined)\r\n    return <div>Loading</div>;\r\n\r\n  return (\r\n    <div>\r\n      <Table responsive striped bordered hover>\r\n        <thead>\r\n          <tr key={\"header\"}>\r\n            {React.Children.toArray(\r\n              props.header.map((e) => {\r\n                if (aliasPages[props.resType] !== undefined)\r\n                  if (aliasPages[props.resType][e] !== undefined)\r\n                    return <th>{aliasPages[props.resType][e]}</th>;\r\n                return <th>{e}</th>;\r\n              })\r\n            )}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {React.Children.toArray(\r\n            props.resources.map((row, index) => {\r\n              return (\r\n                <tr>\r\n                  {React.Children.toArray(\r\n                    props.header.map((e) => {\r\n                      if (e === \"_actions\") {\r\n                        return (\r\n                          <td>\r\n                            {props._actions.includes(\"view\") ? (\r\n                              <ActionManager\r\n                                resType={props.resType}\r\n                                action=\"view\"\r\n                                k={index + \"_view\"}\r\n                                id={row[\"_id\"]}\r\n                                takeSingle={props.takeSingle}\r\n                              />\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            {props._actions.includes(\"edit\") &&\r\n                            canDo(props.userRole, props.resType, \"update\") ? (\r\n                              <ActionManager\r\n                                resType={props.resType}\r\n                                action=\"edit\"\r\n                                k={index + \"_edit\"}\r\n                                id={row[\"_id\"]}\r\n                                //takeSingle={props.takeSingle}\r\n                              />\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            {props._actions.includes(\"duplicate\") &&\r\n                            canDo(props.userRole, props.resType, \"create\") ? (\r\n                              <ActionManager\r\n                                resType={props.resType}\r\n                                action=\"duplicate\"\r\n                                k={index + \"_duplicate\"}\r\n                                id={row[\"_id\"]}\r\n                              />\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            {props._actions.includes(\"delete\") &&\r\n                            canDo(props.userRole, props.resType, \"delete\") ? (\r\n                              <ActionManager\r\n                                resType={props.resType}\r\n                                action=\"delete\"\r\n                                k={index + \"_delete\"}\r\n                                id={row[\"_id\"]}\r\n                                removeSingle={props.removeSingle}\r\n                              />\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </td>\r\n                        );\r\n                      }\r\n                      if (row[e] === undefined) return;\r\n                      if (Array.isArray(row[e]))\r\n                        return <td>{\"[ \" + row[e].join(\" , \") + \" ]\"}</td>;\r\n                      return <td>{row[e]}</td>;\r\n                    })\r\n                  )}\r\n                </tr>\r\n              );\r\n            })\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { pages, pageActions, addFields } from \"../../config\";\r\nimport { get_generic } from \"../../services/http_operations\";\r\nimport ContentTable from \"../contentTable/contentTable\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport \"./page.scss\";\r\nimport { Capitalize } from \"../../services/misc_functions\";\r\nimport { canDo } from \"../../services/userRolesManagement\";\r\nimport fontawesome from \"@fortawesome/fontawesome\";\r\nimport { faPlusCircle } from \"@fortawesome/fontawesome-free-solid\";\r\nfontawesome.library.add(faPlusCircle);\r\n\r\nlet role = React.createRef();\r\n\r\nexport default function Page(params) {\r\n  const { page } = useParams();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [resource, setResource] = useState(undefined);\r\n  const [header, setHeader] = useState(undefined);\r\n  const [_actions, set_Actions] = useState(undefined);\r\n\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const [pageLimit, setPageLimit] = useState(1);\r\n\r\n  const [hasNext, setHasNext] = useState();\r\n  const [hasPrev, setHasPrev] = useState();\r\n\r\n  const [prevPage, setPrevPage] = useState();\r\n  const [nextPage, setNextPage] = useState();\r\n\r\n  const [totalPages, setTotalPages] = useState();\r\n\r\n  const rl = localStorage.getItem(\"user-role\");\r\n\r\n  role.current = rl !== null ? rl : \"\";\r\n\r\n  useEffect(() => {\r\n    // declare the async data fetching function\r\n    const fetchData = async (qs = {}) => {\r\n      // get the data from the api\r\n      try {\r\n        const response = await get_generic(page, qs);\r\n\r\n        // set state with the result\r\n        setHeader(pages[page]);\r\n        setResource(response.docs);\r\n        if (pageActions[page] !== undefined) set_Actions(pageActions[page]);\r\n\r\n        setHasNext(response.hasNextPage);\r\n        setHasPrev(response.hasPrevPage);\r\n\r\n        setTotalPages(response.totalPages);\r\n\r\n        setPrevPage(response.prevPage);\r\n        setNextPage(response.nextPage);\r\n      } catch (error) {\r\n        console.log(error);\r\n\r\n        setHeader(undefined);\r\n        setResource(undefined);\r\n        setHasNext(undefined);\r\n        setHasPrev(undefined);\r\n        setTotalPages(undefined);\r\n        setPrevPage(undefined);\r\n        setNextPage(undefined);\r\n      }\r\n    };\r\n\r\n    //get params for pagination\r\n    const num =\r\n      searchParams.get(\"page\") !== null ? searchParams.get(\"page\") : 1;\r\n    setPageNum(num);\r\n\r\n    const limit =\r\n      searchParams.get(\"limit\") !== null ? searchParams.get(\"limit\") : 10;\r\n    setPageLimit(limit);\r\n\r\n    const qs = { page: num, limit: limit };\r\n\r\n    // call the function\r\n    fetchData(qs)\r\n      // make sure to catch any error\r\n      .catch(console.error);\r\n  }, [params, page, searchParams]);\r\n\r\n  const takeSingle = (id) => {\r\n    return resource.find((r) => r._id === id);\r\n  };\r\n\r\n  const removeSingle = (id) => {\r\n    let tmp = resource.filter((el) => {\r\n      return el._id !== id;\r\n    });\r\n    setResource(tmp);\r\n  };\r\n\r\n  const RenderPagination = () => {\r\n    const prevEllipsis = parseInt(pageNum, 10) - 2 > 0;\r\n    const nextEllipsis = parseInt(pageNum, 10) + 2 < totalPages;\r\n\r\n    return (\r\n      <div style={{ display: \"inline-flex\", width: 100 + \"%\" }}>\r\n        <Pagination\r\n          style={{\r\n            alignSelf: \"center\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n        >\r\n          <Pagination.First\r\n            disabled={pageNum === 1}\r\n            onClick={() => setSearchParams({ page: 1, limit: pageLimit })}\r\n          />\r\n          <Pagination.Prev\r\n            disabled={!hasPrev}\r\n            onClick={() =>\r\n              setSearchParams({ page: prevPage, limit: pageLimit })\r\n            }\r\n          />\r\n          {prevEllipsis && <Pagination.Ellipsis />}\r\n          {parseInt(pageNum, 10) - 1 > 0 && (\r\n            <Pagination.Item\r\n              onClick={() =>\r\n                setSearchParams({\r\n                  page: parseInt(pageNum, 10) - 1,\r\n                  limit: pageLimit,\r\n                })\r\n              }\r\n            >\r\n              {parseInt(pageNum, 10) - 1}\r\n            </Pagination.Item>\r\n          )}\r\n          <Pagination.Item>\r\n            <b>{pageNum}</b>\r\n          </Pagination.Item>\r\n          {parseInt(pageNum, 10) + 1 <= totalPages && (\r\n            <Pagination.Item\r\n              onClick={() =>\r\n                setSearchParams({\r\n                  page: parseInt(pageNum, 10) + 1,\r\n                  limit: pageLimit,\r\n                })\r\n              }\r\n            >\r\n              {parseInt(pageNum, 10) + 1}\r\n            </Pagination.Item>\r\n          )}\r\n          {nextEllipsis && <Pagination.Ellipsis />}\r\n\r\n          <Pagination.Next\r\n            disabled={!hasNext}\r\n            onClick={() =>\r\n              setSearchParams({ page: nextPage, limit: pageLimit })\r\n            }\r\n          />\r\n          <Pagination.Last\r\n            disabled={pageNum === totalPages}\r\n            onClick={() =>\r\n              setSearchParams({ page: totalPages, limit: pageLimit })\r\n            }\r\n          />\r\n        </Pagination>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"page\">\r\n      <header className=\"page-header\">\r\n        {Capitalize(page)}\r\n\r\n        {addFields[page] !== undefined &&\r\n          canDo(role.current, page, \"create\") && (\r\n            <NavLink to={`/add/` + page + \"/\"} key={page + \"_add_navlink\"}>\r\n              <Button variant=\"link\" size=\"sm\" key={page + \"button\"}>\r\n                <i\r\n                  key={page + \"icon\"}\r\n                  className=\"fa fa-plus-circle\"\r\n                  aria-hidden=\"true\"\r\n                  title={\"Add\"}\r\n                  style={{\r\n                    width: 30 + \"px\",\r\n                    height: 30 + \"px\",\r\n                    marginRight: 10 + \"px\",\r\n                    opacity: 0.85,\r\n                  }}\r\n                ></i>\r\n              </Button>\r\n            </NavLink>\r\n          )}\r\n      </header>\r\n      <main className=\"page-content\">\r\n        <ContentTable\r\n          resType={page}\r\n          userRole={role.current}\r\n          header={header}\r\n          resources={resource}\r\n          _actions={_actions}\r\n          takeSingle={takeSingle}\r\n          removeSingle={removeSingle}\r\n        />\r\n        <RenderPagination />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\r\nimport locale from \"../../common/locale\";\r\nimport { put_generic, login } from \"../../services/http_operations\";\r\nimport \"../page/page.scss\";\r\n\r\nexport default function ProfilePage(params) {\r\n  //save in status informations of profile\r\n  const [username, setUsername] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [tenant, setTenant] = useState(\"\");\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  function renderIconRole() {\r\n    if (role === \"admin\") {\r\n      return (\r\n        <i className=\"fa fa-user-tie\" aria-hidden=\"true\" title=\"Admin\"></i>\r\n      );\r\n    } else if (role === \"provider\") {\r\n      return (\r\n        <i\r\n          className=\"fa fa-user-graduate\"\r\n          aria-hidden=\"true\"\r\n          title=\"Provider\"\r\n        ></i>\r\n      );\r\n    } else if (role === \"analyst\") {\r\n      return (\r\n        <i className=\"fa fa-user-cog\" aria-hidden=\"true\" title=\"Analyst\"></i>\r\n      );\r\n    } else if (role === \"supplier\") {\r\n      return (\r\n        <i className=\"fa fa-user-tag\" aria-hidden=\"true\" title=\"Supplier\"></i>\r\n      );\r\n    } else {\r\n      return (\r\n        <i className=\"fa fa-user\" aria-hidden=\"true\" aria-label=\"User\"></i>\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const username = localStorage.getItem(\"username\");\r\n    const role = localStorage.getItem(\"user-role\");\r\n    const tenant = localStorage.getItem(\"user-tenant\");\r\n    setUsername(username !== null ? username : \"\");\r\n    setRole(role !== null ? role : \"\");\r\n    setTenant(tenant !== null && tenant !== \"\" ? tenant : \"-\");\r\n  }, []);\r\n\r\n  const submitPassword = async (e) => {\r\n    e.preventDefault();\r\n    if (oldPassword === \"\") {\r\n      setMsg(locale().old_pass_empty);\r\n    }\r\n    if (password !== passwordConfirm) {\r\n      setMsg(locale().pass_not_match);\r\n      return;\r\n    }\r\n    if (password === \"\" || passwordConfirm === \"\") {\r\n      setMsg(locale().pass_not_null);\r\n      return;\r\n    }\r\n    try {\r\n      await login(\r\n        username,\r\n        oldPassword,\r\n        tenant !== \"-\" ? tenant : undefined,\r\n        false\r\n      );\r\n    } catch (error) {\r\n      setMsg(locale().old_pass_wrong);\r\n      return;\r\n    }\r\n    const result = window.confirm(locale().pass_change_confirm);\r\n    if (result) {\r\n      try {\r\n        const response = await put_generic(\r\n          \"users\",\r\n          { password: password },\r\n          username\r\n        );\r\n        setOldPassword(\"\");\r\n        setPassword(\"\");\r\n        setPasswordConfirm(\"\");\r\n        if (response.response.status === 200) {\r\n          setMsg(locale().password_changed);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <header className=\"page-header\">\r\n        {locale().welcome}&nbsp;<b>{username}</b>:&nbsp;\r\n        {locale().profile_page_desc}\r\n      </header>\r\n      <main className=\"page-content\">\r\n        <Container fluid>\r\n          <Row>\r\n            <Col xs={1}>Username:&nbsp;</Col>\r\n            <Col>\r\n              <b>{username}</b>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1}>{locale().role}</Col>\r\n            <Col>\r\n              {role}&nbsp;\r\n              {renderIconRole()}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1}>{locale().tenant + \" \"}</Col>\r\n            <Col>\r\n              <b>{tenant}</b>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <hr />\r\n        <Container fluid>\r\n          <Col>\r\n            <Row>\r\n              <b>Edit password</b>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Form onSubmit={submitPassword}>\r\n                <Row>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Control\r\n                      type={\"password\"}\r\n                      onChange={(e) => {\r\n                        e.preventDefault();\r\n                        setOldPassword(e.target.value);\r\n                      }}\r\n                      value={oldPassword}\r\n                      placeholder={locale().enter + \" old password\"}\r\n                    />\r\n                  </Form.Group>\r\n                </Row>\r\n                <Row>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Control\r\n                      type={\"password\"}\r\n                      onChange={(e) => {\r\n                        e.preventDefault();\r\n                        setPassword(e.target.value);\r\n                      }}\r\n                      value={password}\r\n                      placeholder={locale().enter + \" new password\"}\r\n                    />\r\n                  </Form.Group>\r\n                </Row>\r\n                <Row>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Control\r\n                      type={\"password\"}\r\n                      onChange={(e) => {\r\n                        e.preventDefault();\r\n                        setPasswordConfirm(e.target.value);\r\n                      }}\r\n                      value={passwordConfirm}\r\n                      placeholder={locale().repeat + \" new password\"}\r\n                      aria-describedby=\"passwordHelpBlock\"\r\n                    />\r\n                    <Form.Text id=\"passwordHelpBlock\" muted>\r\n                      {msg}\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                </Row>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  {locale().submit}\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import \"./unauthorizedPage.scss\";\r\n\r\nimport React from \"react\";\r\nimport locale from \"../../common/locale\";\r\n\r\nexport default function UnauthorizedPage() {\r\n  return (\r\n    <div className=\"unAuth-page\">\r\n      <div className=\"info-box\">\r\n        <div className=\"info-text\">{locale().unauthorised_user}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;\r\n","import {\r\n  Button,\r\n  Badge,\r\n  Offcanvas,\r\n  Toast,\r\n  ToastContainer,\r\n} from \"react-bootstrap\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport locale from \"../../common/locale\";\r\nimport \"./notificationBar.scss\";\r\nimport AppContext from \"../../context\";\r\nimport { layout } from \"../../config\";\r\nconst oldNotifications = React.createRef();\r\n\r\nexport default function NotificationBar(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n\r\n  let layoutRef = React.useRef();\r\n  const myNotifications = useContext(AppContext).notifications;\r\n  oldNotifications.current = 0;\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  /*\r\n  handleClick = () => {\r\n    this.setState({ highlight: true });\r\n    setTimeout(() => {\r\n      this.setState({ highlight: false });\r\n    }, 2000);\r\n  };*/\r\n\r\n  useEffect(() => {\r\n    if (oldNotifications.current < myNotifications.notifications.length) {\r\n      oldNotifications.current = myNotifications.notifications.length;\r\n\r\n      setHighlight(true);\r\n      setTimeout(() => {\r\n        setHighlight(false);\r\n      }, 600);\r\n    }\r\n  }, [myNotifications.notifications]);\r\n\r\n  //mobile view only allowed to be vertical\r\n  if (/Mobi/i.test(window.navigator.userAgent) === true) {\r\n    layoutRef.current = \"vertical\";\r\n  } else {\r\n    layoutRef.current = layout;\r\n  }\r\n  const errorNot = myNotifications.notifications.filter(\r\n    (e) => e.name === \"error\"\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className=\"notificationBar\"\r\n      style={\r\n        layoutRef.current === \"vertical\" &&\r\n        /Mobi/i.test(window.navigator.userAgent) === false\r\n          ? { height: 100 + \"vh\" }\r\n          : {}\r\n      }\r\n    >\r\n      <Button\r\n        variant=\"link\"\r\n        onClick={() => {\r\n          handleShow();\r\n        }}\r\n        style={{\r\n          color: \"#fff\",\r\n          textDecoration: \"none\",\r\n        }}\r\n      >\r\n        {locale().notifications}&nbsp;\r\n        <Badge\r\n          pill\r\n          bg={errorNot.length > 0 ? \"danger\" : \"success\"}\r\n          className={`element${highlight ? \" highlight\" : \"\"}`}\r\n        >\r\n          {myNotifications.notifications.length}\r\n        </Badge>\r\n        <span className=\"visually-hidden\">Unread notifications</span>\r\n      </Button>\r\n\r\n      <Offcanvas\r\n        style={{\r\n          backgroundColor: \"#123651\",\r\n          color: \"#fff\",\r\n        }}\r\n        show={show}\r\n        onHide={handleClose}\r\n        placement=\"end\"\r\n        name={\"notification_bar\"}\r\n        scroll={false}\r\n        backdrop={true}\r\n        keyboard={true}\r\n      >\r\n        <Offcanvas.Header>\r\n          <Offcanvas.Title>\r\n            {locale().notifications}\r\n            &nbsp;\r\n            <Badge pill bg={errorNot.length > 0 ? \"danger\" : \"success\"}>\r\n              {myNotifications.notifications.length}\r\n            </Badge>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button variant=\"outline-secondary\" onClick={() => handleClose()}>\r\n              {locale().close + \" \" + locale().notifications}\r\n            </Button>\r\n          </Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          <div\r\n            style={{\r\n              width: 100 + \"%\",\r\n              height: 100 + \"%\",\r\n            }}\r\n          >\r\n            {myNotifications.notifications.length !== 0 && (\r\n              <Button\r\n                variant=\"warning\"\r\n                onClick={() => myNotifications.ClearNotifications()}\r\n              >\r\n                {locale().clear_all}\r\n              </Button>\r\n            )}\r\n\r\n            <ToastContainer>\r\n              {myNotifications.notifications.map((notification, index) => {\r\n                let type;\r\n                if (notification.name === \"info\") type = \"success\";\r\n                if (notification.name === \"error\") type = \"danger\";\r\n                return (\r\n                  <Toast\r\n                    className=\"d-inline-block m-1\"\r\n                    key={\"notification_\" + index}\r\n                    bg={type}\r\n                    animation={true}\r\n                    onClose={() => {\r\n                      myNotifications.RemoveNotification(index);\r\n                    }}\r\n                  >\r\n                    <Toast.Header>\r\n                      <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded me-2\"\r\n                        alt=\"\"\r\n                      />\r\n                      <strong className=\"me-auto\">{notification.name}</strong>\r\n                      <small>{notification.time.slice(0, 15)}</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>{notification.msg}</Toast.Body>\r\n                  </Toast>\r\n                );\r\n              })}\r\n            </ToastContainer>\r\n          </div>\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport NotificationBar from \"../notificationBar/notificationBar\";\r\nimport \"./horizontalNavigationBar.scss\";\r\n\r\nimport locale from \"../../common/locale\";\r\nimport { refreshToken } from \"../../services/http_operations\";\r\n\r\nimport fontawesome from \"@fortawesome/fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faBars,\r\n  faUserTie,\r\n  faUserGraduate,\r\n  faUserCog,\r\n  faUserTag,\r\n  faUser,\r\n  faCheck,\r\n} from \"@fortawesome/fontawesome-free-solid\";\r\n\r\nimport { pages, languages, website_name } from \"../../config\";\r\nimport { LanguageSelector } from \"../languageSelector/languageSelector\";\r\nimport { canDo } from \"../../services/userRolesManagement\";\r\nimport { Capitalize } from \"../../services/misc_functions\";\r\nfontawesome.library.add(\r\n  faTimes,\r\n  faBars,\r\n  faUserTie,\r\n  faUserGraduate,\r\n  faUserCog,\r\n  faUserTag,\r\n  faUser,\r\n  faCheck\r\n);\r\n\r\nlet intervalRef = React.createRef();\r\nlet loginTime = React.createRef();\r\n\r\nlet remainingSeconds = React.createRef();\r\nlet duration = React.createRef();\r\n\r\nlet role = React.createRef();\r\nlet username = React.createRef();\r\nlet tenant = React.createRef();\r\n\r\nexport default function HorizontalNavigationBar() {\r\n  const [isOpened, setIsOpened] = useState(false);\r\n\r\n  const usr = localStorage.getItem(\"username\");\r\n  const rl = localStorage.getItem(\"user-role\");\r\n  const tn = localStorage.getItem(\"user-tenant\");\r\n\r\n  username.current = usr !== null ? usr : \"\";\r\n  role.current = rl !== null ? rl : \"\";\r\n  tenant.current = tn !== null && tn !== \"\" ? tn : \"-\";\r\n\r\n  //useeffect on change time\r\n  useEffect(() => {\r\n    //convert duration time in string format to milliseconds\r\n    function DurationToMilliSeconds() {\r\n      let exp = localStorage.getItem(\"token-expiration-time\");\r\n\r\n      if (exp === null) return 300;\r\n      if (exp.endsWith(\"h\")) {\r\n        return parseInt(exp.slice(0, -1)) * 60 * 60 * 1000;\r\n      } else if (exp.endsWith(\"m\")) {\r\n        return parseInt(exp.slice(0, -1)) * 60 * 1000;\r\n      } else if (exp.endsWith(\"s\")) {\r\n        return parseInt(exp.slice(0, -1)) * 1000;\r\n      }\r\n      //default case, right now the same as seconds\r\n      else {\r\n        return parseInt(exp.slice(0, -1)) * 1000;\r\n      }\r\n    }\r\n\r\n    //calculate remaining seconds and refresh token if required\r\n    function CalcEnding() {\r\n      let t0;\r\n      let remainingSec;\r\n      //if remaining time is already calculated, just decrement that number by 1\r\n      if (remainingSeconds.current !== null) {\r\n        remainingSec = remainingSeconds.current - 1;\r\n      }\r\n      //otherwise, calculate remaining seconds\r\n      else {\r\n        //check if login time is already defined, if it's null get it from localstorage or current time (refresh case)\r\n        if (loginTime.current === null) {\r\n          const retryLoginTime = localStorage.getItem(\"login-time\");\r\n          //if localstorage containst login time, use it and store it into state\r\n          if (retryLoginTime !== null) {\r\n            loginTime.current = retryLoginTime;\r\n            t0 = parseInt(retryLoginTime, 10);\r\n          }\r\n          //otherwise get it from current time and store it into state\r\n          else {\r\n            t0 = Date.now();\r\n            loginTime.current = t0;\r\n          }\r\n        }\r\n        //use logintime stored into state\r\n        else {\r\n          t0 = parseInt(loginTime.current, 10);\r\n        }\r\n        if (duration.current === null)\r\n          duration.current = DurationToMilliSeconds();\r\n        const endTime = t0 + duration.current;\r\n\r\n        remainingSec = (endTime - Date.now()) / 1000;\r\n      }\r\n\r\n      if (remainingSec < 60) {\r\n        clearInterval(intervalRef.current);\r\n        refreshToken().then(() => {\r\n          remainingSeconds.current = null;\r\n          loginTime.current = null;\r\n\r\n          intervalRef.current = setInterval(() => {\r\n            CalcEnding();\r\n          }, 1000);\r\n          return;\r\n        });\r\n      }\r\n      if (remainingSec <= 0) {\r\n        localStorage.clear();\r\n        //session expired, automatically logout\r\n        window.location.replace(\"/\");\r\n        return;\r\n      }\r\n\r\n      //const mins = Math.floor(remainingSec / 60);\r\n      //const secs = Math.floor(remainingSec % 60);\r\n\r\n      remainingSeconds.current = parseInt(remainingSec, 10);\r\n    }\r\n\r\n    intervalRef.current = setInterval(() => {\r\n      CalcEnding();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  function logOut() {\r\n    localStorage.clear();\r\n    document.location.replace(\"/\");\r\n  }\r\n\r\n  function renderIconRole() {\r\n    if (role.current === \"admin\") {\r\n      return (\r\n        <i className=\"fa fa-user-tie\" aria-hidden=\"true\" title=\"Admin\"></i>\r\n      );\r\n    } else if (role.current === \"provider\") {\r\n      return (\r\n        <i\r\n          className=\"fa fa-user-graduate\"\r\n          aria-hidden=\"true\"\r\n          title=\"Provider\"\r\n        ></i>\r\n      );\r\n    } else if (role.current === \"analyst\") {\r\n      return (\r\n        <i className=\"fa fa-user-cog\" aria-hidden=\"true\" title=\"Analyst\"></i>\r\n      );\r\n    } else if (role.current === \"supplier\") {\r\n      return (\r\n        <i className=\"fa fa-user-tag\" aria-hidden=\"true\" title=\"Supplier\"></i>\r\n      );\r\n    } else {\r\n      return (\r\n        <i className=\"fa fa-user\" aria-hidden=\"true\" aria-label=\"User\"></i>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className=\"horizontal-nav\">\r\n      <div className=\"horizontal-nav-links\">\r\n        <div className=\"data-wrapper\">\r\n          <Container fluid>\r\n            <Row style={{ padding: 0 }}>\r\n              <Col>\r\n                <NavLink to=\"/home\" className=\"nav-wrap\">\r\n                  {website_name}\r\n                </NavLink>\r\n              </Col>\r\n              <Col>\r\n                <NavLink to={`/viewProfile/`} key={`viewProfile`}>\r\n                  {locale().welcome + \" \"}\r\n                  <b>{username.current}</b>\r\n                </NavLink>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"horizontal-nav-text\">\r\n                  {locale().role + \" \"}\r\n                  {renderIconRole()}\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"horizontal-nav-text\">\r\n                  {locale().tenant + \" \"}\r\n                  <b>{tenant.current}</b>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <Button variant=\"outline-danger\" onClick={() => logOut()}>\r\n                  {locale().logout}\r\n                </Button>\r\n              </Col>\r\n\r\n              {languages.length > 1 && (\r\n                <Col>\r\n                  <LanguageSelector />\r\n                </Col>\r\n              )}\r\n              <Col>\r\n                <NotificationBar />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ padding: 0 }}>\r\n              <hr />\r\n              <div\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  alignSelf: \"flex-start\",\r\n                }}\r\n              >\r\n                {locale().resources}\r\n              </div>\r\n            </Row>\r\n            <Row style={{ padding: 0 }}>\r\n              {React.Children.toArray(\r\n                Object.keys(pages).map((k) => {\r\n                  //check if user can access to the page\r\n                  if (!canDo(role.current, k, \"read\")) {\r\n                    return \"\";\r\n                  }\r\n                  return (\r\n                    <Col>\r\n                      <NavLink\r\n                        to={`/` + k}\r\n                        className={(navData) =>\r\n                          navData.isActive ? \"active\" : \"\"\r\n                        }\r\n                        //activeClassName=\"active\"\r\n                        key={k}\r\n                        onClick={() => setIsOpened(false)}\r\n                      >\r\n                        {Capitalize(k)}\r\n                      </NavLink>\r\n                    </Col>\r\n                  );\r\n                })\r\n              )}\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import { GetToken, api_url } from \"./http_operations\";\r\nimport { instance } from \"./http_operations\";\r\n\r\nimport { saveAs } from \"file-saver\";\r\nexport let logsManager = {\r\n  PushLog: (obj) => {},\r\n  RemoveLog: (id) => {},\r\n  ClearLogs: () => {},\r\n};\r\n\r\n//experiment name separator\r\nconst experimentFileSeparator = \"#\";\r\n\r\n//upload file containing history steps\r\nexport async function postHistoryFile(file, ovd, csvSep, arrSep, floatSep) {\r\n  const filename = file.name;\r\n  const expName = filename.split(experimentFileSeparator)[0];\r\n\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n  //data.append(\"file\", createReadStream(file));\r\n\r\n  let url =\r\n    ovd === false || ovd === undefined\r\n      ? api_url +\r\n        \"/experiments/\" +\r\n        expName +\r\n        \"/file?sep=\" +\r\n        csvSep +\r\n        \"&sepArray=\" +\r\n        arrSep +\r\n        \"&sepFloat=\" +\r\n        floatSep\r\n      : api_url +\r\n        \"/experiments/\" +\r\n        expName +\r\n        \"/file/?override=true&sep=\" +\r\n        csvSep +\r\n        \"&sepArray=\" +\r\n        arrSep +\r\n        \"&sepFloat=\" +\r\n        floatSep;\r\n\r\n  const tempH = {\r\n    \"Content-Type\": \"multipart/form-data\",\r\n    \"Cache-Control\": \"no-cache\",\r\n    Authorization: GetToken(),\r\n  };\r\n  const options = {\r\n    headers: tempH,\r\n  };\r\n\r\n  let response;\r\n  try {\r\n    response = await instance.put(url, data, options);\r\n    logsManager.PushLog({\r\n      type: \"info\",\r\n      msg:\r\n        filename +\r\n        \", successfully posted: Added: [ \" +\r\n        response.data.report.success.join(\", \") +\r\n        \" ] Ignored: [\" +\r\n        response.data.report.ignored.join(\", \") +\r\n        \" ] Overridden: [\" +\r\n        response.data.report.overridden.join(\", \") +\r\n        \" ]\\n\",\r\n    });\r\n  } catch (error) {\r\n    console.log(\"error in response\");\r\n    logsManager.PushLog({\r\n      type: \"error\",\r\n      msg:\r\n        filename +\r\n        \" was not posted: \" +\r\n        error.response.data.message +\r\n        \" \" +\r\n        (error.response.data.details !== undefined\r\n          ? error.response.data.details + \"\\n\"\r\n          : \"\"),\r\n    });\r\n  }\r\n}\r\n\r\n//upload a single step\r\nexport async function postHistoryStep(expName, body, ovd) {\r\n  let url =\r\n    ovd === false || ovd === undefined\r\n      ? api_url + \"/experiments/\" + expName\r\n      : api_url + \"/experiments/\" + expName + \"?override=true\";\r\n\r\n  const step = body.history.add[0].step;\r\n  const options = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"no-cache\",\r\n      Authorization: GetToken(),\r\n    },\r\n  };\r\n  let response;\r\n  try {\r\n    response = await instance.put(url, JSON.stringify(body), options);\r\n    logsManager.PushLog({\r\n      type: \"info\",\r\n      msg:\r\n        \"Step \" +\r\n        step +\r\n        \", successfully posted: Added: [ \" +\r\n        response.data.report.success.join(\", \") +\r\n        \" ] Ignored: [\" +\r\n        response.data.report.ignored.join(\", \") +\r\n        \" ] Overridden: [\" +\r\n        response.data.report.overridden.join(\", \") +\r\n        \" ]\\n\",\r\n    });\r\n  } catch (error) {\r\n    console.log(\"error in response\");\r\n    logsManager.PushLog({\r\n      type: \"error\",\r\n      msg:\r\n        \"Step \" +\r\n        step +\r\n        \" was not posted: \" +\r\n        error.response.data.message +\r\n        \" \" +\r\n        (error.response.data.details !== undefined\r\n          ? error.response.data.details + \"\\n\"\r\n          : \"\"),\r\n    });\r\n  }\r\n}\r\n\r\nexport async function downloadHistory(\r\n  experiment_id,\r\n  csvSep,\r\n  arrSep,\r\n  floatSep,\r\n  compress = undefined\r\n) {\r\n  const url =\r\n    \"experiments/\" +\r\n    experiment_id +\r\n    \"/history?sep=\" +\r\n    csvSep +\r\n    \"&sepArray=\" +\r\n    arrSep +\r\n    \"&sepFloat=\" +\r\n    floatSep;\r\n  const fileName = experiment_id + \"#history.csv\";\r\n\r\n  try {\r\n    const data = await getHistoryCSV(url);\r\n    const blob = new Blob([data]);\r\n    let file = null;\r\n    if (compress === undefined || compress === false) {\r\n      saveAs(blob, fileName);\r\n    } else {\r\n      file = new File([blob], fileName);\r\n    }\r\n\r\n    logsManager.PushLog({\r\n      type: \"info\",\r\n      msg: fileName + \" successfully downloaded.\\n\",\r\n    });\r\n    return file;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function getHistoryCSV(resource_path) {\r\n  const url = api_url + \"/\" + resource_path;\r\n  const config = {\r\n    method: \"get\",\r\n    url: url,\r\n    headers: {\r\n      Authorization: GetToken(),\r\n    },\r\n  };\r\n\r\n  let response;\r\n  try {\r\n    response = await instance(config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"error in response\");\r\n    console.log(error);\r\n    logsManager.PushLog({\r\n      type: \"error\",\r\n      msg:\r\n        error.response.data.message +\r\n        \" \" +\r\n        (error.response.data.details !== undefined\r\n          ? error.response.data.details\r\n          : \"\"),\r\n    });\r\n  }\r\n}\r\n\r\nexport async function deleteHistorySteps(selected, toDelete) {\r\n  const url = api_url + \"/experiments/\" + selected;\r\n\r\n  const config = {\r\n    method: \"put\",\r\n    url: url,\r\n    headers: {\r\n      Authorization: GetToken(),\r\n    },\r\n    data: { history: { remove: toDelete } },\r\n  };\r\n\r\n  let response;\r\n  try {\r\n    response = await instance(config);\r\n    logsManager.PushLog({\r\n      type: \"info\",\r\n      msg: \"Successfully deleted steps with id: \" + toDelete.join(\" - \") + \"\\n\",\r\n    });\r\n  } catch (error) {\r\n    console.log(\"error in response\");\r\n    console.log(error);\r\n    logsManager.PushLog({\r\n      type: \"error\",\r\n      msg:\r\n        error.response.data.message +\r\n        \" \" +\r\n        (error.response.data.details !== undefined\r\n          ? error.response.data.details + \"\\n\"\r\n          : \"\\n\"),\r\n    });\r\n  }\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport locale from \"../../common/locale\";\r\nimport { nonDefaultLength, Capitalize } from \"../../services/misc_functions\";\r\nimport { Button, Form, Accordion, Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport AppContext from \"../../context\";\r\nimport { fetchedPageTypes, fetchedPageData, guidelines } from \"../../config\";\r\n\r\n/////////form width constant variables\r\n//row name\r\nconst rowNameWidth = 2;\r\n//single section\r\nconst boolWidth = 1;\r\nconst numberWidth = 4;\r\nconst stringWidth = 4;\r\nconst selectWidth = 4;\r\n\r\n//arrays section\r\nconst boolArrayWidth = 1;\r\nconst numberArrayWidth = 2;\r\nconst stringArrayWidth = 2;\r\nconst selectArrayWidth = 2;\r\nconst deleteArrayWidth = 1;\r\n\r\nexport const FormManager = (props) => {\r\n  //return if something is undefined\r\n  const context = useContext(AppContext);\r\n  let myFetched;\r\n  if (context !== undefined) myFetched = context.fetched;\r\n  else myFetched = {};\r\n\r\n  if (\r\n    props.values === undefined ||\r\n    props.resource === undefined ||\r\n    props.disabledFields === undefined ||\r\n    props.functionalFields === undefined ||\r\n    props.submitFunction === undefined ||\r\n    props.handleChangesCallback === undefined ||\r\n    props.arrayDeleteCallback === undefined\r\n  )\r\n    return \"Loading\";\r\n  /*\r\n  console.log({\r\n    values: props.values,\r\n    resource: props.resource,\r\n    disabledFields: props.disabledFields,\r\n    functionalFields: props.functionalFields,\r\n    submitFunction: props.submitFunction,\r\n    backFunction: props.backFunction,\r\n    handleChangesCallback: props.handleChangesCallback,\r\n    arrayDeleteCallback: props.arrayDeleteCallback,\r\n    fetchedData: myFetched.data,\r\n    fetchedTypes: fetchedPageTypes,\r\n  });\r\n*/\r\n  //Numeric for row component\r\n  const NumericFormRow = (key) => {\r\n    return (\r\n      <Row\r\n        key={key}\r\n        style={{\r\n          borderBottomStyle: \"solid\",\r\n          borderBottomWidth: 1 + \"px\",\r\n          marginBottom: 5 + \"px\",\r\n        }}\r\n      >\r\n        <Col\r\n          sm={rowNameWidth}\r\n          style={{\r\n            borderRightStyle: \"dotted\",\r\n            borderRightWidth: 1 + \"px\",\r\n          }}\r\n        >\r\n          <b>{key}</b>\r\n        </Col>\r\n        <Col sm={numberWidth}>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Control\r\n              type=\"number\"\r\n              id={key}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                props.handleChangesCallback(parseInt(e.target.value, 10), [\r\n                  key,\r\n                ]);\r\n              }}\r\n              value={isNaN(props.values[key]) ? \"\" : props.values[key]}\r\n              disabled={\r\n                props.disabledFields[key] !== undefined\r\n                  ? props.disabledFields[key]\r\n                  : false\r\n              }\r\n              placeholder={locale().enter + \" \" + key}\r\n            />\r\n            {guidelines[props.resource] !== undefined &&\r\n              guidelines[props.resource][key] !== undefined && (\r\n                <Form.Text className=\"text-muted\">\r\n                  {guidelines[props.resource][key]}\r\n                </Form.Text>\r\n              )}\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n  //string form row component\r\n  const StringFormRow = (key) => {\r\n    return (\r\n      <Row\r\n        key={key}\r\n        style={{\r\n          borderBottomStyle: \"solid\",\r\n          borderBottomWidth: 1 + \"px\",\r\n          marginBottom: 5 + \"px\",\r\n        }}\r\n      >\r\n        <Col\r\n          sm={rowNameWidth}\r\n          style={{\r\n            borderRightStyle: \"dotted\",\r\n            borderRightWidth: 1 + \"px\",\r\n          }}\r\n        >\r\n          <b>{key}</b>\r\n        </Col>\r\n\r\n        <Col sm={stringWidth}>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Control\r\n              type={key === \"password\" ? \"password\" : \"text\"}\r\n              id={key}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                props.handleChangesCallback(e.target.value, [key]);\r\n              }}\r\n              disabled={\r\n                props.disabledFields[key] !== undefined\r\n                  ? props.disabledFields[key]\r\n                  : false\r\n              }\r\n              value={props.values[key]}\r\n              placeholder={locale().enter + \" \" + key}\r\n            />\r\n            {guidelines[props.resource] !== undefined &&\r\n              guidelines[props.resource][key] !== undefined && (\r\n                <Form.Text className=\"text-muted\">\r\n                  {guidelines[props.resource][key]}\r\n                </Form.Text>\r\n              )}\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  //boolean form row component\r\n  const BooleanFormRow = (key) => {\r\n    return (\r\n      <Row\r\n        key={key}\r\n        style={{\r\n          borderBottomStyle: \"solid\",\r\n          borderBottomWidth: 1 + \"px\",\r\n          marginBottom: 5 + \"px\",\r\n        }}\r\n      >\r\n        <Col\r\n          sm={rowNameWidth}\r\n          style={{\r\n            borderRightStyle: \"dotted\",\r\n            borderRightWidth: 1 + \"px\",\r\n          }}\r\n        >\r\n          <b>{key}</b>\r\n        </Col>\r\n\r\n        <Col sm={boolWidth}>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Check\r\n              id={key}\r\n              type=\"checkbox\"\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                props.handleChangesCallback(e.target.checked, [key]);\r\n              }}\r\n              disabled={\r\n                props.disabledFields[key] !== undefined\r\n                  ? props.disabledFields[key]\r\n                  : false\r\n              }\r\n              checked={props.values[key]}\r\n            />\r\n            {guidelines[props.resource] !== undefined &&\r\n              guidelines[props.resource][key] !== undefined && (\r\n                <Form.Text className=\"text-muted\">\r\n                  {guidelines[props.resource][key]}\r\n                </Form.Text>\r\n              )}\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n  //fetched data for row component\r\n  const FetchedFormRow = (key, alias) => {\r\n    let options;\r\n    if (\r\n      myFetched !== {} &&\r\n      (myFetched.data[key] !== undefined || myFetched.data[alias] !== undefined)\r\n    ) {\r\n      options = myFetched.data[alias !== undefined ? alias : key];\r\n    }\r\n    return (\r\n      <Row\r\n        key={key}\r\n        style={{\r\n          borderBottomStyle: \"solid\",\r\n          borderBottomWidth: 1 + \"px\",\r\n          marginBottom: 5 + \"px\",\r\n        }}\r\n      >\r\n        <Col\r\n          sm={rowNameWidth}\r\n          style={{\r\n            borderRightStyle: \"dotted\",\r\n            borderRightWidth: 1 + \"px\",\r\n          }}\r\n        >\r\n          <b>{key}</b>\r\n        </Col>\r\n\r\n        <Col sm={selectWidth}>\r\n          <Form.Group className=\"mb-3\">\r\n            <Autocomplete\r\n              id={key}\r\n              onChange={(e, newValue) => {\r\n                e.preventDefault();\r\n                props.handleChangesCallback(newValue, [key]);\r\n              }}\r\n              disabled={\r\n                props.disabledFields[key] !== undefined\r\n                  ? props.disabledFields[key]\r\n                  : false\r\n              }\r\n              value={props.values[key] === \"\" ? null : props.values[key]}\r\n              options={options}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label={locale().enter + \" \" + key} />\r\n              )}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n  //select form row component\r\n  const SelectFormRow = (key, val) => {\r\n    return (\r\n      <Row\r\n        style={{\r\n          borderBottomStyle: \"solid\",\r\n          borderBottomWidth: 1 + \"px\",\r\n          marginBottom: 5 + \"px\",\r\n        }}\r\n        key={key}\r\n      >\r\n        <Col\r\n          sm={rowNameWidth}\r\n          style={{\r\n            borderRightStyle: \"dotted\",\r\n            borderRightWidth: 1 + \"px\",\r\n          }}\r\n        >\r\n          <b>{key}</b>\r\n        </Col>\r\n        <Col sm={selectWidth}>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Select\r\n              aria-label=\"Default select\"\r\n              value={props.values[key]}\r\n              id={key}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                props.handleChangesCallback(e.target.value, [key]);\r\n              }}\r\n              disabled={\r\n                props.disabledFields[key] !== undefined\r\n                  ? props.disabledFields[key]\r\n                  : false\r\n              }\r\n            >\r\n              <option>{locale().select + \" \" + key}</option>\r\n              {React.Children.toArray(\r\n                Object.entries(val).map(([k, v]) => {\r\n                  return <option value={v}>{v}</option>;\r\n                })\r\n              )}\r\n            </Form.Select>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  //object form row comopnent\r\n  const ObjectFormRow = (key) => {\r\n    return (\r\n      <>\r\n        <Row\r\n          style={{\r\n            borderBottomStyle: \"dashed\",\r\n            borderBottomWidth: 1 + \"px\",\r\n            marginBottom: 5 + \"px\",\r\n          }}\r\n        >\r\n          {React.Children.toArray(\r\n            Object.entries(props.values[key]).map((e) => {\r\n              return (\r\n                <Col\r\n                  sm={\r\n                    typeof e[1] === \"boolean\"\r\n                      ? boolArrayWidth\r\n                      : typeof e[1] === \"number\"\r\n                      ? numberArrayWidth\r\n                      : typeof e[1] === \"string\"\r\n                      ? stringArrayWidth\r\n                      : selectArrayWidth\r\n                  }\r\n                >\r\n                  <b>\r\n                    <i>{Capitalize(key) + \" \" + e[0]}</i>\r\n                  </b>\r\n                </Col>\r\n              );\r\n            })\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          {React.Children.toArray(\r\n            Object.entries(props.values[key]).map(([k, value]) => {\r\n              const disabled =\r\n                props.disabledFields[key] !== undefined\r\n                  ? props.disabledFields[key][k] !== undefined\r\n                    ? props.disabledFields[key][k]\r\n                    : props.disabledFields[key] === true\r\n                    ? true\r\n                    : false\r\n                  : false;\r\n              //check if it's number\r\n              if (typeof value === \"number\") {\r\n                return (\r\n                  <Col sm={numberArrayWidth}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Control\r\n                        type=\"number\"\r\n                        onChange={(e) => {\r\n                          e.preventDefault();\r\n                          props.handleChangesCallback(\r\n                            parseInt(e.target.value, 10),\r\n                            [key, k]\r\n                          );\r\n                        }}\r\n                        disabled={disabled}\r\n                        value={\r\n                          isNaN(props.values[key][k])\r\n                            ? \"\"\r\n                            : props.values[key][k]\r\n                        }\r\n                        placeholder={locale().enter + \" \" + k}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                );\r\n              }\r\n              //check if it's boolean\r\n              if (typeof value === \"boolean\") {\r\n                return (\r\n                  <Col sm={boolArrayWidth}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        onChange={(e) => {\r\n                          e.preventDefault();\r\n                          props.handleChangesCallback(e.target.checked, [\r\n                            key,\r\n                            k,\r\n                          ]);\r\n                        }}\r\n                        disabled={disabled}\r\n                        checked={props.values[key][k]}\r\n                        label={k}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                );\r\n              }\r\n              //check if it's an enum\r\n              if (\r\n                fetchedPageTypes[props.resource] !== undefined &&\r\n                fetchedPageTypes[props.resource][key] !== undefined &&\r\n                fetchedPageTypes[props.resource][key][k] !== undefined &&\r\n                myFetched.types !== undefined &&\r\n                myFetched.types[fetchedPageTypes[props.resource][key][k]] !==\r\n                  undefined\r\n              ) {\r\n                return (\r\n                  <Col sm={selectArrayWidth}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Select\r\n                        aria-label=\"Default select\"\r\n                        onChange={(e) => {\r\n                          e.preventDefault();\r\n                          props.handleChangesCallback(e.target.value, [key, k]);\r\n                        }}\r\n                        value={props.values[key][k]}\r\n                        disabled={disabled}\r\n                      >\r\n                        <option>{locale().select + \" \" + k}</option>\r\n                        {React.Children.toArray(\r\n                          Object.entries(\r\n                            myFetched.types[\r\n                              fetchedPageTypes[props.resource][key][k]\r\n                            ]\r\n                          ).map(([k, v]) => {\r\n                            return <option value={k}>{v}</option>;\r\n                          })\r\n                        )}\r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                  </Col>\r\n                );\r\n              }\r\n              //input field is a string\r\n              if (typeof value === \"string\") {\r\n                return (\r\n                  <Col sm={stringArrayWidth}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        disabled={disabled}\r\n                        onChange={(e) => {\r\n                          e.preventDefault();\r\n                          props.handleChangesCallback(e.target.value, [key, k]);\r\n                        }}\r\n                        value={props.values[key][k]}\r\n                        placeholder={locale().enter + \" \" + k}\r\n                      />\r\n                      {key === \"metadata\" &&\r\n                        k === \"name\" &&\r\n                        props.values[key][k] === \"Country\" && (\r\n                          <Form.Text className=\"text-muted\">\r\n                            Please, enter 2-letter country code (i.e., It, De,\r\n                            Fr, etc...).\r\n                          </Form.Text>\r\n                        )}\r\n                    </Form.Group>\r\n                  </Col>\r\n                );\r\n              }\r\n              //the object contains an array\r\n              if (Array.isArray(value)) {\r\n                if (value.length === 0) return k + \" is empty\";\r\n\r\n                //only show range field when enum type is selected, otherwise skip it\r\n                if (k === \"range\" && props.values[key][\"type\"] !== \"enum\")\r\n                  return \"\";\r\n                return (\r\n                  <Accordion\r\n                    defaultActiveKey=\"0\"\r\n                    style={{ paddingBottom: 10 + \"px\", width: \"auto\" }}\r\n                  >\r\n                    <Accordion.Item eventKey=\"0\">\r\n                      <Accordion.Header>\r\n                        <b>{k}</b> : {nonDefaultLength(value)} items\r\n                      </Accordion.Header>\r\n                      <Accordion.Body>\r\n                        <Container fluid>\r\n                          {React.Children.toArray(\r\n                            value.map((e, idx) => {\r\n                              if (e.constructor === Object) {\r\n                                const entr = Object.entries(e);\r\n                                return (\r\n                                  <Row>\r\n                                    <Col\r\n                                      sm={deleteArrayWidth}\r\n                                      style={{\r\n                                        borderRightStyle: \"dotted\",\r\n                                        borderRightWidth: 1 + \"px\",\r\n                                      }}\r\n                                    ></Col>\r\n                                    <Col sm={deleteArrayWidth}>\r\n                                      <Button\r\n                                        disabled={\r\n                                          props.disabledFields[key] !==\r\n                                          undefined\r\n                                            ? props.disabledFields[key]\r\n                                            : false\r\n                                        }\r\n                                        variant=\"link\"\r\n                                        size=\"sm\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          props.arrayDeleteCallback([\r\n                                            key,\r\n                                            k,\r\n                                            idx,\r\n                                          ]);\r\n                                        }}\r\n                                      >\r\n                                        <i\r\n                                          className=\"fa fa-times\"\r\n                                          aria-hidden=\"true\"\r\n                                          title=\"Remove element\"\r\n                                          style={{\r\n                                            width: 30 + \"px\",\r\n                                            height: 30 + \"px\",\r\n                                            marginRight: 10 + \"px\",\r\n                                            opacity: 0.85,\r\n                                          }}\r\n                                        ></i>\r\n                                      </Button>\r\n                                    </Col>\r\n                                    {React.Children.toArray(\r\n                                      entr.map(([_k, _v]) => {\r\n                                        return (\r\n                                          <Col>\r\n                                            <Form.Group className=\"mb-3\">\r\n                                              <Form.Control\r\n                                                type=\"text\"\r\n                                                disabled={disabled}\r\n                                                onChange={(e) => {\r\n                                                  e.preventDefault();\r\n                                                  props.handleChangesCallback(\r\n                                                    e.target.value,\r\n                                                    [key, k, idx, _k]\r\n                                                  );\r\n                                                }}\r\n                                                value={_v}\r\n                                                placeholder={\r\n                                                  locale().enter + \" \" + _k\r\n                                                }\r\n                                              />\r\n                                            </Form.Group>\r\n                                          </Col>\r\n                                        );\r\n                                      })\r\n                                    )}\r\n                                  </Row>\r\n                                );\r\n                              } else if (typeof e === \"number\") {\r\n                                return (\r\n                                  <Row>\r\n                                    <Col>\r\n                                      <Button\r\n                                        disabled={disabled}\r\n                                        variant=\"link\"\r\n                                        size=\"sm\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n\r\n                                          props.arrayDeleteCallback([\r\n                                            key,\r\n                                            k,\r\n                                            idx,\r\n                                          ]);\r\n                                        }}\r\n                                      >\r\n                                        <i\r\n                                          className=\"fa fa-times\"\r\n                                          aria-hidden=\"true\"\r\n                                          title=\"Remove element\"\r\n                                          style={{\r\n                                            width: 30 + \"px\",\r\n                                            height: 30 + \"px\",\r\n                                            marginRight: 10 + \"px\",\r\n                                            opacity: 0.85,\r\n                                          }}\r\n                                        ></i>\r\n                                      </Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                      <Form.Control\r\n                                        type=\"number\"\r\n                                        disabled={disabled}\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n                                          props.handleChangesCallback(\r\n                                            parseInt(e.target.value, 10),\r\n                                            [key, k, idx]\r\n                                          );\r\n                                        }}\r\n                                        value={isNaN(e) ? \"\" : e} //{props.values[k][index]}\r\n                                        placeholder={locale().enter + \" \" + k}\r\n                                      />\r\n                                    </Col>\r\n                                  </Row>\r\n                                );\r\n                              } else if (typeof e === \"string\") {\r\n                                return (\r\n                                  <Row>\r\n                                    <Col>\r\n                                      <Button\r\n                                        disabled={disabled}\r\n                                        variant=\"link\"\r\n                                        size=\"sm\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n\r\n                                          props.arrayDeleteCallback([\r\n                                            key,\r\n                                            k,\r\n                                            idx,\r\n                                          ]);\r\n                                        }}\r\n                                      >\r\n                                        <i\r\n                                          className=\"fa fa-times\"\r\n                                          aria-hidden=\"true\"\r\n                                          title=\"Remove element\"\r\n                                          style={{\r\n                                            width: 30 + \"px\",\r\n                                            height: 30 + \"px\",\r\n                                            marginRight: 10 + \"px\",\r\n                                            opacity: 0.85,\r\n                                          }}\r\n                                        ></i>\r\n                                      </Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                      <Form.Control\r\n                                        type=\"text\"\r\n                                        disabled={\r\n                                          props.disabledFields[k] !== undefined\r\n                                            ? props.disabledFields[k]\r\n                                            : false\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n                                          props.handleChangesCallback(\r\n                                            e.target.value,\r\n                                            [key, k, idx]\r\n                                          );\r\n                                        }}\r\n                                        value={e}\r\n                                        placeholder={locale().enter + \" \" + k}\r\n                                      />\r\n                                    </Col>\r\n                                  </Row>\r\n                                );\r\n                              }\r\n                              return \"Unknown data type\";\r\n                            })\r\n                          )}\r\n                        </Container>\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  </Accordion>\r\n                );\r\n              }\r\n              return \"Unknown data type\";\r\n            })\r\n          )}\r\n        </Row>\r\n      </>\r\n    );\r\n  };\r\n\r\n  //numbers array form row component\r\n  const ArrayNumberFormRow = (k) => {\r\n    return (\r\n      <Row\r\n        style={{\r\n          borderBottomStyle: \"solid\",\r\n          borderBottomWidth: 1 + \"px\",\r\n          marginBottom: 5 + \"px\",\r\n        }}\r\n        key={k}\r\n      >\r\n        <Col\r\n          sm={rowNameWidth}\r\n          style={{\r\n            borderRightStyle: \"dotted\",\r\n            borderRightWidth: 1 + \"px\",\r\n          }}\r\n        >\r\n          <b>{k}</b>\r\n        </Col>\r\n        <Col sm={numberArrayWidth}>\r\n          {React.Children.toArray(\r\n            props.values[k].map((value, index) => {\r\n              return (\r\n                <Row>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      disabled={\r\n                        props.disabledFields[k] !== undefined\r\n                          ? props.disabledFields[k]\r\n                          : false\r\n                      }\r\n                      onChange={(e) => {\r\n                        e.preventDefault();\r\n                        props.handleChangesCallback(\r\n                          parseInt(e.target.value, 10),\r\n                          [k, index]\r\n                        );\r\n                      }}\r\n                      value={\r\n                        isNaN(props.values[k][index])\r\n                          ? \"\"\r\n                          : props.values[k][index]\r\n                      }\r\n                      placeholder={locale().enter + \" \" + k + \"[\" + index + \"]\"}\r\n                    />\r\n                  </Form.Group>\r\n                </Row>\r\n              );\r\n            })\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n  //strings array form row component\r\n  const ArrayStringFormRow = (key) => {\r\n    let options;\r\n    if (myFetched !== {} && myFetched.data[key] !== undefined) {\r\n      options = myFetched.data[key];\r\n    }\r\n\r\n    return (\r\n      <Row\r\n        style={{\r\n          borderBottomStyle: \"solid\",\r\n          borderBottomWidth: 1 + \"px\",\r\n          marginBottom: 5 + \"px\",\r\n        }}\r\n        key={key}\r\n      >\r\n        <Col\r\n          sm={rowNameWidth}\r\n          style={{\r\n            borderRightStyle: \"dotted\",\r\n            borderRightWidth: 1 + \"px\",\r\n          }}\r\n        >\r\n          <b>{key}</b>\r\n        </Col>\r\n        <Col>\r\n          {React.Children.toArray(\r\n            props.values[key].map((value, index) => {\r\n              return (\r\n                <Row>\r\n                  <Col sm={deleteArrayWidth}>\r\n                    <Button\r\n                      disabled={\r\n                        props.disabledFields[key] !== undefined\r\n                          ? props.disabledFields[key]\r\n                          : false\r\n                      }\r\n                      variant=\"link\"\r\n                      size=\"sm\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        props.arrayDeleteCallback([key, index]);\r\n                      }}\r\n                    >\r\n                      <i\r\n                        className=\"fa fa-times\"\r\n                        aria-hidden=\"true\"\r\n                        title=\"Remove element\"\r\n                        style={{\r\n                          width: 30 + \"px\",\r\n                          height: 30 + \"px\",\r\n                          marginRight: 10 + \"px\",\r\n                          opacity: 0.85,\r\n                        }}\r\n                      ></i>\r\n                    </Button>\r\n                  </Col>\r\n                  <Col sm={Math.max(stringArrayWidth, selectArrayWidth)}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      {myFetched.data[key] !== undefined ? (\r\n                        <Autocomplete\r\n                          disabled={\r\n                            props.disabledFields[key] !== undefined\r\n                              ? props.disabledFields[key]\r\n                              : false\r\n                          }\r\n                          id={key}\r\n                          onChange={(e, newValue) => {\r\n                            e.preventDefault();\r\n                            props.handleChangesCallback(newValue, [key, index]);\r\n                          }}\r\n                          value={\r\n                            props.values[key][index] === \"\"\r\n                              ? null\r\n                              : props.values[key][index]\r\n                          }\r\n                          options={options}\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label={\r\n                                locale().enter + \" \" + key + \"[\" + index + \"]\"\r\n                              }\r\n                            />\r\n                          )}\r\n                        />\r\n                      ) : (\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          disabled={\r\n                            props.disabledFields[key] !== undefined\r\n                              ? props.disabledFields[key]\r\n                              : false\r\n                          }\r\n                          onChange={(e) => {\r\n                            e.preventDefault();\r\n                            props.handleChangesCallback(e.target.value, [\r\n                              key,\r\n                              index,\r\n                            ]);\r\n                          }}\r\n                          value={props.values[key][index]}\r\n                          placeholder={\r\n                            locale().enter + \" \" + key + \"[\" + index + \"]\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col md=\"auto\"></Col>\r\n                </Row>\r\n              );\r\n            })\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  //boolean array form row component\r\n  const ArrayBooleanFormRow = (key) => {\r\n    return (\r\n      <Row\r\n        style={{\r\n          borderBottomStyle: \"solid\",\r\n          borderBottomWidth: 1 + \"px\",\r\n          marginBottom: 5 + \"px\",\r\n        }}\r\n        key={key}\r\n      >\r\n        <Col\r\n          sm={rowNameWidth}\r\n          style={{\r\n            borderRightStyle: \"dotted\",\r\n            borderRightWidth: 1 + \"px\",\r\n          }}\r\n        >\r\n          <b>{key}</b>\r\n        </Col>\r\n        <Col>\r\n          {React.Children.toArray(\r\n            props.values[key].map((value, index) => {\r\n              return (\r\n                <Row>\r\n                  <Col sm={1}>\r\n                    <Button\r\n                      disabled={\r\n                        props.disabledFields[key] !== undefined\r\n                          ? props.disabledFields[key]\r\n                          : false\r\n                      }\r\n                      variant=\"link\"\r\n                      size=\"sm\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        props.arrayDeleteCallback([key, index]);\r\n                      }}\r\n                    >\r\n                      <i\r\n                        className=\"fa fa-times\"\r\n                        aria-hidden=\"true\"\r\n                        title=\"Remove element\"\r\n                        style={{\r\n                          width: 30 + \"px\",\r\n                          height: 30 + \"px\",\r\n                          marginRight: 10 + \"px\",\r\n                          opacity: 0.85,\r\n                        }}\r\n                      ></i>\r\n                    </Button>\r\n                  </Col>\r\n                  <Col sm={6}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      {\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          disabled={\r\n                            props.disabledFields[key] !== undefined\r\n                              ? props.disabledFields[key]\r\n                              : false\r\n                          }\r\n                          onChange={(e) => {\r\n                            e.preventDefault();\r\n                            props.handleChangesCallback(e.target.checked, [\r\n                              key,\r\n                              index,\r\n                            ]);\r\n                          }}\r\n                          checked={props.values[key][index]}\r\n                          placeholder={locale().enter + \" \" + key}\r\n                        />\r\n                      }\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col md=\"auto\"></Col>\r\n                </Row>\r\n              );\r\n            })\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  //strings array form row component\r\n  const ArrayObjectFormRow = (key) => {\r\n    return (\r\n      <Row\r\n        style={{\r\n          borderBottomStyle: \"solid\",\r\n          borderBottomWidth: 1 + \"px\",\r\n          marginBottom: 5 + \"px\",\r\n        }}\r\n        key={key}\r\n      >\r\n        <Col\r\n          sm={rowNameWidth}\r\n          style={{\r\n            borderRightStyle: \"dotted\",\r\n            borderRightWidth: 1 + \"px\",\r\n          }}\r\n        >\r\n          <b>{key}</b>\r\n        </Col>\r\n        <Col>\r\n          <Row\r\n            style={{\r\n              borderBottomStyle: \"dashed\",\r\n              borderBottomWidth: 1 + \"px\",\r\n              marginBottom: 5 + \"px\",\r\n            }}\r\n          >\r\n            {props.disabledFields[key] === undefined && (\r\n              <Col sm={deleteArrayWidth}>\r\n                <b>\r\n                  <i>Remove</i>\r\n                </b>\r\n              </Col>\r\n            )}\r\n            {React.Children.toArray(\r\n              Object.entries(props.values[key][0]).map((e) => {\r\n                return (\r\n                  <Col\r\n                    sm={\r\n                      typeof e[1] === \"boolean\"\r\n                        ? boolArrayWidth\r\n                        : typeof e[1] === \"number\"\r\n                        ? numberArrayWidth\r\n                        : typeof e[1] === \"string\"\r\n                        ? stringArrayWidth\r\n                        : selectArrayWidth\r\n                    }\r\n                  >\r\n                    <b>\r\n                      <i>{Capitalize(key) + \" \" + e[0]}</i>\r\n                    </b>\r\n                  </Col>\r\n                );\r\n              })\r\n            )}\r\n          </Row>\r\n          {React.Children.toArray(\r\n            props.values[key].map((obj, index) => {\r\n              return (\r\n                <Row>\r\n                  {props.disabledFields[key] === undefined && (\r\n                    <Col sm={deleteArrayWidth}>\r\n                      <Button\r\n                        disabled={\r\n                          props.disabledFields[key] !== undefined ? true : false\r\n                        }\r\n                        variant=\"link\"\r\n                        size=\"sm\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          props.arrayDeleteCallback([key, index]);\r\n                        }}\r\n                      >\r\n                        <i\r\n                          className=\"fa fa-times\"\r\n                          aria-hidden=\"true\"\r\n                          title=\"Remove element\"\r\n                          style={{\r\n                            width: 30 + \"px\",\r\n                            height: 30 + \"px\",\r\n                            marginRight: 10 + \"px\",\r\n                            opacity: 0.85,\r\n                          }}\r\n                        ></i>\r\n                      </Button>\r\n                    </Col>\r\n                  )}\r\n\r\n                  {React.Children.toArray(\r\n                    Object.entries(obj).map(([k, value]) => {\r\n                      const disabled =\r\n                        props.disabledFields[key] !== undefined\r\n                          ? props.disabledFields[key][k] !== undefined\r\n                            ? props.disabledFields[key][k]\r\n                            : props.disabledFields[key] === true\r\n                            ? true\r\n                            : false\r\n                          : false;\r\n                      //check if it's number\r\n                      if (typeof value === \"number\") {\r\n                        return (\r\n                          <Col sm={numberArrayWidth}>\r\n                            <Form.Group className=\"mb-3\">\r\n                              <Form.Control\r\n                                type=\"number\"\r\n                                onChange={(e) => {\r\n                                  e.preventDefault();\r\n                                  props.handleChangesCallback(\r\n                                    parseInt(e.target.value, 10),\r\n                                    [key, index, k]\r\n                                  );\r\n                                }}\r\n                                disabled={disabled}\r\n                                value={\r\n                                  isNaN(props.values[key][index][k])\r\n                                    ? \"\"\r\n                                    : props.values[key][index][k]\r\n                                }\r\n                                placeholder={locale().enter + \" \" + k}\r\n                              />\r\n                            </Form.Group>\r\n                          </Col>\r\n                        );\r\n                      }\r\n                      //check if it's boolean\r\n                      if (typeof value === \"boolean\") {\r\n                        return (\r\n                          <Col sm={boolArrayWidth}>\r\n                            <Form.Group className=\"mb-3\">\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                onChange={(e) => {\r\n                                  e.preventDefault();\r\n                                  props.handleChangesCallback(\r\n                                    e.target.checked,\r\n                                    [key, index, k]\r\n                                  );\r\n                                }}\r\n                                disabled={disabled}\r\n                                checked={props.values[key][index][k]}\r\n                                placeholder={locale().enter + \" \" + k}\r\n                              />\r\n                            </Form.Group>\r\n                          </Col>\r\n                        );\r\n                      }\r\n                      //check if it's an enum\r\n                      if (\r\n                        fetchedPageTypes[props.resource] !== undefined &&\r\n                        fetchedPageTypes[props.resource][key] !== undefined &&\r\n                        fetchedPageTypes[props.resource][key][k] !==\r\n                          undefined &&\r\n                        myFetched.types !== undefined &&\r\n                        myFetched.types[\r\n                          fetchedPageTypes[props.resource][key][k]\r\n                        ] !== undefined\r\n                      ) {\r\n                        return (\r\n                          <Col sm={selectArrayWidth}>\r\n                            <Form.Group className=\"mb-3\">\r\n                              <Form.Select\r\n                                aria-label=\"Default select\"\r\n                                onChange={(e) => {\r\n                                  e.preventDefault();\r\n                                  props.handleChangesCallback(e.target.value, [\r\n                                    key,\r\n                                    index,\r\n                                    k,\r\n                                  ]);\r\n                                }}\r\n                                value={props.values[key][index][k]}\r\n                                disabled={disabled}\r\n                              >\r\n                                <option>{locale().select + \" \" + k}</option>\r\n                                {React.Children.toArray(\r\n                                  Object.entries(\r\n                                    myFetched.types[\r\n                                      fetchedPageTypes[props.resource][key][k]\r\n                                    ]\r\n                                  ).map(([k, v]) => {\r\n                                    return <option value={k}>{v}</option>;\r\n                                  })\r\n                                )}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </Col>\r\n                        );\r\n                      }\r\n                      //input field is a string\r\n                      if (typeof value === \"string\") {\r\n                        return (\r\n                          <Col sm={stringArrayWidth}>\r\n                            <Form.Group className=\"mb-3\">\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                disabled={disabled}\r\n                                onChange={(e) => {\r\n                                  e.preventDefault();\r\n                                  props.handleChangesCallback(e.target.value, [\r\n                                    key,\r\n                                    index,\r\n                                    k,\r\n                                  ]);\r\n                                }}\r\n                                value={props.values[key][index][k]}\r\n                                placeholder={locale().enter + \" \" + k}\r\n                              />\r\n                              {key === \"metadata\" &&\r\n                                k === \"name\" &&\r\n                                props.values[key][index][k] === \"Country\" && (\r\n                                  <Form.Text className=\"text-muted\">\r\n                                    Please, enter 2-letter country code (i.e.,\r\n                                    It, De, Fr, etc...).\r\n                                  </Form.Text>\r\n                                )}\r\n                            </Form.Group>\r\n                          </Col>\r\n                        );\r\n                      }\r\n                      //the object contains an array\r\n                      if (Array.isArray(value)) {\r\n                        if (value.length === 0) return k + \" is empty\";\r\n\r\n                        //only show range field when enum type is selected, otherwise skip it\r\n                        if (\r\n                          k === \"range\" &&\r\n                          props.values[key][index][\"type\"] !== \"enum\"\r\n                        )\r\n                          return \"\";\r\n                        return (\r\n                          <Accordion\r\n                            defaultActiveKey=\"0\"\r\n                            style={{\r\n                              paddingBottom: 10 + \"px\",\r\n                              width: \"auto\",\r\n                            }}\r\n                          >\r\n                            <Accordion.Item eventKey=\"0\">\r\n                              <Accordion.Header>\r\n                                <b>{k}</b> : {nonDefaultLength(value)} items\r\n                              </Accordion.Header>\r\n                              <Accordion.Body>\r\n                                <Container fluid>\r\n                                  {React.Children.toArray(\r\n                                    value.map((e, idx) => {\r\n                                      if (e.constructor === Object) {\r\n                                        const entr = Object.entries(e);\r\n                                        return (\r\n                                          <Row>\r\n                                            <Col\r\n                                              sm={deleteArrayWidth}\r\n                                              style={{\r\n                                                borderRightStyle: \"dotted\",\r\n                                                borderRightWidth: 1 + \"px\",\r\n                                              }}\r\n                                            ></Col>\r\n                                            <Col sm={deleteArrayWidth}>\r\n                                              <Button\r\n                                                disabled={\r\n                                                  props.disabledFields[key] !==\r\n                                                  undefined\r\n                                                    ? props.disabledFields[key]\r\n                                                    : false\r\n                                                }\r\n                                                variant=\"link\"\r\n                                                size=\"sm\"\r\n                                                onClick={(e) => {\r\n                                                  e.preventDefault();\r\n                                                  props.arrayDeleteCallback([\r\n                                                    key,\r\n                                                    index,\r\n                                                    k,\r\n                                                    idx,\r\n                                                  ]);\r\n                                                }}\r\n                                              >\r\n                                                <i\r\n                                                  className=\"fa fa-times\"\r\n                                                  aria-hidden=\"true\"\r\n                                                  title=\"Remove element\"\r\n                                                  style={{\r\n                                                    width: 30 + \"px\",\r\n                                                    height: 30 + \"px\",\r\n                                                    marginRight: 10 + \"px\",\r\n                                                    opacity: 0.85,\r\n                                                  }}\r\n                                                ></i>\r\n                                              </Button>\r\n                                            </Col>\r\n                                            {React.Children.toArray(\r\n                                              entr.map(([_k, _v]) => {\r\n                                                return (\r\n                                                  <Col>\r\n                                                    <Form.Group className=\"mb-3\">\r\n                                                      <Form.Control\r\n                                                        type=\"text\"\r\n                                                        disabled={disabled}\r\n                                                        onChange={(e) => {\r\n                                                          e.preventDefault();\r\n                                                          props.handleChangesCallback(\r\n                                                            e.target.value,\r\n                                                            [\r\n                                                              key,\r\n                                                              index,\r\n                                                              k,\r\n                                                              idx,\r\n                                                              _k,\r\n                                                            ]\r\n                                                          );\r\n                                                        }}\r\n                                                        value={_v}\r\n                                                        placeholder={\r\n                                                          locale().enter +\r\n                                                          \" \" +\r\n                                                          _k\r\n                                                        }\r\n                                                      />\r\n                                                    </Form.Group>\r\n                                                  </Col>\r\n                                                );\r\n                                              })\r\n                                            )}\r\n                                          </Row>\r\n                                        );\r\n                                      } else if (typeof e === \"number\") {\r\n                                        return (\r\n                                          <Row>\r\n                                            <Col>\r\n                                              <Button\r\n                                                disabled={disabled}\r\n                                                variant=\"link\"\r\n                                                size=\"sm\"\r\n                                                onClick={(e) => {\r\n                                                  e.preventDefault();\r\n\r\n                                                  props.arrayDeleteCallback([\r\n                                                    key,\r\n                                                    index,\r\n                                                    k,\r\n                                                    idx,\r\n                                                  ]);\r\n                                                }}\r\n                                              >\r\n                                                <i\r\n                                                  className=\"fa fa-times\"\r\n                                                  aria-hidden=\"true\"\r\n                                                  title=\"Remove element\"\r\n                                                  style={{\r\n                                                    width: 30 + \"px\",\r\n                                                    height: 30 + \"px\",\r\n                                                    marginRight: 10 + \"px\",\r\n                                                    opacity: 0.85,\r\n                                                  }}\r\n                                                ></i>\r\n                                              </Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                              <Form.Control\r\n                                                type=\"number\"\r\n                                                disabled={disabled}\r\n                                                onChange={(e) => {\r\n                                                  e.preventDefault();\r\n                                                  props.handleChangesCallback(\r\n                                                    parseInt(\r\n                                                      e.target.value,\r\n                                                      10\r\n                                                    ),\r\n                                                    [key, index, k, idx]\r\n                                                  );\r\n                                                }}\r\n                                                value={isNaN(e) ? \"\" : e} //{props.values[k][index]}\r\n                                                placeholder={\r\n                                                  locale().enter + \" \" + k\r\n                                                }\r\n                                              />\r\n                                            </Col>\r\n                                          </Row>\r\n                                        );\r\n                                      } else if (typeof e === \"string\") {\r\n                                        return (\r\n                                          <Row>\r\n                                            <Col>\r\n                                              <Button\r\n                                                disabled={disabled}\r\n                                                variant=\"link\"\r\n                                                size=\"sm\"\r\n                                                onClick={(e) => {\r\n                                                  e.preventDefault();\r\n\r\n                                                  props.arrayDeleteCallback([\r\n                                                    key,\r\n                                                    index,\r\n                                                    k,\r\n                                                    idx,\r\n                                                  ]);\r\n                                                }}\r\n                                              >\r\n                                                <i\r\n                                                  className=\"fa fa-times\"\r\n                                                  aria-hidden=\"true\"\r\n                                                  title=\"Remove element\"\r\n                                                  style={{\r\n                                                    width: 30 + \"px\",\r\n                                                    height: 30 + \"px\",\r\n                                                    marginRight: 10 + \"px\",\r\n                                                    opacity: 0.85,\r\n                                                  }}\r\n                                                ></i>\r\n                                              </Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                              <Form.Control\r\n                                                type=\"text\"\r\n                                                disabled={\r\n                                                  props.disabledFields[k] !==\r\n                                                  undefined\r\n                                                    ? props.disabledFields[k]\r\n                                                    : false\r\n                                                }\r\n                                                onChange={(e) => {\r\n                                                  e.preventDefault();\r\n                                                  props.handleChangesCallback(\r\n                                                    e.target.value,\r\n                                                    [key, index, k, idx]\r\n                                                  );\r\n                                                }}\r\n                                                value={e}\r\n                                                placeholder={\r\n                                                  locale().enter + \" \" + k\r\n                                                }\r\n                                              />\r\n                                            </Col>\r\n                                          </Row>\r\n                                        );\r\n                                      }\r\n                                      return \"Unknown data type\";\r\n                                    })\r\n                                  )}\r\n                                </Container>\r\n                              </Accordion.Body>\r\n                            </Accordion.Item>\r\n                          </Accordion>\r\n                        );\r\n                      }\r\n                      if (value.constructor === Object) {\r\n                        return (\r\n                          <Accordion\r\n                            defaultActiveKey=\"0\"\r\n                            style={{\r\n                              paddingBottom: 10 + \"px\",\r\n                              width: \"auto\",\r\n                            }}\r\n                          >\r\n                            <Accordion.Item eventKey=\"0\">\r\n                              <Accordion.Header>\r\n                                <b>{k}</b>\r\n                              </Accordion.Header>\r\n                              <Accordion.Body>\r\n                                <Container fluid>\r\n                                  <Row>\r\n                                    {React.Children.toArray(\r\n                                      Object.entries(value).map((entr) => {\r\n                                        if (typeof entr[1] === \"number\") {\r\n                                          return (\r\n                                            <Col>\r\n                                              <Form.Control\r\n                                                type=\"number\"\r\n                                                disabled={disabled}\r\n                                                onChange={(e) => {\r\n                                                  e.preventDefault();\r\n                                                  props.handleChangesCallback(\r\n                                                    parseInt(\r\n                                                      e.target.value,\r\n                                                      10\r\n                                                    ),\r\n                                                    [key, index, k, entr[0]],\r\n                                                    true\r\n                                                  );\r\n                                                }}\r\n                                                value={\r\n                                                  isNaN(entr[1]) ? \"\" : entr[1]\r\n                                                } //{props.values[k][index]}\r\n                                                placeholder={\r\n                                                  locale().enter + \" \" + entr[0]\r\n                                                }\r\n                                              />\r\n                                            </Col>\r\n                                          );\r\n                                        }\r\n                                        //check if it's boolean\r\n                                        if (typeof entr[1] === \"boolean\") {\r\n                                          return (\r\n                                            <Col>\r\n                                              <Form.Group className=\"mb-3\">\r\n                                                <Form.Check\r\n                                                  type=\"checkbox\"\r\n                                                  onChange={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    props.handleChangesCallback(\r\n                                                      e.target.checked,\r\n                                                      [key, index, k, entr[0]],\r\n                                                      true\r\n                                                    );\r\n                                                  }}\r\n                                                  disabled={disabled}\r\n                                                  checked={entr[1]}\r\n                                                  label={entr[0]}\r\n                                                />\r\n                                              </Form.Group>\r\n                                            </Col>\r\n                                          );\r\n                                        }\r\n                                        //check if it's an enum\r\n\r\n                                        if (\r\n                                          fetchedPageTypes[props.resource] !==\r\n                                            undefined &&\r\n                                          fetchedPageTypes[props.resource][\r\n                                            key\r\n                                          ] !== undefined &&\r\n                                          fetchedPageTypes[props.resource][key][\r\n                                            k\r\n                                          ] !== undefined &&\r\n                                          fetchedPageTypes[props.resource][key][\r\n                                            k\r\n                                          ][entr[0]] !== undefined &&\r\n                                          myFetched.types !== undefined &&\r\n                                          fetchedPageTypes[props.resource][key][\r\n                                            k\r\n                                          ][entr[0]] !== undefined\r\n                                        ) {\r\n                                          return (\r\n                                            <Col>\r\n                                              <Form.Group className=\"mb-3\">\r\n                                                <Form.Select\r\n                                                  aria-label=\"Default select\"\r\n                                                  onChange={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    props.handleChangesCallback(\r\n                                                      e.target.value,\r\n                                                      [key, index, k, entr[0]],\r\n                                                      true\r\n                                                    );\r\n                                                  }}\r\n                                                  value={entr[1]}\r\n                                                  disabled={disabled}\r\n                                                >\r\n                                                  <option>\r\n                                                    {locale().select +\r\n                                                      \" \" +\r\n                                                      entr[0]}\r\n                                                  </option>\r\n                                                  {React.Children.toArray(\r\n                                                    Object.entries(\r\n                                                      myFetched.types[\r\n                                                        fetchedPageTypes[\r\n                                                          props.resource\r\n                                                        ][key][k][entr[0]]\r\n                                                      ]\r\n                                                    ).map(([k, v]) => {\r\n                                                      return (\r\n                                                        <option value={k}>\r\n                                                          {v}\r\n                                                        </option>\r\n                                                      );\r\n                                                    })\r\n                                                  )}\r\n                                                </Form.Select>\r\n                                              </Form.Group>\r\n                                            </Col>\r\n                                          );\r\n                                        }\r\n                                        if (typeof entr[1] === \"string\") {\r\n                                          return (\r\n                                            <Col>\r\n                                              <Form.Control\r\n                                                type=\"text\"\r\n                                                disabled={\r\n                                                  props.disabledFields[k] !==\r\n                                                  undefined\r\n                                                    ? props.disabledFields[k]\r\n                                                    : false\r\n                                                }\r\n                                                onChange={(e) => {\r\n                                                  e.preventDefault();\r\n                                                  props.handleChangesCallback(\r\n                                                    e.target.value,\r\n                                                    [key, index, k, entr[0]],\r\n                                                    true\r\n                                                  );\r\n                                                }}\r\n                                                value={entr[1]}\r\n                                                placeholder={\r\n                                                  locale().enter + \" \" + entr[0]\r\n                                                }\r\n                                              />\r\n                                            </Col>\r\n                                          );\r\n                                        }\r\n                                        return \"Unknown data type\";\r\n                                      })\r\n                                    )}\r\n                                  </Row>\r\n                                </Container>\r\n                              </Accordion.Body>\r\n                            </Accordion.Item>\r\n                          </Accordion>\r\n                        );\r\n                      }\r\n                      return \"Unknown data type\";\r\n                    })\r\n                  )}\r\n                </Row>\r\n              );\r\n            })\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={props.submitFunction}>\r\n      <Container fluid key={\"form\"}>\r\n        {\r\n          //in case of unfetched data, do nothing\r\n          props.functionalFields[props.resource] === undefined &&\r\n            \"No operation allowed\"\r\n        }\r\n        {props.functionalFields[props.resource] !== undefined &&\r\n          React.Children.toArray(\r\n            Object.entries(props.values).map(([key, value]) => {\r\n              //enum type defined by config\r\n              //check if all the required resources are defined\r\n\r\n              if (\r\n                fetchedPageTypes[props.resource] !== undefined &&\r\n                fetchedPageTypes[props.resource][key] !== undefined &&\r\n                myFetched.types !== undefined &&\r\n                myFetched.types[fetchedPageTypes[props.resource][key]] !==\r\n                  undefined\r\n              ) {\r\n                return SelectFormRow(\r\n                  key,\r\n                  myFetched.types[fetchedPageTypes[props.resource][key]]\r\n                );\r\n              }\r\n              //input field is an array\r\n              if (Array.isArray(value)) {\r\n                if (typeof value[0] === \"number\") {\r\n                  return ArrayNumberFormRow(key);\r\n                }\r\n                if (typeof value[0] === \"boolean\") {\r\n                  return ArrayBooleanFormRow(key);\r\n                }\r\n                if (typeof value[0] === \"string\") {\r\n                  return ArrayStringFormRow(key);\r\n                }\r\n                if (value[0].constructor === Object) {\r\n                  return ArrayObjectFormRow(key);\r\n                }\r\n              }\r\n              //input field is a number\r\n              if (typeof value === \"number\") {\r\n                return NumericFormRow(key);\r\n              }\r\n              //input field for fetched data\r\n\r\n              if (\r\n                fetchedPageData[props.resource] !== undefined &&\r\n                fetchedPageData[props.resource][key] !== undefined &&\r\n                myFetched.data[fetchedPageData[props.resource][key]] !==\r\n                  undefined\r\n              ) {\r\n                return FetchedFormRow(\r\n                  key,\r\n                  fetchedPageData[props.resource][key]\r\n                );\r\n              }\r\n              //input field is a boolean\r\n              if (typeof value === \"boolean\") {\r\n                return BooleanFormRow(key);\r\n              }\r\n              //input field is a string\r\n              if (typeof value === \"string\") {\r\n                return StringFormRow(key);\r\n              }\r\n\r\n              //input field is an object\r\n              if (value.constructor === Object) {\r\n                return ObjectFormRow(key);\r\n              }\r\n              //default return\r\n              return \"\";\r\n            })\r\n          )}\r\n      </Container>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        {locale().submit}\r\n      </Button>\r\n      &nbsp;&nbsp;&nbsp;\r\n      {props.backFunction !== undefined && (\r\n        <Button variant=\"secondary\" onClick={props.backFunction}>\r\n          {locale().cancel}\r\n        </Button>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n","import {\r\n  isDefault,\r\n  removeDefaultElements,\r\n  nonDefaultLength,\r\n} from \"./misc_functions\";\r\n\r\nconst cloneDeep = require(\"clone-deep\");\r\n\r\n// this function sort keys of an object and of its array-of-objects values (recursively) based on a template\r\nexport function sortObject(obj, template) {\r\n  //keys of the object to sort\r\n  let keys = Object.keys(obj);\r\n  //sorted array of keys\r\n  const sortingKeys = Object.keys(template);\r\n  //remove uncommon keys between the two arrays from the key array\r\n  keys = keys.filter((ob) => {\r\n    return sortingKeys.indexOf(ob) !== -1;\r\n  });\r\n  //sort the keys in the key array\r\n  keys.sort((a, b) => sortingKeys.indexOf(a) - sortingKeys.indexOf(b));\r\n\r\n  const sorted = keys.reduce((accumulator, key) => {\r\n    if (\r\n      Array.isArray(obj[key]) &&\r\n      obj[key].length !== 0 &&\r\n      obj[key][0].constructor === Object\r\n    ) {\r\n      const tmp = obj[key].map((el) => {\r\n        return sortObject(el, template[key][0]);\r\n      });\r\n\r\n      accumulator[key] = tmp;\r\n    } else accumulator[key] = obj[key];\r\n\r\n    return accumulator;\r\n  }, {});\r\n  return sorted;\r\n}\r\n\r\n//this function will check of each field of the object if it's an array, and then, only for array values, check if empty elements are contained into that array\r\nexport function maintainEmptyElements(original, fieldSpecifier, resource) {\r\n  const keys = Object.keys(original);\r\n  let copy = cloneDeep(original);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    if (Array.isArray(copy[keys[i]])) {\r\n      copy = maintainEmptyElement(copy, [keys[i]], fieldSpecifier, resource);\r\n    }\r\n  }\r\n  return copy;\r\n}\r\n\r\n//this function check if an array contains a default element,\r\n//a default element is added when required\r\n//this causes issue for array of boolean, since boolean has no default value is difficult to know when to add an item\r\n\r\nexport function maintainEmptyElement(\r\n  original,\r\n  path,\r\n  fieldSpecifier,\r\n  resource,\r\n  item = undefined\r\n) {\r\n  let tmp = cloneDeep(original);\r\n  let tmpPtr = tmp;\r\n  let fieldSpecifierCpy =\r\n    fieldSpecifier !== undefined\r\n      ? cloneDeep(fieldSpecifier[resource])\r\n      : undefined;\r\n  const tmpPath = [...path];\r\n\r\n  //get the appropriate array to validate\r\n  for (let i = 0; i < tmpPath.length; i++) {\r\n    if (path[i] === undefined) break;\r\n    tmpPtr = tmpPtr[path[i]];\r\n  }\r\n  const nonDefLen = nonDefaultLength(tmpPtr);\r\n  const len = tmpPtr.length;\r\n\r\n  //if at least one element is non default, can return\r\n  if (nonDefLen < len) {\r\n    return tmp;\r\n  }\r\n  //otherwise, need to get the appropriate item to append to array\r\n\r\n  let element;\r\n\r\n  //get the appropriate item, travelling the fieldSpecified (addFields or editFields) according to path\r\n  //fieldSpecifierCpy becomes undefined when the item cannot be found there\r\n  for (let i = 0; i < tmpPath.length; i++) {\r\n    //if path or fieldSpecifier becomes undefined, break\r\n    if (path[i] === undefined) break;\r\n    if (fieldSpecifierCpy === undefined) break;\r\n    //indexes of path should be treated as 0\r\n    if (typeof path[i] === \"number\") fieldSpecifierCpy = fieldSpecifierCpy[0];\r\n    else fieldSpecifierCpy = fieldSpecifierCpy[path[i]];\r\n  }\r\n\r\n  //item found in fieldSpecifierCpy exist and it's not an array return\r\n  if (fieldSpecifierCpy !== undefined && !Array.isArray(fieldSpecifierCpy))\r\n    return tmp;\r\n\r\n  //add item according to addfield/editfield dictionary\r\n  if (fieldSpecifierCpy !== undefined) {\r\n    if (fieldSpecifierCpy[0].constructor === Object) {\r\n      element = {\r\n        ...fieldSpecifierCpy[0],\r\n      };\r\n    } else {\r\n      element = \"\";\r\n    }\r\n  }\r\n\r\n  //add item according to param item\r\n  if (item !== undefined && fieldSpecifierCpy === undefined) {\r\n    if (item.constructor === Object) {\r\n      element = { ...item };\r\n    } else {\r\n      element = item;\r\n    }\r\n  }\r\n  if (element !== undefined) tmpPtr.push(element);\r\n  return tmp;\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { get_generic, put_generic } from \"../../services/http_operations\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  areEqual,\r\n  isDefault,\r\n  removeDefaultElements,\r\n  FormatDate,\r\n} from \"../../services/misc_functions\";\r\n\r\nimport { editFields, editFieldsSpecifier, fetchedPageData } from \"../../config\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { FormManager } from \"../formManager/formManager\";\r\n\r\nimport AppContext from \"../../context\";\r\nimport {\r\n  sortObject,\r\n  maintainEmptyElement,\r\n  maintainEmptyElements,\r\n} from \"../../services/objects_manipulation\";\r\n\r\nconst cloneDeep = require(\"clone-deep\");\r\n\r\nexport default function EditContentPage(props) {\r\n  //get resource and id from url params\r\n  const { resource, id } = useParams();\r\n\r\n  const [original, setOriginal] = useState();\r\n  //message for user\r\n  const [msg, setMsg] = useState(\"\");\r\n  //redirect hook\r\n  const navigate = useNavigate();\r\n\r\n  //deep copy editOption dictionary without any references\r\n  const [values, setValues] = useState(cloneDeep(editFields[resource]));\r\n\r\n  //keep trace of deleted elements\r\n  const [deleted, setDeleted] = useState({});\r\n\r\n  const [disabledFields, setDisabledFields] = useState(undefined);\r\n  //const [mounted, setMounted] = useState(false);\r\n\r\n  const context = useContext(AppContext);\r\n  const myFetched = context.fetched;\r\n  /////////////FETCH REQUIRED RESOURCES\r\n  const fetchData = async (res) => {\r\n    if (myFetched.data[res] !== undefined) return;\r\n    // get the data from the api\r\n    try {\r\n      const response = await get_generic(res, { limit: 100 });\r\n      myFetched.UpdateData(\r\n        response.docs.map((e) => e._id),\r\n        res\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (fetchedPageData[resource] !== undefined) {\r\n      Object.values(fetchedPageData[resource]).forEach((e) => fetchData(e));\r\n    }\r\n  }, []);\r\n\r\n  //useeffect to get resource if required\r\n  useEffect(() => {\r\n    const fetchData = async (qs = {}) => {\r\n      // get the data from the api\r\n      const response = await get_generic(resource, qs);\r\n\r\n      const data = response.docs[0];\r\n      let tmpValues = cloneDeep(values);\r\n\r\n      tmpValues = sortObject(data, tmpValues);\r\n\r\n      Object.entries(tmpValues).forEach((e) => {\r\n        if (e[0].toLowerCase().includes(\"date\")) {\r\n          tmpValues[e[0]] = FormatDate(e[1]);\r\n        }\r\n      });\r\n\r\n      //this function evaluate if a field should be disabled or not\r\n      const evaluateSpecifiers = async () => {\r\n        if (editFieldsSpecifier[resource] === undefined) {\r\n          setDisabledFields({});\r\n\r\n          const keys = Object.keys(tmpValues);\r\n          for (let i = 0; i < keys.length; i++) {\r\n            const _key = keys[i];\r\n\r\n            tmpValues = maintainEmptyElement(\r\n              tmpValues,\r\n              [_key],\r\n              editFields,\r\n              resource\r\n            );\r\n          }\r\n\r\n          setValues(tmpValues);\r\n          //deep copy and set state\r\n          setOriginal(cloneDeep(tmpValues));\r\n          return;\r\n        }\r\n\r\n        let disabled = {};\r\n        if (disabledFields !== undefined) disabled = disabledFields;\r\n\r\n        const specsEntries = Object.entries(editFieldsSpecifier[resource]);\r\n\r\n        for (let i = 0; i < specsEntries.length; i++) {\r\n          const key = specsEntries[i][0]; //key\r\n          const value = specsEntries[i][1]; //value\r\n\r\n          //check if key is in values\r\n          if (tmpValues[key] === undefined) continue;\r\n          //check if value contains the type\r\n          if (value._type !== undefined && value._type === \"disable\") {\r\n            const resp = await value.policy(id);\r\n\r\n            disabled[key] = resp;\r\n          }\r\n          //check if the disable specification is inside the nested object\r\n          else {\r\n            const entr = Object.entries(value);\r\n            for (let j = 0; j < entr.length; j++) {\r\n              console.log({\r\n                value,\r\n                k: entr[j][0],\r\n                v: entr[j][1],\r\n                val: tmpValues[key],\r\n              });\r\n              //check if the subkey is in values, in case of array i trust the configuration\r\n              if (\r\n                Array.isArray(tmpValues[key]) === false &&\r\n                tmpValues[key][entr[j][0]] === undefined\r\n              )\r\n                continue;\r\n              if (\r\n                entr[j][1]._type !== undefined &&\r\n                entr[j][1]._type === \"disable\"\r\n              ) {\r\n                const resp = await entr[j][1].policy(id);\r\n\r\n                disabled[key] = { [entr[j][0]]: resp };\r\n              }\r\n            }\r\n          }\r\n        }\r\n        const keys = Object.keys(tmpValues);\r\n        for (let i = 0; i < keys.length; i++) {\r\n          const _key = keys[i];\r\n\r\n          if (disabled[_key] === undefined || disabled[_key] === false) {\r\n            tmpValues = maintainEmptyElement(\r\n              tmpValues,\r\n              [_key],\r\n              editFields,\r\n              resource\r\n            );\r\n          }\r\n        }\r\n\r\n        setDisabledFields(disabled);\r\n\r\n        setValues(tmpValues);\r\n        //deep copy and set state\r\n        setOriginal(cloneDeep(tmpValues));\r\n      };\r\n\r\n      evaluateSpecifiers();\r\n    };\r\n\r\n    const fst = { _id: id };\r\n    const qs = { filter: JSON.stringify(fst) };\r\n    fetchData(qs);\r\n  }, []);\r\n\r\n  //handle changes\r\n  const handleChanges = (val, path) => {\r\n    let tmpVals = cloneDeep(values);\r\n    let valuesPtr = tmpVals;\r\n\r\n    let i;\r\n    let lastIndexNumber = -1;\r\n    for (i = 0; i < path.length - 1; i++) {\r\n      valuesPtr = valuesPtr[path[i]];\r\n      if (typeof path[i] === \"number\") lastIndexNumber = i;\r\n    }\r\n    if (typeof path[i] === \"number\") lastIndexNumber = i;\r\n    valuesPtr[path[i]] = val;\r\n    //check if an array is present\r\n    if (lastIndexNumber !== -1) {\r\n      //only string and numbers are allowed as item, with this version\r\n      const item = typeof val === \"number\" ? NaN : \"\";\r\n      tmpVals = maintainEmptyElement(\r\n        tmpVals,\r\n        path.slice(0, lastIndexNumber),\r\n        editFields,\r\n        resource,\r\n        item\r\n      );\r\n    }\r\n\r\n    setValues(tmpVals);\r\n  };\r\n\r\n  const back = (e) => {\r\n    e.preventDefault();\r\n    navigate(-1);\r\n  };\r\n\r\n  const handleDeleteItemArray = (path) => {\r\n    let val = cloneDeep(values);\r\n    let tmpPtr = val;\r\n\r\n    let i;\r\n    for (i = 0; i < path.length - 1; i++) {\r\n      if (path[i] === undefined) break;\r\n      tmpPtr = tmpPtr[path[i]];\r\n    }\r\n\r\n    const removed = tmpPtr.splice(path[i], 1);\r\n\r\n    const item = typeof removed[0] === \"number\" ? NaN : \"\";\r\n    val = maintainEmptyElement(\r\n      val,\r\n      path.slice(0, i),\r\n      editFields,\r\n      resource,\r\n      item\r\n    );\r\n\r\n    //save removed element into appropriate structure\r\n    //do this only when array is on first layer of object\r\n    if (i === 1) {\r\n      if (deleted[path[0]] === undefined)\r\n        deleted[path[0]] = { indexes: [], elements: [], minDel: Infinity };\r\n\r\n      //ignore default\r\n      if (!isDefault(removed[0])) {\r\n        //save element (maybe not required anymore)\r\n        deleted[path[0]].elements.push(removed[0]);\r\n        //save index of deletion (considering the original ones)\r\n\r\n        deleted[path[0]].indexes.push(\r\n          path[i] >= deleted[path[0]].minDel\r\n            ? path[i] +\r\n                deleted[[path[0]]].indexes.filter((e) => e >= path[i]).length\r\n            : path[i]\r\n        );\r\n\r\n        if (path[i] < deleted[path[0]].minDel)\r\n          deleted[path[0]].minDel = path[i];\r\n      }\r\n    }\r\n\r\n    setValues(val);\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    //da fare\r\n    let tmpValues = cloneDeep(values);\r\n    let tmpOrig = cloneDeep(original);\r\n    removeDefaultElements(tmpValues);\r\n    removeDefaultElements(tmpOrig);\r\n    let toSend = {};\r\n\r\n    const entr = Object.entries(tmpValues);\r\n    for (let i = 0; i < entr.length; i++) {\r\n      const k = entr[i][0];\r\n      const v = entr[i][1];\r\n\r\n      //value is array\r\n      if (Array.isArray(v)) {\r\n        //prepare add/update/remove elements\r\n        if (toSend[k] === undefined)\r\n          toSend[k] = { add: [], remove: [], update: [] };\r\n\r\n        //get original length of that array\r\n        const origArr = [...tmpOrig[k]];\r\n        //add removed elements (from original elements)\r\n        if (deleted[k] !== undefined) {\r\n          for (let i = 0; i < deleted[k].indexes.length; i++) {\r\n            const removed = origArr.splice(deleted[k].indexes[i][0], 1)[0];\r\n            if (removed.constructor === Object) {\r\n              const key = Object.keys(removed)[0];\r\n              toSend[k].remove.push(removed[key]);\r\n            } else {\r\n              toSend[k].remove.push(removed);\r\n            }\r\n          }\r\n        }\r\n        //check other elements\r\n        for (let j = 0; j < tmpValues[k].length; j++) {\r\n          if (j < origArr.length && !areEqual(tmpValues[k][j], origArr[j])) {\r\n            //update management\r\n\r\n            //object case\r\n            if (tmpValues[k][j].constructor === Object) {\r\n              const key = Object.keys(origArr[j])[0];\r\n              toSend[k].update.push({\r\n                [key]: origArr[j][key],\r\n                new: tmpValues[k][j],\r\n              });\r\n            }\r\n            //non object case (i.e., strings)\r\n            else {\r\n              //remove the old value and add the new one\r\n              toSend[k].add.push(tmpValues[k][j]);\r\n              toSend[k].remove.push(origArr[j]);\r\n            }\r\n          }\r\n          if (j >= origArr.length) toSend[k].add.push(tmpValues[k][j]);\r\n        }\r\n        if (areEqual(toSend[k], { add: [], remove: [], update: [] }))\r\n          delete toSend[k];\r\n      }\r\n      //value is obj\r\n      else if (v.constructor === Object) {\r\n        //compare both obj\r\n      }\r\n      //single valued prop\r\n      else {\r\n        //update when values are different\r\n        if (v !== original[k]) toSend[k] = v;\r\n      }\r\n    }\r\n\r\n    //end da fare\r\n    if (Object.keys(toSend).length === 0) {\r\n      setMsg(\"No changes found\");\r\n      return;\r\n    }\r\n    let res;\r\n    try {\r\n      const resp = await put_generic(resource, toSend, id);\r\n      res = resp.response;\r\n      window.alert(\"Resource successfully edited!\");\r\n      navigate(\"/\" + resource);\r\n    } catch (error) {\r\n      res = error.error.response;\r\n      //add details\r\n      setMsg(\r\n        error.error.response.data.message +\r\n          \" : \" +\r\n          error.error.response.data.details\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page\">\r\n      <header className=\"page-header\">\r\n        Edit &nbsp;<b>{resource}</b>&nbsp;of id:&nbsp;<b>{id}</b>&nbsp;\r\n      </header>\r\n      <main className=\"page-content\">\r\n        <FormManager\r\n          values={values}\r\n          resource={resource}\r\n          functionalFields={editFields}\r\n          disabledFields={disabledFields}\r\n          handleChangesCallback={handleChanges}\r\n          arrayDeleteCallback={handleDeleteItemArray}\r\n          submitFunction={submit}\r\n          backFunction={back}\r\n        />\r\n        <br />\r\n        <font style={{ marginLeft: 5 + \"px\" }}>{msg}</font>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport locale from \"../../common/locale\";\r\nimport { Button, Form, Accordion, Table } from \"react-bootstrap\";\r\n\r\nexport const FormFile = (props) => {\r\n  //return \"loading\" if something is undefined\r\n  /*console.log({\r\n    submit: props.submitFunction,\r\n    back: props.backFunction,\r\n    setContHead: props.setContentHeader,\r\n    setContBdy: props.setContentBody,\r\n    setContPln: props.setContentPlain,\r\n    setFl: props.setFile,\r\n    contBod: props.contentBody,\r\n    contPln: props.contentPlain,\r\n    contHdr: props.contentHeader,\r\n  });*/\r\n  if (\r\n    props.submitFunction === undefined ||\r\n    props.backFunction === undefined ||\r\n    props.setContentHeader === undefined ||\r\n    props.setContentPlain === undefined ||\r\n    props.setContentBody === undefined ||\r\n    props.setFile === undefined ||\r\n    props.contentBody === undefined ||\r\n    props.contentPlain === undefined ||\r\n    props.contentHeader === undefined\r\n  )\r\n    return \"Loading\";\r\n\r\n  return (\r\n    <Form onSubmit={props.submitFunction}>\r\n      <Form.Label>\r\n        <b>{locale().select_file}</b>\r\n      </Form.Label>\r\n      <Form.Control\r\n        className=\"mb-3\"\r\n        type=\"file\"\r\n        accept=\".csv, .json\"\r\n        label=\"File\"\r\n        onChange={(e) => {\r\n          const file = e.target.files[0];\r\n          props.setFile(file);\r\n          const fileReader = new FileReader();\r\n\r\n          fileReader.onloadend = () => {\r\n            const content = fileReader.result;\r\n            if (file.name.endsWith(\".csv\")) {\r\n              const regex = new RegExp(\"\\\\r\", \"g\");\r\n              let splitted = content.replace(regex, \"\").split(\"\\n\");\r\n\r\n              props.setContentHeader(splitted[0]);\r\n              splitted.splice(0, 1);\r\n              props.setContentBody(splitted);\r\n              props.setContentPlain(null);\r\n            }\r\n            if (file.name.endsWith(\".json\")) {\r\n              props.setContentHeader(null);\r\n              props.setContentBody(null);\r\n              props.setContentPlain(\r\n                JSON.stringify(JSON.parse(content), null, 4)\r\n              );\r\n            }\r\n          };\r\n          fileReader.readAsText(file);\r\n        }}\r\n      />\r\n      {props.contentBody !== null && props.contentHeader !== null && (\r\n        <Accordion>\r\n          <Accordion.Item eventKey=\"0\">\r\n            <Accordion.Header>{locale().file_content}</Accordion.Header>\r\n            <Accordion.Body style={{ overflow: \"scroll\", height: 70 + \"vh\" }}>\r\n              <Table responsive striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    {React.Children.toArray(\r\n                      props.contentHeader.split(\",\").map((h) => {\r\n                        return <th>{h}</th>;\r\n                      })\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {React.Children.toArray(\r\n                    props.contentBody.map((e) => {\r\n                      return (\r\n                        <tr>\r\n                          {React.Children.toArray(\r\n                            e.split(\",\").map((h) => {\r\n                              return <td>{h}</td>;\r\n                            })\r\n                          )}\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n        </Accordion>\r\n      )}\r\n      {props.contentPlain !== null && (\r\n        <Accordion>\r\n          <Accordion.Item eventKey=\"0\">\r\n            <Accordion.Header>{locale().file_content}</Accordion.Header>\r\n            <Accordion.Body style={{ overflow: \"scroll\", height: 70 + \"vh\" }}>\r\n              <textarea\r\n                style={{ resize: \"both\" }}\r\n                cols=\"120\"\r\n                rows=\"10\"\r\n                readOnly\r\n                value={props.contentPlain}\r\n              ></textarea>\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n        </Accordion>\r\n      )}\r\n      <Button variant=\"primary\" type=\"submit\" key={\"submit\"}>\r\n        {locale().submit}\r\n      </Button>\r\n      &nbsp;&nbsp;&nbsp;\r\n      <Button variant=\"secondary\" key={\"cancel\"} onClick={props.backFunction}>\r\n        {locale().cancel}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport locale from \"../../common/locale\";\r\nimport { addFields, addTypes } from \"../../config\";\r\nimport {\r\n  post_generic,\r\n  get_generic,\r\n  post_file_generic,\r\n} from \"../../services/http_operations\";\r\nimport {\r\n  isDefault,\r\n  removeDefaultElements,\r\n} from \"../../services/misc_functions\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormManager } from \"../formManager/formManager\";\r\nimport { FormFile } from \"../formFileComp/formFile\";\r\n\r\nimport {\r\n  sortObject,\r\n  maintainEmptyElement,\r\n  maintainEmptyElements,\r\n} from \"../../services/objects_manipulation\";\r\nimport AppContext from \"../../context\";\r\nimport { fetchedPageTypes, fetchedPageData } from \"../../config\";\r\nconst cloneDeep = require(\"clone-deep\");\r\n\r\n/*\r\nAPPUNTI FORM\r\n\r\n <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>\r\n              TEXT\r\n            </Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"PLACEHOLDER TEXT\" />\r\n            <Form.Text className=\"text-muted\">\r\n              LABEL\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\ntipi consentiti nel form control:\r\ntext | number (verifica del numero automatica) | email (verifica email automatica) | file | checkbox\r\n\r\n*/\r\n\r\nexport default function AddPage(props) {\r\n  //get resource and id from url params\r\n  let { resource } = useParams();\r\n  //get from attribute from search param\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  //check if resource was passed as params - used for tenants creation\r\n  if (props.resource !== undefined) resource = props.resource;\r\n\r\n  //redirect hook\r\n  const navigate = useNavigate();\r\n  //type of input to post resources\r\n  const [postType, setPostType] = useState(\"form\");\r\n  //message for user\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  //deep copy addOption dictionary without any references\r\n  const [values, setValues] = useState(cloneDeep(addFields[resource]));\r\n\r\n  //file upload state\r\n  const [file, setFile] = useState(undefined);\r\n  const [contentHeader, setContentHeader] = useState(null);\r\n  const [contentBody, setContentBody] = useState(null);\r\n  const [contentPlain, setContentPlain] = useState(null);\r\n\r\n  const context = useContext(AppContext);\r\n  let myFetched;\r\n  if (context !== undefined) myFetched = context.fetched;\r\n  else myFetched = {};\r\n\r\n  useEffect(() => {\r\n    /////////////FETCH REQUIRED RESOURCES\r\n    const fetchData = async (res) => {\r\n      if (myFetched.data[res] !== undefined) return;\r\n      // get the data from the api\r\n      try {\r\n        const response = await get_generic(res, { limit: 100 });\r\n        myFetched.UpdateData(\r\n          response.docs.map((e) => e._id),\r\n          res\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    if (fetchedPageData[resource] !== undefined) {\r\n      Object.values(fetchedPageData[resource]).forEach((e) => fetchData(e));\r\n    }\r\n  }, []);\r\n\r\n  //useeffect to get resource if required\r\n  useEffect(() => {\r\n    const fetchSingle = async (qs = {}) => {\r\n      // get the data from the api\r\n      const response = await get_generic(resource, qs);\r\n\r\n      const data = response.docs[0];\r\n      let tmpValues = cloneDeep(values);\r\n\r\n      tmpValues = sortObject(data, tmpValues);\r\n\r\n      tmpValues = maintainEmptyElements(tmpValues, addFields, resource);\r\n      setValues(tmpValues);\r\n    };\r\n\r\n    if (searchParams.get(\"from\") === null || searchParams.get(\"from\") === \"\")\r\n      return;\r\n    const fst = { _id: searchParams.get(\"from\") };\r\n    const qs = { filter: JSON.stringify(fst) };\r\n    fetchSingle(qs);\r\n  }, [searchParams, resource]);\r\n\r\n  //return if page shouldn't be rendered\r\n  if (addFields[resource] === undefined)\r\n    return <div>This entity cannot be posted</div>;\r\n\r\n  //handle changes\r\n  const handleChanges = (val, path, ignoreAdd = false) => {\r\n    let tmpVals = cloneDeep(values);\r\n    let valuesPtr = tmpVals;\r\n\r\n    let i;\r\n    let lastIndexNumber = -1;\r\n    for (i = 0; i < path.length - 1; i++) {\r\n      valuesPtr = valuesPtr[path[i]];\r\n      if (typeof path[i] === \"number\") lastIndexNumber = i;\r\n    }\r\n    valuesPtr[path[i]] = val;\r\n    if (typeof path[i] === \"number\") lastIndexNumber = i;\r\n\r\n    if (ignoreAdd === false && lastIndexNumber !== -1)\r\n      tmpVals = maintainEmptyElement(\r\n        tmpVals,\r\n        path.slice(0, lastIndexNumber),\r\n        addFields,\r\n        resource\r\n      );\r\n    setValues(tmpVals);\r\n  };\r\n\r\n  const handleDeleteItemArray = (path) => {\r\n    let val = cloneDeep(values);\r\n    let tmpPtr = val;\r\n\r\n    let i;\r\n    for (i = 0; i < path.length - 1; i++) {\r\n      if (path[i] === undefined) break;\r\n      tmpPtr = tmpPtr[path[i]];\r\n    }\r\n\r\n    tmpPtr.splice(path[i], 1);\r\n\r\n    val = maintainEmptyElement(val, path.slice(0, i), addFields, resource);\r\n    setValues(val);\r\n  };\r\n  //handle way selector to post new entity\r\n  const handleTypeSelect = (eventKey) => {\r\n    setPostType(eventKey);\r\n    setMsg(\"\");\r\n    setIsError(false);\r\n  };\r\n\r\n  const back = (e) => {\r\n    e.preventDefault();\r\n    navigate(-1);\r\n  };\r\n\r\n  //post the body for forms\r\n  const postBody = async (e) => {\r\n    e.preventDefault();\r\n    //deep clone values\r\n    let token = undefined;\r\n    let body = cloneDeep(values);\r\n    if (body.token !== undefined) {\r\n      token = body.token;\r\n      delete body.token;\r\n    }\r\n\r\n    let tmpValues = cloneDeep(body);\r\n    removeDefaultElements(tmpValues);\r\n    let res;\r\n\r\n    try {\r\n      const resp = await post_generic(\r\n        resource,\r\n        JSON.stringify(tmpValues),\r\n        token\r\n      );\r\n      res = resp.response;\r\n      setMsg(res.statusText);\r\n      setIsError(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      res = error.error.response;\r\n      console.log({\r\n        message: error.error.response.data.message,\r\n        details: error.error.response.data.details,\r\n      });\r\n\r\n      let det = \"\";\r\n      if (error.error.response.data.details.includes(\"duplicate key\")) {\r\n        det =\r\n          locale().duplicate_error +\r\n          \" \" +\r\n          error.error.response.data.details.slice(\r\n            error.error.response.data.details.indexOf(\"{\") + 1,\r\n            -1\r\n          );\r\n      }\r\n      //default case: show details from error message\r\n      else {\r\n        det = error.error.response.data.details;\r\n      }\r\n      //add details\r\n      setMsg(error.error.response.data.message + \" : \" + det);\r\n      setIsError(true);\r\n    }\r\n\r\n    if (res.status === 200) {\r\n      window.alert(\"Resource successufully posted!\");\r\n      navigate(\"/\" + resource);\r\n    }\r\n  };\r\n\r\n  const postFile = async (e) => {\r\n    e.preventDefault();\r\n    let res;\r\n    if (file === undefined) {\r\n      setMsg(locale().no_file);\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    if (file.name.endsWith(\".csv\")) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n\r\n      try {\r\n        const resp = await post_file_generic(resource, formData);\r\n\r\n        res = resp.response;\r\n        setMsg(res.statusText);\r\n        setIsError(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        res = error.error.response;\r\n        console.log({\r\n          message: error.error.response.data.message,\r\n          details: error.error.response.data.details,\r\n        });\r\n\r\n        let det = \"\";\r\n        if (error.error.response.data.details.includes(\"duplicate key\")) {\r\n          det =\r\n            locale().duplicate_error +\r\n            \" \" +\r\n            error.error.response.data.details.slice(\r\n              error.error.response.data.details.indexOf(\"{\") + 1,\r\n              -1\r\n            );\r\n        }\r\n        //default case: show details from error message\r\n        else {\r\n          det = error.error.response.data.details;\r\n        }\r\n        //add details\r\n        setMsg(error.error.response.data.message + \" : \" + det);\r\n        setIsError(true);\r\n      }\r\n    }\r\n    if (file.name.endsWith(\".json\")) {\r\n      try {\r\n        const resp = await post_generic(resource, contentPlain, undefined);\r\n        res = resp.response;\r\n        setMsg(res.statusText);\r\n        setIsError(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        res = error.error.response;\r\n        console.log({\r\n          message: error.error.response.data.message,\r\n          details: error.error.response.data.details,\r\n        });\r\n\r\n        let det = \"\";\r\n        if (error.error.response.data.details.includes(\"duplicate key\")) {\r\n          det =\r\n            locale().duplicate_error +\r\n            \" \" +\r\n            error.error.response.data.details.slice(\r\n              error.error.response.data.details.indexOf(\"{\") + 1,\r\n              -1\r\n            );\r\n        }\r\n        //default case: show details from error message\r\n        else {\r\n          det = error.error.response.data.details;\r\n        }\r\n        //add details\r\n        setMsg(error.error.response.data.message + \" : \" + det);\r\n        setIsError(true);\r\n      }\r\n    }\r\n\r\n    if (res.status === 200) {\r\n      window.alert(\"Resource posted correctly\");\r\n      navigate(\"/\" + resource);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page\">\r\n      <header className=\"page-header\">\r\n        Add resource &nbsp;\r\n        <b>{resource}</b>\r\n      </header>\r\n      <main className=\"page-content\">\r\n        <Nav\r\n          justify\r\n          variant=\"tabs\"\r\n          className=\"justify-content-center\"\r\n          onSelect={handleTypeSelect}\r\n          defaultActiveKey=\"form\"\r\n        >\r\n          {addTypes[resource].includes(\"form\") && (\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"form\">Form</Nav.Link>\r\n            </Nav.Item>\r\n          )}\r\n\r\n          {addTypes[resource].includes(\"file\") &&\r\n            searchParams.get(\"from\") === null && (\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"file\">File</Nav.Link>\r\n              </Nav.Item>\r\n            )}\r\n        </Nav>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#fff\",\r\n            borderRadius: 2 + \"px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"rgba(18, 54, 81, 0.9)\",\r\n            borderWidth: 1 + \"px\",\r\n            width: 100 + \"%\",\r\n            height: \"fit-content\",\r\n          }}\r\n        >\r\n          {postType === \"form\" && (\r\n            <div style={{ margin: 5 + \"px\" }}>\r\n              <FormManager\r\n                values={values}\r\n                resource={resource}\r\n                functionalFields={addFields}\r\n                disabledFields={{}}\r\n                handleChangesCallback={handleChanges}\r\n                arrayDeleteCallback={handleDeleteItemArray}\r\n                submitFunction={postBody}\r\n                backFunction={back}\r\n              />\r\n              <br />\r\n              <font\r\n                style={{\r\n                  marginLeft: 5 + \"px\",\r\n                  color: isError ? \"red\" : \"black\",\r\n                }}\r\n              >\r\n                {msg}\r\n              </font>\r\n            </div>\r\n          )}\r\n          {postType === \"file\" && (\r\n            <div style={{ margin: 5 + \"px\" }}>\r\n              <FormFile\r\n                submitFunction={postFile}\r\n                backFunction={back}\r\n                setContentBody={setContentBody}\r\n                setContentHeader={setContentHeader}\r\n                setContentPlain={setContentPlain}\r\n                setFile={setFile}\r\n                contentPlain={contentPlain}\r\n                contentHeader={contentHeader}\r\n                contentBody={contentBody}\r\n              />\r\n              <font\r\n                style={{\r\n                  marginLeft: 5 + \"px\",\r\n                  color: isError ? \"red\" : \"black\",\r\n                }}\r\n              >\r\n                {msg}\r\n              </font>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport locale from \"../../common/locale\";\r\nimport {\r\n  post_generic,\r\n  get_generic,\r\n  post_file_generic,\r\n} from \"../../services/http_operations\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport {\r\n  Form,\r\n  Nav,\r\n  Accordion,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { FormManager } from \"../formManager/formManager\";\r\nimport { FormFile } from \"../formFileComp/formFile\";\r\n\r\nimport { saveAs } from \"file-saver\";\r\n\r\nexport default function ImportExportValues(props) {\r\n  const [content, setContent] = useState(null);\r\n  return (\r\n    <Accordion size={\"lg\"}>\r\n      <Accordion.Item eventKey={0}>\r\n        <Accordion.Header>\r\n          {locale().import +\r\n            \" - \" +\r\n            locale().export +\r\n            \" \" +\r\n            locale().configuration}\r\n        </Accordion.Header>\r\n        <Accordion.Body>\r\n          <Container>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form onSubmit={() => props.importValues(content)}>\r\n                  <Row>\r\n                    <b>Import configuration from json file</b>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Label>\r\n                        <b>{locale().select_file}</b>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        className=\"mb-3\"\r\n                        type=\"file\"\r\n                        accept=\".json\"\r\n                        label=\"File\"\r\n                        onChange={(e) => {\r\n                          e.preventDefault();\r\n                          const file = e.target.files[0];\r\n                          //props.setFile(file);\r\n                          const fileReader = new FileReader();\r\n\r\n                          fileReader.onloadend = () => {\r\n                            const _content = fileReader.result;\r\n                            setContent(_content);\r\n                          };\r\n                          fileReader.readAsText(file);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <font\r\n                        style={{\r\n                          marginLeft: 5 + \"px\",\r\n                          color: \"red\",\r\n                        }}\r\n                      >\r\n                        {props.importMsg}\r\n                      </font>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Button type=\"submit\" variant=\"success\">\r\n                        Load\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </Col>\r\n              <Col sm={6}>\r\n                <Row>\r\n                  <b>Download configuration as json file</b>\r\n                </Row>\r\n                <Row style={{ paddingTop: 22 + \"px\" }}>\r\n                  <Col>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => {\r\n                        const blob = new Blob([\r\n                          JSON.stringify(props.values, null, 4),\r\n                        ]);\r\n                        saveAs(\r\n                          blob,\r\n                          (props.values[\"_id\"] !== \"\"\r\n                            ? props.values[\"_id\"]\r\n                            : \"Experiment\") + \".json\"\r\n                        );\r\n                      }}\r\n                    >\r\n                      Download\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Accordion.Body>\r\n      </Accordion.Item>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\n/*\r\n\r\n                  {props.contentBody !== null && props.contentHeader !== null && (\r\n                    <Accordion>\r\n                      <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header>\r\n                          {locale().file_content}\r\n                        </Accordion.Header>\r\n                        <Accordion.Body\r\n                          style={{ overflow: \"scroll\", height: 70 + \"vh\" }}\r\n                        >\r\n                          <Table responsive striped bordered hover>\r\n                            <thead>\r\n                              <tr>\r\n                                {React.Children.toArray(\r\n                                  props.contentHeader.split(\",\").map((h) => {\r\n                                    return <th>{h}</th>;\r\n                                  })\r\n                                )}\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {React.Children.toArray(\r\n                                props.contentBody.map((e) => {\r\n                                  return (\r\n                                    <tr>\r\n                                      {React.Children.toArray(\r\n                                        e.split(\",\").map((h) => {\r\n                                          return <td>{h}</td>;\r\n                                        })\r\n                                      )}\r\n                                    </tr>\r\n                                  );\r\n                                })\r\n                              )}\r\n                            </tbody>\r\n                          </Table>\r\n                        </Accordion.Body>\r\n                      </Accordion.Item>\r\n                    </Accordion>\r\n                  )}\r\n                  {props.contentPlain !== null && (\r\n                    <Accordion>\r\n                      <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header>\r\n                          {locale().file_content}\r\n                        </Accordion.Header>\r\n                        <Accordion.Body\r\n                          style={{ overflow: \"scroll\", height: 70 + \"vh\" }}\r\n                        >\r\n                          <textarea\r\n                            //style={{ resize: \"both;\" }}\r\n                            cols=\"120\"\r\n                            rows=\"10\"\r\n                            readOnly\r\n                          >\r\n                            {props.contentPlain}\r\n                          </textarea>\r\n                        </Accordion.Body>\r\n                      </Accordion.Item>\r\n                    </Accordion>\r\n                  )}\r\n\r\n\r\n*/\r\n","import React, { useEffect, useState } from \"react\";\r\nimport locale from \"../../common/locale\";\r\nimport { addFields, addTypes } from \"../../config\";\r\nimport {\r\n  post_generic,\r\n  get_generic,\r\n  post_file_generic,\r\n} from \"../../services/http_operations\";\r\nimport {\r\n  isDefault,\r\n  removeDefaultElements,\r\n} from \"../../services/misc_functions\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Form, Nav } from \"react-bootstrap\";\r\nimport { FormManager } from \"../formManager/formManager\";\r\nimport { FormFile } from \"../formFileComp/formFile\";\r\n\r\nimport {\r\n  sortObject,\r\n  maintainEmptyElement,\r\n  maintainEmptyElements,\r\n} from \"../../services/objects_manipulation\";\r\nimport ImportExportValues from \"../importExportValues/importExportValues\";\r\nimport { FormatDate } from \"../../services/misc_functions\";\r\n\r\nconst cloneDeep = require(\"clone-deep\");\r\n/*\r\nAPPUNTI FORM\r\n\r\n <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>\r\n              TEXT\r\n            </Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"PLACEHOLDER TEXT\" />\r\n            <Form.Text className=\"text-muted\">\r\n              LABEL\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\ntipi consentiti nel form control:\r\ntext | number (verifica del numero automatica) | email (verifica email automatica) | file | checkbox\r\n\r\n*/\r\n\r\nexport default function AddExperimentPage(props) {\r\n  //get resource and id from url params\r\n  const resource = \"experiments\";\r\n  //get from attribute from search param\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  //redirect hook\r\n  const navigate = useNavigate();\r\n  //type of input to post resources\r\n  const [postType, setPostType] = useState(\"form\");\r\n  //message for user\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n  //import message for user\r\n  const [importMsg, setImportMsg] = useState(\"\");\r\n  //values\r\n  const [values, setValues] = useState(cloneDeep(addFields[resource]));\r\n  //disabled\r\n  const [disabledFields, setDisabledFields] = useState({\r\n    metadata: { name: true },\r\n  });\r\n\r\n  //protocols\r\n  const [protocols, setProtocols] = useState();\r\n\r\n  //file upload state\r\n  const [file, setFile] = useState(undefined);\r\n  const [contentHeader, setContentHeader] = useState(null);\r\n  const [contentBody, setContentBody] = useState(null);\r\n  const [contentPlain, setContentPlain] = useState(null);\r\n\r\n  //useeffect to get protocols\r\n  useEffect(() => {\r\n    const fetchData = async (qs = {}) => {\r\n      // get the protocols data from the api\r\n      const response = await get_generic(\"protocols\", qs);\r\n\r\n      setProtocols(response.docs.map((e) => e._id));\r\n    };\r\n    const qs = { limit: 100 };\r\n    fetchData(qs);\r\n  }, [props, searchParams]);\r\n\r\n  //useeffect to get resource if required (for the \"duplicate\" actions)\r\n  useEffect(() => {\r\n    const fetchDataDuplicate = async (qs = {}) => {\r\n      // get the data from the api\r\n      const response = await get_generic(resource, qs);\r\n\r\n      const data = response.docs[0];\r\n      let tmpValues = cloneDeep(values);\r\n\r\n      //add metadata and protocol fields\r\n      tmpValues[\"protocol\"] = \"\";\r\n      tmpValues[\"metadata\"] = [{ name: \"\", value: \"\" }];\r\n\r\n      //disable protocol fields\r\n      const tmpDisabled = cloneDeep(disabledFields);\r\n      tmpDisabled[\"protocol\"] = true;\r\n\r\n      setDisabledFields(tmpDisabled);\r\n\r\n      tmpValues = sortObject(data, tmpValues);\r\n\r\n      Object.entries(tmpValues).forEach((e) => {\r\n        if (e[0].toLowerCase().includes(\"date\")) {\r\n          tmpValues[e[0]] = FormatDate(e[1]);\r\n        }\r\n      });\r\n\r\n      //add \"_copy\" to id to avoid duplicate key error\r\n\r\n      tmpValues[\"_id\"] = tmpValues[\"_id\"] + \"_copy\";\r\n\r\n      tmpValues = maintainEmptyElements(tmpValues, addFields, resource);\r\n      setValues(tmpValues);\r\n    };\r\n\r\n    if (searchParams.get(\"from\") === null || searchParams.get(\"from\") === \"\")\r\n      return;\r\n    const fst = { _id: searchParams.get(\"from\") };\r\n    const qs = { filter: JSON.stringify(fst) };\r\n    fetchDataDuplicate(qs);\r\n  }, [searchParams, resource]);\r\n\r\n  //return if page shouldn't be rendered\r\n  if (addFields[resource] === undefined)\r\n    return <div>This entity cannot be posted</div>;\r\n\r\n  //handle changes\r\n  const handleChanges = (val, path) => {\r\n    let tmpVals = cloneDeep(values);\r\n    let valuesPtr = tmpVals;\r\n\r\n    let i;\r\n    let lastIndexNumber = -1;\r\n    for (i = 0; i < path.length - 1; i++) {\r\n      valuesPtr = valuesPtr[path[i]];\r\n      if (typeof path[i] === \"number\") lastIndexNumber = i;\r\n    }\r\n    if (typeof path[i] === \"number\") lastIndexNumber = i;\r\n    valuesPtr[path[i]] = val;\r\n    //check if an array is present\r\n    if (lastIndexNumber !== -1) {\r\n      //only string and numbers are allowed as item, with this version\r\n      const item = typeof val === \"number\" ? NaN : \"\";\r\n      tmpVals = maintainEmptyElement(\r\n        tmpVals,\r\n        path.slice(0, lastIndexNumber),\r\n        addFields,\r\n        resource,\r\n        item\r\n      );\r\n    }\r\n    setValues(tmpVals);\r\n  };\r\n\r\n  const handleDeleteItemArray = (path) => {\r\n    let val = cloneDeep(values);\r\n    let tmpPtr = val;\r\n\r\n    let i;\r\n    for (i = 0; i < path.length - 1; i++) {\r\n      if (path[i] === undefined) break;\r\n      tmpPtr = tmpPtr[path[i]];\r\n    }\r\n\r\n    const removed = tmpPtr.splice(path[i], 1);\r\n\r\n    const item = typeof removed[0] === \"number\" ? NaN : \"\";\r\n    val = maintainEmptyElement(\r\n      val,\r\n      path.slice(0, i),\r\n      addFields,\r\n      resource,\r\n      item\r\n    );\r\n    setValues(val);\r\n  };\r\n  //handle way selector to post new entity\r\n  const handleTypeSelect = (eventKey) => {\r\n    setPostType(eventKey);\r\n    setMsg(\"\");\r\n    setIsError(false);\r\n  };\r\n\r\n  //handle changes to selected protocols\r\n  const handleProtocolChange = async (e) => {\r\n    e.preventDefault();\r\n    const selectedProtocol = e.target.value;\r\n    const fst = { _id: e.target.value };\r\n    const qs = { filter: JSON.stringify(fst) };\r\n    const res = await get_generic(\"protocols\", qs);\r\n    const protocol = res.docs[0];\r\n\r\n    const metadata = [];\r\n    for (let i = 0; i < protocol.metadata.length; i++) {\r\n      if (protocol.metadata[i].type === \"scalar\") {\r\n        metadata.push({\r\n          name: protocol.metadata[i].name,\r\n          value: 0,\r\n        });\r\n      }\r\n      if (protocol.metadata[i].type === \"text\") {\r\n        metadata.push({\r\n          name: protocol.metadata[i].name,\r\n          value: protocol.metadata[i].name + \"_Name\",\r\n        });\r\n      }\r\n      if (protocol.metadata[i].type === \"vector\") {\r\n        metadata.push({\r\n          name: protocol.metadata[i].name,\r\n          value: [0],\r\n        });\r\n      }\r\n    }\r\n\r\n    const tmpValues = cloneDeep(values);\r\n    tmpValues[\"protocol\"] = selectedProtocol;\r\n    if (metadata.length !== 0) tmpValues[\"metadata\"] = metadata;\r\n\r\n    const tmpDisabled = cloneDeep(disabledFields);\r\n    tmpDisabled[\"protocol\"] = true;\r\n\r\n    setDisabledFields(tmpDisabled);\r\n    //setProtocol(selectedProtocol);\r\n    setValues(tmpValues);\r\n  };\r\n\r\n  //post the body for forms\r\n  const postBody = async (e) => {\r\n    e.preventDefault();\r\n    //deep clone values\r\n    let token = undefined;\r\n    let body = cloneDeep(values);\r\n    if (body.token !== undefined) {\r\n      token = body.token;\r\n      delete body.token;\r\n    }\r\n\r\n    let tmpValues = cloneDeep(body);\r\n    removeDefaultElements(tmpValues);\r\n    if (tmpValues[\"protocol\"] === undefined) {\r\n      setMsg(\"Please, select a protocol\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    if (tmpValues[\"_id\"] === \"\") {\r\n      setMsg(\"Please, define an _id\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    if (tmpValues[\"state\"] === \"\") {\r\n      setMsg(\"Please, select a state\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n\r\n    let res;\r\n    try {\r\n      const resp = await post_generic(\r\n        resource,\r\n        JSON.stringify(tmpValues),\r\n        token\r\n      );\r\n      res = resp.response;\r\n      setMsg(res.statusText);\r\n      setIsError(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      res = error.error.response;\r\n      console.log({\r\n        message: error.error.response.data.message,\r\n        details: error.error.response.data.details,\r\n      });\r\n\r\n      let det = \"\";\r\n      if (error.error.response.data.details.includes(\"duplicate key\")) {\r\n        det =\r\n          locale().duplicate_error +\r\n          \" \" +\r\n          error.error.response.data.details.slice(\r\n            error.error.response.data.details.indexOf(\"{\") + 1,\r\n            -1\r\n          );\r\n      }\r\n      //default case: show details from error message\r\n      else {\r\n        det = error.error.response.data.details;\r\n      }\r\n      //add details\r\n      setMsg(error.error.response.data.message + \" : \" + det);\r\n      setIsError(true);\r\n    }\r\n    if (res.status === 200) {\r\n      window.alert(\"Experiment successufully posted!\");\r\n      navigate(\"/\" + resource);\r\n    }\r\n  };\r\n\r\n  const back = (e) => {\r\n    e.preventDefault();\r\n    navigate(-1);\r\n  };\r\n\r\n  const importValues = (importedValues) => {\r\n    try {\r\n      const imported = JSON.parse(importedValues);\r\n      const template = cloneDeep(values);\r\n      if (imported[\"state\"] === null) imported[\"state\"] = NaN;\r\n\r\n      template[\"protocol\"] = \"\";\r\n      template[\"metadata\"] = [{ name: \"\", value: \"\" }];\r\n      const sorted = sortObject(imported, template);\r\n      console.log(sorted);\r\n\r\n      if (\r\n        sorted[\"_id\"] === undefined &&\r\n        sorted[\"owner\"] === undefined &&\r\n        sorted[\"protocol\"] === undefined &&\r\n        sorted[\"metadata\"] === undefined\r\n      ) {\r\n        setImportMsg(locale().error_imported_file);\r\n        return;\r\n      }\r\n      setImportMsg(\"\");\r\n\r\n      //remove history when present\r\n      if (sorted[\"history\"] !== undefined) delete sorted[\"history\"];\r\n      setValues(sorted);\r\n\r\n      const tmpDisabled = cloneDeep(disabledFields);\r\n      tmpDisabled[\"protocol\"] = true;\r\n\r\n      setDisabledFields(tmpDisabled);\r\n    } catch (error) {\r\n      setImportMsg(locale().error_imported_file);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const postFile = async (e) => {\r\n    e.preventDefault();\r\n    let res;\r\n    if (file === undefined) {\r\n      setMsg(locale().no_file);\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    if (file.name.endsWith(\".csv\")) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n\r\n      try {\r\n        const resp = await post_file_generic(resource, formData);\r\n\r\n        res = resp.response;\r\n        setMsg(res.statusText);\r\n        setIsError(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        res = error.error.response;\r\n        console.log({\r\n          message: error.error.response.data.message,\r\n          details: error.error.response.data.details,\r\n        });\r\n\r\n        let det = \"\";\r\n        if (error.error.response.data.details.includes(\"duplicate key\")) {\r\n          det =\r\n            locale().duplicate_error +\r\n            \" \" +\r\n            error.error.response.data.details.slice(\r\n              error.error.response.data.details.indexOf(\"{\") + 1,\r\n              -1\r\n            );\r\n        }\r\n        //default case: show details from error message\r\n        else {\r\n          det = error.error.response.data.details;\r\n        }\r\n        //add details\r\n        setMsg(error.error.response.data.message + \" : \" + det);\r\n        setIsError(true);\r\n      }\r\n    }\r\n    if (file.name.endsWith(\".json\")) {\r\n      try {\r\n        const resp = await post_generic(resource, contentPlain, undefined);\r\n        res = resp.response;\r\n        setMsg(res.statusText);\r\n        setIsError(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        res = error.error.response;\r\n        console.log({\r\n          message: error.error.response.data.message,\r\n          details: error.error.response.data.details,\r\n        });\r\n\r\n        let det = \"\";\r\n        if (error.error.response.data.details.includes(\"duplicate key\")) {\r\n          det =\r\n            locale().duplicate_error +\r\n            \" \" +\r\n            error.error.response.data.details.slice(\r\n              error.error.response.data.details.indexOf(\"{\") + 1,\r\n              -1\r\n            );\r\n        }\r\n        //default case: show details from error message\r\n        else {\r\n          det = error.error.response.data.details;\r\n        }\r\n        //add details\r\n        setMsg(error.error.response.data.message + \" : \" + det);\r\n        setIsError(true);\r\n      }\r\n    }\r\n\r\n    if (res.status === 200) {\r\n      window.alert(\"Experiment successufully posted!\");\r\n\r\n      navigate(\"/\" + resource);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <header className=\"page-header\">\r\n        Add resource &nbsp;\r\n        <b>{resource}</b>\r\n      </header>\r\n      <main className=\"page-content\">\r\n        <Nav\r\n          justify\r\n          variant=\"tabs\"\r\n          className=\"justify-content-center\"\r\n          onSelect={handleTypeSelect}\r\n          defaultActiveKey=\"form\"\r\n        >\r\n          {addTypes[resource].includes(\"form\") && (\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"form\">Form</Nav.Link>\r\n            </Nav.Item>\r\n          )}\r\n\r\n          {addTypes[resource].includes(\"file\") &&\r\n            searchParams.get(\"from\") === null && (\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"file\">File</Nav.Link>\r\n              </Nav.Item>\r\n            )}\r\n        </Nav>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#fff\",\r\n            borderRadius: 2 + \"px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"rgba(18, 54, 81, 0.9)\",\r\n            borderWidth: 1 + \"px\",\r\n            width: 100 + \"%\",\r\n            height: \"fit-content\",\r\n          }}\r\n        >\r\n          {postType === \"form\" &&\r\n            (searchParams.get(\"from\") === null ||\r\n              searchParams.get(\"from\") === \"\") && (\r\n              <ImportExportValues\r\n                values={values}\r\n                importValues={importValues}\r\n                importMsg={importMsg}\r\n              />\r\n            )}\r\n          {postType === \"form\" && protocols !== undefined && (\r\n            <div style={{ margin: 5 + \"px\" }}>\r\n              {(searchParams.get(\"from\") === null ||\r\n                searchParams.get(\"from\") === \"\") && (\r\n                <Form.Select\r\n                  aria-label={locale().select + \" protocol\"}\r\n                  onChange={handleProtocolChange}\r\n                  value={values[\"protocol\"]}\r\n                >\r\n                  <option>{locale().select} protocol</option>\r\n                  {React.Children.toArray(\r\n                    protocols.map((e) => {\r\n                      return <option value={e}>{e}</option>;\r\n                    })\r\n                  )}\r\n                </Form.Select>\r\n              )}\r\n              <br />\r\n              <FormManager\r\n                values={values}\r\n                resource={resource}\r\n                functionalFields={addFields}\r\n                disabledFields={disabledFields}\r\n                handleChangesCallback={handleChanges}\r\n                arrayDeleteCallback={handleDeleteItemArray}\r\n                submitFunction={postBody}\r\n                backFunction={back}\r\n              />\r\n              <font\r\n                style={{\r\n                  marginLeft: 5 + \"px\",\r\n                  color: isError ? \"red\" : \"black\",\r\n                }}\r\n              >\r\n                {msg}\r\n              </font>\r\n            </div>\r\n          )}\r\n          {postType === \"file\" && (\r\n            <div style={{ margin: 5 + \"px\" }}>\r\n              <FormFile\r\n                submitFunction={postFile}\r\n                backFunction={back}\r\n                setContentBody={setContentBody}\r\n                setContentHeader={setContentHeader}\r\n                setContentPlain={setContentPlain}\r\n                setFile={setFile}\r\n                contentPlain={contentPlain}\r\n                contentHeader={contentHeader}\r\n                contentBody={contentBody}\r\n              />\r\n              <font\r\n                style={{\r\n                  marginLeft: 5 + \"px\",\r\n                  color: isError ? \"red\" : \"black\",\r\n                }}\r\n              >\r\n                {msg}\r\n              </font>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport locale from \"../../common/locale\";\r\nimport { addFields, addTypes } from \"../../config\";\r\nimport {\r\n  post_generic,\r\n  get_generic,\r\n  post_file_generic,\r\n} from \"../../services/http_operations\";\r\nimport {\r\n  isDefault,\r\n  removeDefaultElements,\r\n} from \"../../services/misc_functions\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport {\r\n  Form,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Accordion,\r\n} from \"react-bootstrap\";\r\nimport { FormManager } from \"../formManager/formManager\";\r\nimport { FormFile } from \"../formFileComp/formFile\";\r\n\r\nimport AppContext from \"../../context\";\r\nimport { fetchedPageData } from \"../../config\";\r\nimport {\r\n  sortObject,\r\n  maintainEmptyElement,\r\n  maintainEmptyElements,\r\n} from \"../../services/objects_manipulation\";\r\n\r\nconst cloneDeep = require(\"clone-deep\");\r\n/*\r\nAPPUNTI FORM\r\n\r\n <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>\r\n              TEXT\r\n            </Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"PLACEHOLDER TEXT\" />\r\n            <Form.Text className=\"text-muted\">\r\n              LABEL\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\ntipi consentiti nel form control:\r\ntext | number (verifica del numero automatica) | email (verifica email automatica) | file | checkbox\r\n\r\n*/\r\n\r\nexport default function AddMeasurementsPage(props) {\r\n  //get resource and id from url params\r\n  const resource = \"measurements\";\r\n  //get from attribute from search param\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [samples, setSamples] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n\r\n  //redirect hook\r\n  const navigate = useNavigate();\r\n  //type of input to post resources\r\n  const [postType, setPostType] = useState(\"form\");\r\n  //message for user\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n  //formValues\r\n  const [formValues, setFormValues] = useState(cloneDeep(addFields[resource]));\r\n  //disabled\r\n  const [disabledFields, setDisabledFields] = useState({});\r\n\r\n  //protocols\r\n  const [features, setFeatures] = useState();\r\n  const [feature, setFeature] = useState(\"\");\r\n\r\n  //file upload state\r\n  const [file, setFile] = useState(undefined);\r\n  const [contentHeader, setContentHeader] = useState(null);\r\n  const [contentBody, setContentBody] = useState(null);\r\n  const [contentPlain, setContentPlain] = useState(null);\r\n\r\n  const context = useContext(AppContext);\r\n  const myFetched = context.fetched;\r\n\r\n  /////////////FETCH REQUIRED RESOURCES\r\n  const fetchData = async (res) => {\r\n    if (myFetched.data[res] !== undefined) return;\r\n    // get the data from the api\r\n    try {\r\n      const response = await get_generic(res, { limit: 100 });\r\n      myFetched.UpdateData(\r\n        response.docs.map((e) => e._id),\r\n        res\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (fetchedPageData[resource] !== undefined) {\r\n      Object.values(fetchedPageData[resource]).forEach((e) => fetchData(e));\r\n    }\r\n  }, []);\r\n\r\n  //useeffect to get resource if required\r\n  useEffect(() => {\r\n    const fetchData = async (qs = {}) => {\r\n      // get the protocols data from the api\r\n      try {\r\n        const response = await get_generic(\"features\", qs);\r\n\r\n        setFeatures(response.docs.map((e) => e._id));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    const qs = { limit: 100 };\r\n    fetchData(qs);\r\n  }, [props, searchParams]);\r\n\r\n  //return if page shouldn't be rendered\r\n  if (addFields[resource] === undefined)\r\n    return <div>This entity cannot be posted</div>;\r\n\r\n  //handle changes\r\n  const handleChanges = (val, path) => {\r\n    let tmpVals = cloneDeep(formValues);\r\n    let formValuesPtr = tmpVals;\r\n\r\n    let i;\r\n    let lastIndexNumber = -1;\r\n    for (i = 0; i < path.length - 1; i++) {\r\n      formValuesPtr = formValuesPtr[path[i]];\r\n      if (typeof path[i] === \"number\") lastIndexNumber = i;\r\n    }\r\n    if (typeof path[i] === \"number\") lastIndexNumber = i;\r\n    formValuesPtr[path[i]] = val;\r\n    //check if an array is present\r\n    if (lastIndexNumber !== -1) {\r\n      //only string and numbers are allowed as item, with this version\r\n      const item = typeof val === \"number\" ? NaN : \"\";\r\n      tmpVals = maintainEmptyElement(\r\n        tmpVals,\r\n        path.slice(0, lastIndexNumber),\r\n        addFields,\r\n        resource,\r\n        item\r\n      );\r\n    }\r\n    setFormValues(tmpVals);\r\n  };\r\n\r\n  const handleDeleteItemArray = (path) => {\r\n    let val = cloneDeep(formValues);\r\n    let tmpPtr = val;\r\n\r\n    let i;\r\n    for (i = 0; i < path.length - 1; i++) {\r\n      if (path[i] === undefined) break;\r\n      tmpPtr = tmpPtr[path[i]];\r\n    }\r\n\r\n    const removed = tmpPtr.splice(path[i], 1);\r\n\r\n    const item = typeof removed[0] === \"number\" ? NaN : \"\";\r\n    val = maintainEmptyElement(\r\n      val,\r\n      path.slice(0, i),\r\n      addFields,\r\n      resource,\r\n      item\r\n    );\r\n    setFormValues(val);\r\n  };\r\n  //handle way selector to post new entity\r\n  const handleTypeSelect = (eventKey) => {\r\n    setPostType(eventKey);\r\n    setMsg(\"\");\r\n    setIsError(false);\r\n  };\r\n\r\n  //handle changes to selected feature\r\n  const handleFeatureChange = async (e) => {\r\n    e.preventDefault();\r\n    const selectedFeature = e.target.value;\r\n    const fst = { _id: selectedFeature };\r\n    const qs = { filter: JSON.stringify(fst) };\r\n    const res = await get_generic(\"features\", qs);\r\n    const feature = res.docs[0];\r\n\r\n    const items = feature.items;\r\n\r\n    const samples = [];\r\n    const tmp = addSample(samples, items);\r\n    setSamples(tmp);\r\n    setItems(items);\r\n    setFeature(selectedFeature);\r\n    return;\r\n  };\r\n\r\n  const addSample = (samples, items) => {\r\n    const values = [];\r\n    const tmpSample = cloneDeep(samples);\r\n    items.forEach((item) => {\r\n      if (item.type === \"number\") {\r\n        if (item.dimension === 0)\r\n          values.push({ name: item.name, value: NaN, type: item.type });\r\n        else values.push([{ name: item.name, value: NaN, type: item.type }]);\r\n      } else if (item.type === \"text\") {\r\n        if (item.dimension === 0)\r\n          values.push({ name: item.name, value: \"\", type: item.type });\r\n        else values.push([{ name: item.name, value: \"\", type: item.type }]);\r\n      } else if (item.type === \"enum\") {\r\n        if (item.dimension === 0)\r\n          values.push({\r\n            name: item.name,\r\n            value: \"\",\r\n            enumValues: item.range,\r\n            type: item.type,\r\n          });\r\n        else\r\n          values.push([\r\n            {\r\n              name: item.name,\r\n              value: \"\",\r\n              enumValues: item.range,\r\n              type: item.type,\r\n            },\r\n          ]);\r\n      }\r\n    });\r\n    tmpSample.push({ values: values });\r\n    return tmpSample;\r\n  };\r\n\r\n  //post the body for forms\r\n  const postBody = async (e) => {\r\n    e.preventDefault();\r\n    //deep clone formValues\r\n    let token = undefined;\r\n    let body = cloneDeep(formValues);\r\n    let tmpSamples = samples.map((sample) => {\r\n      return { values: sample.values.map((v) => v.value) };\r\n    });\r\n    if (body.token !== undefined) {\r\n      token = body.token;\r\n      delete body.token;\r\n    }\r\n    removeDefaultElements(body);\r\n    body[\"feature\"] = feature;\r\n    body[\"samples\"] = tmpSamples;\r\n    //let tmpformValues = cloneDeep(body);\r\n\r\n    let res;\r\n    try {\r\n      const resp = await post_generic(resource, JSON.stringify(body), token);\r\n      res = resp.response;\r\n      setMsg(res.statusText);\r\n      setIsError(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      res = error.error.response;\r\n      //add details\r\n      setMsg(\r\n        error.error.response.data.message +\r\n          \" : \" +\r\n          error.error.response.data.details\r\n      );\r\n      setIsError(true);\r\n    }\r\n\r\n    if (res.status === 200) {\r\n      window.alert(\"Measurement successufully posted!\");\r\n      navigate(\"/\" + resource);\r\n    }\r\n  };\r\n\r\n  const back = (e) => {\r\n    e.preventDefault();\r\n    navigate(-1);\r\n  };\r\n\r\n  const postFile = async (e) => {\r\n    e.preventDefault();\r\n    if (file === undefined) {\r\n      setMsg(locale().no_file);\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    let res;\r\n    if (file.name.endsWith(\".csv\")) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n\r\n      try {\r\n        const resp = await post_file_generic(resource, formData);\r\n\r\n        res = resp.response;\r\n        setMsg(res.statusText);\r\n        setIsError(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n\r\n        res = error.error.response;\r\n        //add details\r\n        setMsg(\r\n          error.error.response.data.message +\r\n            \" : \" +\r\n            error.error.response.data.details\r\n        );\r\n        setIsError(true);\r\n      }\r\n    }\r\n    if (file.name.endsWith(\".json\")) {\r\n      try {\r\n        const resp = await post_generic(resource, contentPlain, undefined);\r\n        res = resp.response;\r\n        setMsg(res.statusText);\r\n        setIsError(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        res = error.error.response;\r\n        //add details\r\n        setMsg(\r\n          error.error.response.data.message +\r\n            \" : \" +\r\n            error.error.response.data.details\r\n        );\r\n        setIsError(true);\r\n      }\r\n    }\r\n\r\n    if (res.status === 200) {\r\n      window.alert(\"Measurement successufully posted!\");\r\n      navigate(\"/\" + resource);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <header className=\"page-header\">\r\n        Add resource &nbsp;\r\n        <b>{resource}</b>\r\n      </header>\r\n      <main className=\"page-content\">\r\n        <Nav\r\n          justify\r\n          variant=\"tabs\"\r\n          className=\"justify-content-center\"\r\n          onSelect={handleTypeSelect}\r\n          defaultActiveKey=\"form\"\r\n        >\r\n          {addTypes[resource].includes(\"form\") && (\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"form\">Form</Nav.Link>\r\n            </Nav.Item>\r\n          )}\r\n\r\n          {addTypes[resource].includes(\"file\") &&\r\n            searchParams.get(\"from\") === null && (\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"file\">File</Nav.Link>\r\n              </Nav.Item>\r\n            )}\r\n        </Nav>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#fff\",\r\n            borderRadius: 2 + \"px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"rgba(18, 54, 81, 0.9)\",\r\n            borderWidth: 1 + \"px\",\r\n            width: 100 + \"%\",\r\n            height: \"fit-content\",\r\n          }}\r\n        >\r\n          {postType === \"form\" && features !== undefined && (\r\n            <div style={{ margin: 5 + \"px\" }}>\r\n              <Form.Select\r\n                aria-label={locale().select + \" feature\"}\r\n                onChange={handleFeatureChange}\r\n                value={feature}\r\n              >\r\n                <option>{locale().select} feature</option>\r\n                {React.Children.toArray(\r\n                  features.map((e) => {\r\n                    return <option value={e}>{e}</option>;\r\n                  })\r\n                )}\r\n              </Form.Select>\r\n              <hr />\r\n              <Container fluid>\r\n                <Row>\r\n                  <b>Samples :{samples.length}</b>\r\n                </Row>\r\n                <br />\r\n                {React.Children.toArray(\r\n                  samples.map((sample, i) => {\r\n                    return (\r\n                      <Row\r\n                        style={{\r\n                          padding: 10,\r\n                        }}\r\n                      >\r\n                        <Accordion defaultActiveKey=\"0\">\r\n                          <Accordion.Item eventKey={i}>\r\n                            <Accordion.Header>\r\n                              <b>\r\n                                <i>Sample [{i}]</i>\r\n                              </b>\r\n                            </Accordion.Header>\r\n                            <Accordion.Body>\r\n                              {React.Children.toArray(\r\n                                Object.values(sample.values).map((entr) => {\r\n                                  return (\r\n                                    <Row\r\n                                      style={{\r\n                                        borderBottomStyle: \"solid\",\r\n                                        borderBottomWidth: 1 + \"px\",\r\n                                        marginBottom: 5 + \"px\",\r\n                                        padding: 10,\r\n                                      }}\r\n                                    >\r\n                                      <Col\r\n                                        sm={2}\r\n                                        style={{\r\n                                          borderRightStyle: \"dotted\",\r\n                                          borderRightWidth: 1 + \"px\",\r\n                                        }}\r\n                                      >\r\n                                        <b>\r\n                                          <i>{entr.name}</i>\r\n                                        </b>\r\n                                      </Col>\r\n                                      <Col sm={2}>\r\n                                        {entr.type === \"enum\" ? (\r\n                                          <Form.Select\r\n                                            aria-label={\r\n                                              locale().select + \" \" + entr.name\r\n                                            }\r\n                                            //value={entr.value}\r\n                                            onChange={(e) => {\r\n                                              e.preventDefault();\r\n                                              entr.value = e.target.value;\r\n                                            }}\r\n                                          >\r\n                                            <option value=\"\">\r\n                                              {locale().select +\r\n                                                \" \" +\r\n                                                entr.name}\r\n                                            </option>\r\n                                            {React.Children.toArray(\r\n                                              entr.enumValues.map((e) => {\r\n                                                return (\r\n                                                  <option value={e}>{e}</option>\r\n                                                );\r\n                                              })\r\n                                            )}\r\n                                          </Form.Select>\r\n                                        ) : entr.type === \"text\" ? (\r\n                                          <Form.Control\r\n                                            type=\"text\"\r\n                                            //value={entr.value}\r\n                                            id={entr.name}\r\n                                            onChange={(e) => {\r\n                                              e.preventDefault();\r\n                                              entr.value = e.target.value;\r\n                                            }}\r\n                                            aria-label={\r\n                                              locale().enter + \" \" + entr.name\r\n                                            }\r\n                                          />\r\n                                        ) : (\r\n                                          <Form.Control\r\n                                            type=\"number\"\r\n                                            id={entr.name}\r\n                                            //value={isNaN(entr.value) ? \"\" : entr.value}\r\n                                            onChange={(e) => {\r\n                                              e.preventDefault();\r\n                                              entr.value = parseInt(\r\n                                                e.target.value,\r\n                                                10\r\n                                              );\r\n                                            }}\r\n                                            aria-label={\r\n                                              locale().enter + \" \" + entr.name\r\n                                            }\r\n                                          />\r\n                                        )}\r\n                                      </Col>\r\n                                    </Row>\r\n                                  );\r\n                                })\r\n                              )}\r\n                            </Accordion.Body>\r\n                          </Accordion.Item>\r\n                        </Accordion>\r\n                      </Row>\r\n                    );\r\n                  })\r\n                )}\r\n                {samples.length !== 0 && (\r\n                  <Button\r\n                    variant=\"link\"\r\n                    onClick={() => {\r\n                      const sampl = addSample(samples, items);\r\n                      setSamples(sampl);\r\n                    }}\r\n                  >\r\n                    <i\r\n                      className=\"fa fa-plus-circle\"\r\n                      aria-hidden=\"true\"\r\n                      title={\"Add sample\"}\r\n                      style={{\r\n                        width: 30 + \"px\",\r\n                        height: 30 + \"px\",\r\n                        marginRight: 10 + \"px\",\r\n                        opacity: 0.85,\r\n                      }}\r\n                    ></i>\r\n                  </Button>\r\n                )}\r\n              </Container>\r\n              <hr />\r\n              <br />\r\n              <FormManager\r\n                values={formValues}\r\n                resource={resource}\r\n                functionalFields={addFields}\r\n                disabledFields={disabledFields}\r\n                handleChangesCallback={handleChanges}\r\n                arrayDeleteCallback={handleDeleteItemArray}\r\n                submitFunction={postBody}\r\n                backFunction={back}\r\n              />\r\n\r\n              <br />\r\n\r\n              <font\r\n                style={{\r\n                  marginLeft: 5 + \"px\",\r\n                  color: isError ? \"red\" : \"black\",\r\n                }}\r\n              >\r\n                {msg}\r\n              </font>\r\n            </div>\r\n          )}\r\n          {postType === \"file\" && (\r\n            <div style={{ margin: 5 + \"px\" }}>\r\n              <FormFile\r\n                submitFunction={postFile}\r\n                backFunction={back}\r\n                setContentBody={setContentBody}\r\n                setContentHeader={setContentHeader}\r\n                setContentPlain={setContentPlain}\r\n                setFile={setFile}\r\n                contentPlain={contentPlain}\r\n                contentHeader={contentHeader}\r\n                contentBody={contentBody}\r\n              />\r\n              <font\r\n                style={{\r\n                  marginLeft: 5 + \"px\",\r\n                  color: isError ? \"red\" : \"black\",\r\n                }}\r\n              >\r\n                {msg}\r\n              </font>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Accordion,\r\n  Table,\r\n  ProgressBar,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport locale from \"../../../common/locale\";\r\n\r\nexport default function UpdateHistoryFileForm(props) {\r\n  /*\r\n  console.log({\r\n    postHistory: props.postHistory,\r\n    arraySepRef: props.arraySepRef,\r\n\r\n    csvSep: props.csvSep,\r\n    floatSepRef: props.floatSepRef,\r\n    ovdRef: props.ovdRef,\r\n    setCsvHeader: props.setCsvHeader,\r\n    setCsvContent: props.setCsvContent,\r\n    setFile: props.setFile,\r\n    file: props.file,\r\n    csvContent: props.csvContent,\r\n    csvHeader: props.csvHeader,\r\n  });*/\r\n  if (\r\n    props.postHistory === undefined ||\r\n    props.arraySepRef === undefined ||\r\n    props.floatSepRef === undefined ||\r\n    props.csvSep === undefined ||\r\n    props.setCsvSep === undefined ||\r\n    props.ovdRef === undefined ||\r\n    props.setCsvHeader === undefined ||\r\n    props.setCsvContent === undefined ||\r\n    props.setFile === undefined ||\r\n    props.file === undefined ||\r\n    props.csvContent === undefined ||\r\n    props.csvHeader === undefined\r\n  )\r\n    return \"Loading\";\r\n\r\n  return (\r\n    <Form onSubmit={props.postHistory}>\r\n      <Row style={{ paddingTop: 10 + \"px\" }}>\r\n        <Col sm={1}>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Select\r\n              aria-label=\"CSV Column Separator\"\r\n              value={props.csvSep}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                props.setCsvSep(e.target.value);\r\n              }}\r\n            >\r\n              <option value=\",\">,</option>\r\n              <option value=\";\">;</option>\r\n              <option value=\"-\">-</option>\r\n              <option value=\"\\t\">\\t</option>\r\n            </Form.Select>\r\n            <Form.Text className=\"text-muted\">Column separator</Form.Text>\r\n          </Form.Group>\r\n        </Col>\r\n        <Col sm={1}>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Select\r\n              aria-label=\"CSV Array separator\"\r\n              ref={props.arraySepRef}\r\n            >\r\n              <option value=\";\">;</option>\r\n              <option value=\",\">,</option>\r\n              <option value=\".\">.</option>\r\n              <option value=\"-\">-</option>\r\n            </Form.Select>\r\n            <Form.Text className=\"text-muted\">Array separator</Form.Text>\r\n          </Form.Group>\r\n        </Col>\r\n        <Col sm={1}>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Select\r\n              aria-label=\"CSV Floating Point separator\"\r\n              ref={props.floatSepRef}\r\n            >\r\n              <option value=\".\">.</option>\r\n              <option value=\",\">,</option>\r\n            </Form.Select>\r\n            <Form.Text className=\"text-muted\">\r\n              Floating Point separator\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm={3}>\r\n          <Form.Control\r\n            className=\"mb-3\"\r\n            type=\"file\"\r\n            accept=\".csv\"\r\n            label=\"File\"\r\n            onChange={(e) => {\r\n              const _file = e.target.files[0];\r\n              //props.setFile(file);\r\n              const fileReader = new FileReader();\r\n\r\n              fileReader.onloadend = () => {\r\n                const _content = fileReader.result;\r\n\r\n                const regex = new RegExp(\"\\\\r\", \"g\");\r\n                let splitted = _content.replace(regex, \"\").split(\"\\n\");\r\n\r\n                props.setCsvHeader(splitted[0]);\r\n                props.setFile(_file);\r\n                splitted.splice(0, 1);\r\n                props.setCsvContent(splitted);\r\n              };\r\n              fileReader.readAsText(_file);\r\n            }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              label=\"Update duplicate steps in History Experiment\"\r\n              ref={props.ovdRef}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      {props.csvContent !== null && (\r\n        <Row>\r\n          <Accordion>\r\n            <Accordion.Item eventKey=\"0\">\r\n              <Accordion.Header>\r\n                {locale().preview + \" - \" + props.file.name}\r\n              </Accordion.Header>\r\n              <Accordion.Body style={{ overflow: \"scroll\", height: 70 + \"vh\" }}>\r\n                <Table responsive striped bordered hover>\r\n                  <thead>\r\n                    <tr>\r\n                      {React.Children.toArray(\r\n                        props.csvHeader.split(props.csvSep).map((h) => {\r\n                          return <th>{h}</th>;\r\n                        })\r\n                      )}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {React.Children.toArray(\r\n                      props.csvContent.map((e) => {\r\n                        return (\r\n                          <tr>\r\n                            {React.Children.toArray(\r\n                              e.split(props.csvSep).map((h) => {\r\n                                return <td>{h}</td>;\r\n                              })\r\n                            )}\r\n                          </tr>\r\n                        );\r\n                      })\r\n                    )}\r\n                  </tbody>\r\n                </Table>\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          </Accordion>\r\n        </Row>\r\n      )}\r\n      <Row>\r\n        <Col>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            {locale().submit}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Accordion,\r\n  Table,\r\n  ProgressBar,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport locale from \"../../../common/locale\";\r\nimport { FormManager } from \"../../formManager/formManager\";\r\n\r\nexport default function UpdateHistoryFileForm(props) {\r\n  if (\r\n    props.experiments === undefined ||\r\n    props.postHistory === undefined ||\r\n    props.values === undefined ||\r\n    props.ovdRef === undefined ||\r\n    props.handleExperimentChange === undefined ||\r\n    props.handleChanges === undefined\r\n  )\r\n    return \"Loading\";\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row style={{ paddingTop: 10 + \"px\", paddingBottom: 10 + \"px\" }}>\r\n        <Col>\r\n          {props.experiments.length !== 0 && (\r\n            <Form.Select\r\n              aria-label={locale().select + \" experiment\"}\r\n              onChange={props.handleExperimentChange}\r\n            >\r\n              <option>\r\n                {locale().select} experiment to update its history\r\n              </option>\r\n              {React.Children.toArray(\r\n                props.experiments.map((e) => {\r\n                  return <option value={e[\"_id\"]}>{e[\"_id\"]}</option>;\r\n                })\r\n              )}\r\n            </Form.Select>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              label=\"Update step if already present in History Experiment\"\r\n              ref={props.ovdRef}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <FormManager\r\n            values={props.values}\r\n            resource={\"updateHistory\"}\r\n            functionalFields={{ updateHistory: {} }}\r\n            disabledFields={{ fields: { name: true } }}\r\n            handleChangesCallback={props.handleChanges}\r\n            arrayDeleteCallback={() => {}}\r\n            submitFunction={props.postHistory}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Accordion,\r\n  Table,\r\n  ProgressBar,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport locale from \"../../../common/locale\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { languages } from \"../../../config\";\r\nimport {\r\n  testLogger,\r\n  logsManager,\r\n  postHistoryFile,\r\n  postHistoryStep,\r\n} from \"../../../services/operation_tool_services\";\r\nimport AppContext from \"../../../context\";\r\nimport \"../../page/page.scss\";\r\nimport UpdateHistoryFileForm from \"./updateHistoryFileForm\";\r\nimport UpdateHistoryForm from \"./updateHistoryForm\";\r\nimport { get_generic } from \"../../../services/http_operations\";\r\nimport { maintainEmptyElement } from \"../../../services/objects_manipulation\";\r\nimport { removeDefaultElements } from \"../../../services/misc_functions\";\r\nconst cloneDeep = require(\"clone-deep\");\r\n\r\nconst ovdRef = React.createRef();\r\nconst csvSepRef = React.createRef();\r\nconst arraySepRef = React.createRef();\r\nconst floatSepRef = React.createRef();\r\n\r\nexport default function UpdateHistoryPage() {\r\n  const [csvContent, setCsvContent] = useState(null);\r\n  const [csvHeader, setCsvHeader] = useState(null);\r\n  const myLogs = useContext(AppContext).logs;\r\n  const [now, setNow] = useState(0);\r\n  const [file, setFile] = useState(null);\r\n  //type of input to post resources\r\n  const [postType, setPostType] = useState(\"file\");\r\n\r\n  const [operationindex, setOperationIndex] = useState(0);\r\n  const [experiments, setExperiments] = useState([]);\r\n  const [experiment, setExperiment] = useState(\"\");\r\n  const [values, setValues] = useState({});\r\n  //message for user\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const [csvSep, setCsvSep] = useState(\",\");\r\n\r\n  useEffect(() => {\r\n    const getExperiments = async () => {\r\n      const res = await get_generic(\"experiments\", {});\r\n\r\n      setExperiments(res.docs);\r\n    };\r\n    getExperiments();\r\n  }, []);\r\n\r\n  const postHistory = async (e) => {\r\n    e.preventDefault();\r\n    const csvSep = csvSepRef.current.value;\r\n    const arraySep = arraySepRef.current.value;\r\n    const floatSep = floatSepRef.current.value;\r\n    const ovd = ovdRef.current.checked;\r\n\r\n    if (csvSep === \"\" || arraySep === \"\" || floatSep === \"\") {\r\n      setMsg(\"Please, define all the separators\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    if (csvSep === arraySep || csvSep === floatSep || arraySep === floatSep) {\r\n      setMsg(\"All the separators should have different values\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    if (file === null || file === undefined) {\r\n      setMsg(\"Please, choose a file\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    setMsg(\"\");\r\n    setIsError(false);\r\n    setNow(0);\r\n    myLogs.PushLog({\r\n      type: \"info\",\r\n      msg: \"-------Begin Upload Operation \" + operationindex + \"-------\\n\",\r\n    });\r\n    await postHistoryFile(file, ovd, csvSep, arraySep, floatSep);\r\n    myLogs.PushLog({\r\n      type: \"info\",\r\n      msg: \"-------End Upload Operation \" + operationindex + \"-------\\n\\n\",\r\n    });\r\n    setOperationIndex((prev) => prev + 1);\r\n    setNow(100);\r\n  };\r\n\r\n  const postStep = async (e) => {\r\n    e.preventDefault();\r\n    let tmpValues = cloneDeep(values);\r\n    tmpValues = removeDefaultElements(tmpValues);\r\n\r\n    if (experiment === undefined || experiment === \"\") {\r\n      setMsg(\"Please, select one experiment\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n\r\n    tmpValues[\"fields\"] = tmpValues[\"fields\"].filter(\r\n      (e) =>\r\n        (typeof e.value === \"number\" && !isNaN(e.value)) ||\r\n        (typeof e.value === \"string\" && e.value !== \"\") ||\r\n        (Array.isArray(e.value) && e.value.length !== 0)\r\n    );\r\n\r\n    if (isNaN(tmpValues[\"step\"])) {\r\n      setMsg(\"Please, define the step number\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    if (tmpValues[\"fields\"].length === 0) {\r\n      setMsg(\"Please, define at least one field\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    //reset error message\r\n    setMsg(\"\");\r\n    setIsError(false);\r\n\r\n    const body = {};\r\n    const add = [];\r\n    add.push(tmpValues);\r\n    body[\"history\"] = { add };\r\n\r\n    setNow(0);\r\n    myLogs.PushLog({\r\n      type: \"info\",\r\n      msg: \"-------Begin Upload Operation \" + operationindex + \"-------\\n\",\r\n    });\r\n    await postHistoryStep(experiment, body, ovdRef.current.checked);\r\n    myLogs.PushLog({\r\n      type: \"info\",\r\n      msg: \"-------End Upload Operation \" + operationindex + \"-------\\n\\n\",\r\n    });\r\n    setOperationIndex((prev) => prev + 1);\r\n    setNow(100);\r\n  };\r\n\r\n  //handle way selector to post new entity\r\n  const handleTypeSelect = (eventKey) => {\r\n    setPostType(eventKey);\r\n    setMsg(\"\");\r\n    setIsError(false);\r\n  };\r\n\r\n  const handleExperimentChange = async (e) => {\r\n    e.preventDefault();\r\n    const experiment = experiments.filter((ex) => ex._id === e.target.value)[0];\r\n    const expProtocol = experiment.protocol;\r\n    const fst = { _id: expProtocol };\r\n    const qs = { filter: JSON.stringify(fst) };\r\n    const res = await get_generic(\"protocols\", qs);\r\n    const protocol = res.docs[0];\r\n    let fields = [];\r\n    const protoFields = protocol.topics.map((el) => el.fields);\r\n    protoFields.forEach((el) => {\r\n      fields = fields.concat(\r\n        el.map((obj) => {\r\n          let val =\r\n            obj.type === \"scalar\"\r\n              ? NaN\r\n              : obj.type === \"vector\"\r\n              ? [NaN]\r\n              : obj.type === \"text\"\r\n              ? \"\"\r\n              : //TODO else\r\n                \"\";\r\n          return { name: obj.name, value: val };\r\n        })\r\n      );\r\n    });\r\n    const _values = {};\r\n    _values[\"step\"] = NaN;\r\n    _values[\"fields\"] = fields;\r\n    setValues(_values);\r\n    setExperiment(e.target.value);\r\n  };\r\n\r\n  //handle changes\r\n  const handleChanges = (val, path) => {\r\n    let tmpVals = cloneDeep(values);\r\n    let valuesPtr = tmpVals;\r\n\r\n    let i;\r\n    let lastIndexNumber = -1;\r\n    for (i = 0; i < path.length - 1; i++) {\r\n      valuesPtr = valuesPtr[path[i]];\r\n      if (typeof path[i] === \"number\") lastIndexNumber = i;\r\n    }\r\n    if (typeof path[i] === \"number\") lastIndexNumber = i;\r\n    valuesPtr[path[i]] = val;\r\n    //check if an array is present\r\n    if (lastIndexNumber !== -1) {\r\n      //only string and numbers are allowed as item, with this version\r\n      const item = typeof val === \"number\" ? NaN : \"\";\r\n\r\n      tmpVals = maintainEmptyElement(\r\n        tmpVals,\r\n        path.slice(0, lastIndexNumber),\r\n        undefined,\r\n        undefined,\r\n        item\r\n      );\r\n    }\r\n    setValues(tmpVals);\r\n  };\r\n  return (\r\n    <div className=\"page\">\r\n      <header className=\"page-header\">Update Experiment History</header>\r\n      <main className=\"page-content\">\r\n        <Nav\r\n          justify\r\n          variant=\"tabs\"\r\n          className=\"justify-content-center\"\r\n          onSelect={handleTypeSelect}\r\n          defaultActiveKey=\"file\"\r\n        >\r\n          <Nav.Item>\r\n            <Nav.Link eventKey=\"form\">Form</Nav.Link>\r\n          </Nav.Item>\r\n\r\n          <Nav.Item>\r\n            <Nav.Link eventKey=\"file\">File</Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        <Container fluid>\r\n          {postType === \"form\" && (\r\n            <Row>\r\n              <UpdateHistoryForm\r\n                postHistory={postStep}\r\n                values={values}\r\n                ovdRef={ovdRef}\r\n                handleExperimentChange={handleExperimentChange}\r\n                handleChanges={handleChanges}\r\n                experiments={experiments}\r\n              />\r\n            </Row>\r\n          )}\r\n          {postType === \"file\" && (\r\n            <Row>\r\n              <UpdateHistoryFileForm\r\n                postHistory={postHistory}\r\n                arraySepRef={arraySepRef}\r\n                csvSep={csvSep}\r\n                setCsvSep={setCsvSep}\r\n                floatSepRef={floatSepRef}\r\n                ovdRef={ovdRef}\r\n                setCsvHeader={setCsvHeader}\r\n                setCsvContent={setCsvContent}\r\n                setFile={setFile}\r\n                file={file}\r\n                csvContent={csvContent}\r\n                csvHeader={csvHeader}\r\n              />\r\n            </Row>\r\n          )}\r\n          <Row>\r\n            <Col>\r\n              <font\r\n                style={{\r\n                  marginLeft: 5 + \"px\",\r\n                  color: isError ? \"red\" : \"black\",\r\n                }}\r\n              >\r\n                {msg}\r\n              </font>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ paddingTop: 10 + \"px\", paddingBottom: 10 + \"px\" }}>\r\n            <Col>\r\n              <ProgressBar\r\n                now={now}\r\n                label={`${now}%`}\r\n                variant={now === 100 ? \"success\" : \"info\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ paddingTop: 10 + \"px\", paddingBottom: 10 + \"px\" }}>\r\n            <Col>\r\n              <b>Operation logs</b>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <textarea\r\n                id=\"logger\"\r\n                style={{ resize: \"both\" }}\r\n                cols=\"100\"\r\n                rows=\"10\"\r\n                readOnly\r\n                value={myLogs.logs\r\n                  .map((l) => l.msg)\r\n                  .reverse()\r\n                  .join(\"-\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Accordion,\r\n  Table,\r\n  ProgressBar,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport locale from \"../../../common/locale\";\r\nimport { downloadHistory } from \"../../../services/operation_tool_services\";\r\nimport AppContext from \"../../../context\";\r\nimport \"../../page/page.scss\";\r\nimport { get_generic } from \"../../../services/http_operations\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { downloadZip } from \"client-zip\";\r\nconst cloneDeep = require(\"clone-deep\");\r\n\r\nconst experimentSelectRef = React.createRef();\r\nconst csvSepRef = React.createRef();\r\nconst arraySepRef = React.createRef();\r\nconst floatSepRef = React.createRef();\r\nconst compressRef = React.createRef();\r\n\r\nexport default function DownloadHistoryPage() {\r\n  const myLogs = useContext(AppContext).logs;\r\n  const [now, setNow] = useState(0);\r\n\r\n  const [operationindex, setOperationIndex] = useState(0);\r\n  const [experiments, setExperiments] = useState([]);\r\n  //message for user\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  //fetch experiments (limit 100) on load\r\n  useEffect(() => {\r\n    const getExperiments = async () => {\r\n      const res = await get_generic(\"experiments\", { limit: 100 });\r\n\r\n      setExperiments(res.docs);\r\n    };\r\n    getExperiments();\r\n  }, []);\r\n\r\n  //download history as CSV fules\r\n  const downloadHistoryHandler = async () => {\r\n    const csvSep = csvSepRef.current.value;\r\n    const arrSep = arraySepRef.current.value;\r\n    const floatSep = floatSepRef.current.value;\r\n    const exp = experimentSelectRef.current.value;\r\n    const expIndex = experimentSelectRef.current.selectedIndex;\r\n    const compress = compressRef.current.checked;\r\n\r\n    if (expIndex === 0) {\r\n      setMsg(\"Please, select one or All experiment\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    if (csvSep === \"\" || floatSep === \"\" || arrSep === \"\") {\r\n      setMsg(\"Please, define all the separators\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    if (csvSep === arrSep || csvSep === floatSep || arrSep === floatSep) {\r\n      setMsg(\"Please, define three different separators\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    setMsg(\"\");\r\n    setIsError(false);\r\n    setNow(0);\r\n\r\n    myLogs.PushLog({\r\n      type: \"info\",\r\n      msg: \"-------Begin Download Operation \" + operationindex + \"-------\\n\",\r\n    });\r\n\r\n    const files = [];\r\n    if (exp === \"All\") {\r\n      for (let i = 0; i < experiments.length; i++) {\r\n        const f = await downloadHistory(\r\n          experiments[i]._id,\r\n          csvSep,\r\n          arrSep,\r\n          floatSep,\r\n          compress\r\n        );\r\n        files.push(f);\r\n        setNow(((i + 1) / experiments.length) * 100);\r\n      }\r\n    } else {\r\n      const f = await downloadHistory(exp, csvSep, arrSep, floatSep, compress);\r\n      files.push(f);\r\n    }\r\n    if (compress === true) {\r\n      const content = await downloadZip(files).blob();\r\n      saveAs(content, \"experiments_history.zip\");\r\n      myLogs.PushLog({\r\n        type: \"info\",\r\n        msg: \"Files compressed into experiments_history.zip archive\\n\",\r\n      });\r\n    }\r\n    myLogs.PushLog({\r\n      type: \"info\",\r\n      msg: \"-------End Download Operation \" + operationindex + \"-------\\n\\n\",\r\n    });\r\n    setOperationIndex((prev) => prev + 1);\r\n    setNow(100);\r\n  };\r\n\r\n  //download experiments (already fetched from DB) as json files\r\n  const downloadDataHandler = async () => {\r\n    const exp = experimentSelectRef.current.value;\r\n    const expIndex = experimentSelectRef.current.selectedIndex;\r\n    const compress = compressRef.current.checked;\r\n\r\n    if (expIndex === 0) {\r\n      setMsg(\"Please, select one or All experiment\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    setMsg(\"\");\r\n    setIsError(false);\r\n    setNow(0);\r\n    myLogs.PushLog({\r\n      type: \"info\",\r\n      msg: \"-------Begin Download Operation \" + operationindex + \"-------\\n\",\r\n    });\r\n\r\n    const files = [];\r\n    if (exp === \"All\") {\r\n      for (let i = 0; i < experiments.length; i++) {\r\n        const blob = new Blob([JSON.stringify(experiments[i], null, 4)]);\r\n        const fileName = experiments[i]._id + \".json\";\r\n\r\n        let file = null;\r\n        if (compress === undefined || compress === false) {\r\n          saveAs(blob, fileName);\r\n        } else {\r\n          file = new File([blob], fileName);\r\n        }\r\n\r\n        files.push(file);\r\n\r\n        myLogs.PushLog({\r\n          type: \"info\",\r\n          msg: fileName + \" successfully downloaded.\\n\",\r\n        });\r\n        setNow(((i + 1) / experiments.length) * 100);\r\n      }\r\n    } else {\r\n      const experiment = experiments.filter((ex) => ex._id === exp)[0];\r\n      const blob = new Blob([JSON.stringify(experiment, null, 4)]);\r\n      const fileName = exp + \".json\";\r\n\r\n      let file = null;\r\n      if (compress === undefined || compress === false) {\r\n        saveAs(blob, fileName);\r\n      } else {\r\n        file = new File([blob], fileName);\r\n      }\r\n      files.push(file);\r\n      myLogs.PushLog({\r\n        type: \"info\",\r\n        msg: fileName + \" successfully downloaded.\\n\",\r\n      });\r\n    }\r\n    if (compress === true) {\r\n      const content = await downloadZip(files).blob();\r\n      saveAs(content, \"experiments_data.zip\");\r\n      myLogs.PushLog({\r\n        type: \"info\",\r\n        msg: \"Files compressed into experiments_data.zip archive\\n\",\r\n      });\r\n    }\r\n\r\n    myLogs.PushLog({\r\n      type: \"info\",\r\n      msg: \"-------End Download Operation \" + operationindex + \"-------\\n\\n\",\r\n    });\r\n    setOperationIndex((prev) => prev + 1);\r\n    setNow(100);\r\n  };\r\n  return (\r\n    <div className=\"page\">\r\n      <header className=\"page-header\">Download Experiment History</header>\r\n      <main className=\"page-content\">\r\n        <Container fluid>\r\n          <Row>\r\n            <Col>\r\n              <b>Select experiment</b>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={3}>\r\n              {experiments.length !== 0 && (\r\n                <Form.Select\r\n                  aria-label={locale().select + \" experiment\"}\r\n                  ref={experimentSelectRef}\r\n                >\r\n                  <option>{locale().select} experiment</option>\r\n                  <option>All</option>\r\n                  {React.Children.toArray(\r\n                    experiments.map((e) => {\r\n                      return <option value={e[\"_id\"]}>{e[\"_id\"]}</option>;\r\n                    })\r\n                  )}\r\n                </Form.Select>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  label=\"Compress files in a single .zip archive\"\r\n                  ref={compressRef}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Row>\r\n                <Col>\r\n                  <b>Download history as csv</b>\r\n                </Col>\r\n              </Row>\r\n              <Row style={{ paddingTop: 10 + \"px\" }}>\r\n                <Col sm={2}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Select\r\n                      aria-label=\"CSV Column Separator\"\r\n                      ref={csvSepRef}\r\n                    >\r\n                      <option value=\",\">,</option>\r\n                      <option value=\";\">;</option>\r\n                      <option value=\"-\">-</option>\r\n                      <option value=\"\\t\">\\t</option>\r\n                    </Form.Select>\r\n                    <Form.Text className=\"text-muted\">\r\n                      Column separator\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Select\r\n                      aria-label=\"CSV Array separator\"\r\n                      ref={arraySepRef}\r\n                    >\r\n                      <option value=\";\">;</option>\r\n                      <option value=\",\">,</option>\r\n                      <option value=\".\">.</option>\r\n                      <option value=\"-\">-</option>\r\n                    </Form.Select>\r\n                    <Form.Text className=\"text-muted\">\r\n                      Array separator\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Select\r\n                      aria-label=\"CSV Floating Point separator\"\r\n                      ref={floatSepRef}\r\n                    >\r\n                      <option value=\".\">.</option>\r\n                      <option value=\",\">,</option>\r\n                    </Form.Select>\r\n                    <Form.Text className=\"text-muted\">\r\n                      Floating Point separator\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Button variant=\"primary\" onClick={downloadHistoryHandler}>\r\n                    Download History\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col>\r\n              <Row>\r\n                <Col>\r\n                  <b>Download experiment data as json</b>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Button variant=\"primary\" onClick={downloadDataHandler}>\r\n                    Download Data\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <font\r\n                style={{\r\n                  marginLeft: 5 + \"px\",\r\n                  color: isError ? \"red\" : \"black\",\r\n                }}\r\n              >\r\n                {msg}\r\n              </font>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ paddingTop: 10 + \"px\", paddingBottom: 10 + \"px\" }}>\r\n            <Col>\r\n              <ProgressBar\r\n                now={now}\r\n                label={`${now}%`}\r\n                variant={now === 100 ? \"success\" : \"info\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ paddingTop: 10 + \"px\", paddingBottom: 10 + \"px\" }}>\r\n            <Col>\r\n              <b>Operation logs</b>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <textarea\r\n                id=\"logger\"\r\n                style={{ resize: \"both\" }}\r\n                cols=\"100\"\r\n                rows=\"10\"\r\n                readOnly\r\n                value={myLogs.logs\r\n                  .map((l) => l.msg)\r\n                  .reverse()\r\n                  .join(\"-\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Accordion,\r\n  Table,\r\n  ProgressBar,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport locale from \"../../../common/locale\";\r\nimport { deleteHistorySteps } from \"../../../services/operation_tool_services\";\r\nimport AppContext from \"../../../context\";\r\nimport \"../../page/page.scss\";\r\nimport { get_generic } from \"../../../services/http_operations\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { downloadZip } from \"client-zip\";\r\nconst cloneDeep = require(\"clone-deep\");\r\n\r\nconst stepsStringRef = React.createRef();\r\n\r\nexport default function RemoveStepsPage() {\r\n  const myLogs = useContext(AppContext).logs;\r\n  const [now, setNow] = useState(0);\r\n\r\n  const [operationindex, setOperationIndex] = useState(0);\r\n  const [experiments, setExperiments] = useState([]);\r\n  const [experiment, setExperiment] = useState();\r\n  const [steps, setSteps] = useState();\r\n  const [experimentIndex, setExperimentIndex] = useState();\r\n  //message for user\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  //fetch experiments (limit 100) on load\r\n  useEffect(() => {\r\n    const getExperiments = async () => {\r\n      const res = await get_generic(\"experiments\", { limit: 100 });\r\n\r\n      setExperiments(res.docs);\r\n    };\r\n    getExperiments();\r\n  }, []);\r\n\r\n  //handle changes on select experiment\r\n  const handleExperimentChange = (e) => {\r\n    const selected = e.target.value;\r\n    if (e.target.selectedIndex === 0) {\r\n      setExperiment(undefined);\r\n      setSteps(undefined);\r\n      return;\r\n    }\r\n    const _experiment = experiments.filter((ex) => ex._id === selected)[0];\r\n    const _steps = _experiment.history.map((h) => h.step).sort((a, b) => a - b);\r\n\r\n    setExperiment(selected);\r\n    setSteps(_steps);\r\n  };\r\n\r\n  //download history as CSV fules\r\n  const deleteStepsHandler = async () => {\r\n    if (experimentIndex === 0) {\r\n      setMsg(\"Please, select one or All experiment\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n\r\n    let toRemove = [];\r\n    let newSteps = [...steps];\r\n    let definedSteps;\r\n    const stepsString = stepsStringRef.current.value;\r\n    if (stepsString === \"\") {\r\n      setMsg(\"Please, define at least one step\");\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    //check for all \"*\" option\r\n    if (stepsString.includes(\"*\")) {\r\n      toRemove = toRemove.concat(steps);\r\n      newSteps = [];\r\n    }\r\n    //otherwise check each step\r\n    else {\r\n      definedSteps = stepsString.replace(/\\s/g, \"\").split(\",\");\r\n      definedSteps.forEach((e) => {\r\n        if (e.includes(\"/\")) {\r\n          const interval = e.split(\"-\");\r\n          //search for the begin and end into step array\r\n          const begin = steps.indexOf(parseInt(interval[0]));\r\n          const end = steps.indexOf(parseInt(interval[1]));\r\n          if (begin !== -1 && end !== -1) {\r\n            for (let i = begin; i <= end; i++) {\r\n              toRemove.push(steps[i]);\r\n              newSteps.splice(newSteps.indexOf(steps[i]), 1);\r\n            }\r\n          }\r\n        } else if (steps.includes(parseInt(e))) {\r\n          toRemove.push(parseInt(e));\r\n          newSteps.splice(newSteps.indexOf(parseInt(e)), 1);\r\n        }\r\n      });\r\n    }\r\n    if (toRemove.length === 0) {\r\n      setMsg(\r\n        \"The experiment history does not contain specified steps, please check them\"\r\n      );\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    setMsg(\"\");\r\n    setIsError(false);\r\n    setNow(0);\r\n\r\n    myLogs.PushLog({\r\n      type: \"info\",\r\n      msg: \"-------Begin Remove Operation \" + operationindex + \"-------\\n\",\r\n    });\r\n    await deleteHistorySteps(experiment, toRemove);\r\n    myLogs.PushLog({\r\n      type: \"info\",\r\n      msg: \"-------End Remove Operation \" + operationindex + \"-------\\n\\n\",\r\n    });\r\n\r\n    setOperationIndex((prev) => prev + 1);\r\n    setNow(100);\r\n    setSteps(newSteps);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <header className=\"page-header\">\r\n        Remove steps from Experiment History\r\n      </header>\r\n      <main className=\"page-content\">\r\n        <Container fluid>\r\n          <Row style={{ paddingBottom: 10 + \"px\" }}>\r\n            <Col>\r\n              <b>Select experiment</b>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ paddingBottom: 10 + \"px\" }}>\r\n            <Col sm={3}>\r\n              {experiments.length !== 0 && (\r\n                <Form.Select\r\n                  aria-label={locale().select + \" experiment\"}\r\n                  onChange={handleExperimentChange}\r\n                >\r\n                  <option>{locale().select} experiment</option>\r\n                  {React.Children.toArray(\r\n                    experiments.map((e) => {\r\n                      return <option value={e[\"_id\"]}>{e[\"_id\"]}</option>;\r\n                    })\r\n                  )}\r\n                </Form.Select>\r\n              )}\r\n            </Col>\r\n            {experiment !== undefined && (\r\n              <Col>\r\n                History steps contained into <b>{experiment}</b>: [{\" \"}\r\n                {steps.join(\", \")} ]\r\n              </Col>\r\n            )}\r\n          </Row>\r\n          {steps !== undefined && steps.length === 0 && (\r\n            <Row style={{ paddingBottom: 10 + \"px\" }}>\r\n              <Col>\r\n                The selected experiment's history does not contain steps\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          {steps !== undefined && steps.length !== 0 && (\r\n            <>\r\n              <Row style={{ paddingBottom: 10 + \"px\" }}>\r\n                <Col sm={3}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Control type={\"text\"} ref={stepsStringRef} />\r\n                    <Form.Text className=\"text-muted\">\r\n                      Define the steps comma separated.\r\n                      <br /> intervals can be specified as begin-end (included).{\" \"}\r\n                      <br /> to remove all steps enter * <br />\r\n                      Example: 2, 3, 5-7\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Button onClick={deleteStepsHandler}>Remove steps</Button>\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          )}\r\n          <Row style={{ paddingBottom: 10 + \"px\" }}>\r\n            <Col>\r\n              <font\r\n                style={{\r\n                  marginLeft: 5 + \"px\",\r\n                  color: isError ? \"red\" : \"black\",\r\n                }}\r\n              >\r\n                {msg}\r\n              </font>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ paddingTop: 10 + \"px\", paddingBottom: 10 + \"px\" }}>\r\n            <Col>\r\n              <ProgressBar\r\n                now={now}\r\n                label={`${now}%`}\r\n                variant={now === 100 ? \"success\" : \"info\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ paddingTop: 10 + \"px\", paddingBottom: 10 + \"px\" }}>\r\n            <Col>\r\n              <b>Operation logs</b>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <textarea\r\n                id=\"logger\"\r\n                style={{ resize: \"both\" }}\r\n                cols=\"100\"\r\n                rows=\"10\"\r\n                readOnly\r\n                value={myLogs.logs\r\n                  .map((l) => l.msg)\r\n                  .reverse()\r\n                  .join(\"-\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  NavLink,\r\n  Routes,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport { AuthPage } from \"./components/authPage/authPage.comp\";\r\nimport { HomePage } from \"./components/homePage/homePage\";\r\nimport { NotFoundPage } from \"./components/notFoundPage/notFoundPage\";\r\nimport Navigation from \"./components/navigation/navigation.comp\";\r\nimport Page from \"./components/page/page\";\r\nimport ProfilePage from \"./components/profilePage/profilePage\";\r\nimport \"./App.scss\";\r\nimport UnauthorizedPage from \"./components/unauthorizedPage/unauthorizedPage\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport NotificationBar from \"./components/notificationBar/notificationBar\";\r\nimport HorizontalNavigationBar from \"./components/horizontalNavigationBar/horizontalNavigationBar\";\r\nimport AppContext from \"./context\";\r\n\r\nimport {\r\n  notificationManager,\r\n  get_generic,\r\n  SetAPIUrl,\r\n} from \"./services/http_operations\";\r\nimport { logsManager } from \"./services/operation_tool_services\";\r\nimport MobilePlaceholderPage from \"./components/mobilePlaceholderPage/mobilePlaceholderPage\";\r\nimport EditContentPage from \"./components/editContentPage/editContentPage\";\r\nimport AddPage from \"./components/addPage/addPage\";\r\nimport AddExperimentPage from \"./components/addExperimentPage/addExperimentPage\";\r\nimport { layout } from \"./config\";\r\nimport AddMeasurementsPage from \"./components/addMeasurementsPage/addMeasurementsPage\";\r\nimport UpdateHistoryPage from \"./components/OperationToolPages/updateSteps/updateHistory\";\r\nimport DownloadPage from \"./components/OperationToolPages/download/downloadExperiment\";\r\nimport cloneDeep from \"clone-deep\";\r\nimport RemoveStepsPage from \"./components/OperationToolPages/removeSteps/removeSteps\";\r\n/*\r\n    notifications follow this schema\r\n\r\n    {\r\n        name: \"notification name\"\r\n        time: \"\"\r\n        message: \"this is a message\"\r\n    }\r\n\r\n\r\n*/\r\n\r\ninterface INotification {\r\n  type: string;\r\n  time: string;\r\n  msg: string;\r\n}\r\n\r\nfunction App() {\r\n  const [notifications, setNotifications] = useState<INotification[]>([]);\r\n  const [logs, setLogs] = useState<INotification[]>([]);\r\n  const [types, setTypes] = useState<Object | undefined>();\r\n  const [data, setData] = useState<Object>({});\r\n\r\n  let layoutRef = React.useRef<string | null>();\r\n  const tkn = localStorage.getItem(\"token\");\r\n\r\n  //set api url to run https operations\r\n  SetAPIUrl();\r\n\r\n  ////////////////NOTIFICATION MANAGEMENT FRAGMENT\r\n  //function to push a new notification at the beginning of the list\r\n  function PushNotification(obj: INotification) {\r\n    setNotifications((prev) => [obj].concat(prev));\r\n    //notifications.push(obj);\r\n  }\r\n\r\n  //function to remove a single notification from list\r\n  function RemoveNotification(id: number) {\r\n    let tmp = [...notifications];\r\n    tmp.splice(id, 1);\r\n    setNotifications(tmp);\r\n  }\r\n\r\n  //function to clear notifications list\r\n  function ClearNotifications() {\r\n    setNotifications([]);\r\n  }\r\n\r\n  const notificationManagement = {\r\n    notifications: notifications,\r\n    PushNotification,\r\n    RemoveNotification,\r\n    ClearNotifications,\r\n  };\r\n\r\n  notificationManager.ClearNotifications = ClearNotifications;\r\n  notificationManager.PushNotification = PushNotification;\r\n  notificationManager.RemoveNotification = RemoveNotification;\r\n\r\n  ///////////////END NOTIFICATION MANAGEMENT FRAGMENT\r\n\r\n  ///////////////FETCHED TYPES AND DATA MANAGEMENT FRAGMENT\r\n  //function to push a new notification at the beginning of the list\r\n  function UpdateData(fetched: string[], key: string) {\r\n    setData((prev) => {\r\n      return { ...prev, [key]: [...fetched] };\r\n    });\r\n  }\r\n\r\n  //use effect to fetch static data from the server /types\r\n  useEffect(() => {\r\n    // declare the async data fetching function\r\n    const fetchTypes = async () => {\r\n      // get the data from the api\r\n      try {\r\n        const response = await get_generic(\"types\", {}, \"\");\r\n\r\n        setTypes(response.response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    //if types has been already set, ignore it\r\n    if (types !== undefined) return;\r\n    // call the function\r\n    try {\r\n      fetchTypes();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    // make sure to catch any error\r\n  }, []);\r\n\r\n  const fetchedManagement = {\r\n    types: types,\r\n    data: data,\r\n    UpdateData: UpdateData,\r\n  };\r\n  ///////////////END FETCHED TYPES MANAGEMENT FRAGMENT\r\n\r\n  ///////////////////////////LOGGER MANAGEMENT FRAGMENT\r\n  //function to push a new notification at the beginning of the list\r\n  function PushLog(obj: INotification) {\r\n    setLogs((prev) => [obj].concat(prev));\r\n    let textarea = document.getElementById(\"logger\");\r\n    if (textarea !== null && textarea !== undefined)\r\n      textarea.scrollTop = textarea.scrollHeight;\r\n  }\r\n  //function to remove a single notification from list\r\n  function RemoveLog(id: number) {\r\n    let tmp = [...logs];\r\n    tmp.splice(id, 1);\r\n    setLogs(tmp);\r\n  }\r\n\r\n  //function to clear notifications list\r\n  function ClearLogs() {\r\n    setLogs([]);\r\n  }\r\n\r\n  const logsManagement = {\r\n    logs: logs,\r\n    PushLog,\r\n    RemoveLog,\r\n    ClearLogs,\r\n  };\r\n\r\n  logsManager.ClearLogs = ClearLogs;\r\n  logsManager.PushLog = PushLog;\r\n  logsManager.RemoveLog = RemoveLog;\r\n  ///////////////////////////END LOGGER MANAGEMENT FRAGMENT\r\n\r\n  //mobile view only allowed to be vertical\r\n  if (/Mobi/i.test(window.navigator.userAgent) == true) {\r\n    layoutRef.current = \"vertical\";\r\n  } else {\r\n    layoutRef.current = layout;\r\n  }\r\n\r\n  //not logged => show auth page\r\n  if (tkn === null)\r\n    return (\r\n      <div className=\"app\">\r\n        <Router>\r\n          <Routes>\r\n            <Route path=\"/\" element={<AuthPage />} />\r\n            <Route\r\n              path=\"/add/tenants\"\r\n              element={<AddPage resource={\"tenants\"} />}\r\n            />\r\n            <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n          </Routes>\r\n        </Router>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        notifications: notificationManagement,\r\n        fetched: fetchedManagement,\r\n        logs: logsManagement,\r\n      }}\r\n    >\r\n      <Router>\r\n        <Container\r\n          fluid\r\n          style={{\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            height: 100 + \"vh\",\r\n            width: 99 + \"vw\",\r\n          }}\r\n        >\r\n          {layoutRef.current === \"horizontal\" ? (\r\n            <Row style={{ padding: 0 }}>\r\n              <HorizontalNavigationBar />\r\n            </Row>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Row\r\n            style={{\r\n              padding: 0,\r\n            }}\r\n          >\r\n            {layoutRef.current === \"vertical\" ? (\r\n              <Col md=\"auto\" style={{ padding: 0, minWidth: 250 + \"px\" }}>\r\n                <Navigation />\r\n              </Col>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {/Mobi/i.test(window.navigator.userAgent) == true && (\r\n              <Col md=\"auto\" style={{ padding: 0 }}>\r\n                <NotificationBar />\r\n              </Col>\r\n            )}\r\n            <Col style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n              <Routes>\r\n                <Route path=\"/\" element={<HomePage />} />\r\n                <Route path=\"/home\" element={<HomePage />} />\r\n                <Route path=\"/viewProfile\" element={<ProfilePage />} />\r\n                <Route\r\n                  path=\"/add/experiments/\"\r\n                  element={<AddExperimentPage />}\r\n                />\r\n                <Route\r\n                  path=\"/add/measurements/\"\r\n                  element={<AddMeasurementsPage />}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/edit/:resource/:id\"\r\n                  element={<EditContentPage />}\r\n                />\r\n                <Route path=\"/downloadexperiment\" element={<DownloadPage />} />\r\n                <Route path=\"/updatehistory\" element={<UpdateHistoryPage />} />\r\n                <Route path=\"/removesteps\" element={<RemoveStepsPage />} />\r\n                <Route path=\"/add/:resource/\" element={<AddPage />} />\r\n                <Route path=\"/:page\" element={<Page res=\":page\" />} />\r\n\r\n                <Route path=\"/unauthorized\" element={<UnauthorizedPage />} />\r\n                <Route path=\"/404\" element={<NotFoundPage />} />\r\n\r\n                <Route path=\"*\" element={<Navigate to=\"/404\" replace />} />\r\n              </Routes>\r\n            </Col>\r\n            {layoutRef.current === \"vertical\" &&\r\n              /Mobi/i.test(window.navigator.userAgent) == false && (\r\n                <Col md=\"auto\" style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                  <NotificationBar />\r\n                </Col>\r\n              )}\r\n          </Row>\r\n        </Container>\r\n      </Router>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}
{
	"info": {
		"_postman_id": "f3274ad4-71d8-40b0-92eb-f2c008c9889c",
		"name": "Measurify",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "56096"
	},
	"item": [
		{
			"name": "INFO",
			"item": [
				{
					"name": "LOGIN as SuperAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "API docs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"demo\", jsonData);",
									"tests[\"demo = \" + jsonData] = true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/docs",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"docs"
							]
						}
					},
					"response": []
				},
				{
					"name": "API docs HTML",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"demo\", jsonData);",
									"tests[\"demo = \" + jsonData] = true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/docs.html",
							"host": [
								"{{url}}"
							],
							"path": [
								"docs.html"
							]
						}
					},
					"response": []
				},
				{
					"name": "API error codes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"demo\", jsonData);",
									"tests[\"demo = \" + jsonData] = true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/errors",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"errors"
							]
						}
					},
					"response": []
				},				
				{
					"name": "API types",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"demo\", jsonData);",
									"tests[\"demo = \" + jsonData] = true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/types",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "API models (Only model registry)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"demo\", jsonData);",
									"tests[\"demo = \" + jsonData] = true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/models",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "API info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"demo\", jsonData);",
									"tests[\"demo = \" + jsonData] = true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/info",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"info"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DEMOS",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST demo contents (tags, features, things, devices, measurements, constraints, scripts, rights)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"if(data.users) pm.environment.set('users', JSON.stringify(data.users));",
									"if(data.tags) pm.environment.set('tags', JSON.stringify(data.tags));",
									"if(data.features) pm.environment.set('features', JSON.stringify(data.features));",
									"if(data.devices) pm.environment.set('devices', JSON.stringify(data.devices));",
									"if(data.things) pm.environment.set('things', JSON.stringify(data.things));",
									"if(data.measurements) pm.environment.set('measurements', JSON.stringify(data.measurements));",
									"if(data.constraints) pm.environment.set('measurements', JSON.stringify(data.constraints));",
									"if(data.scripts) pm.environment.set('scripts', JSON.stringify(data.scripts));",
									"if(data.rights) pm.environment.set('rights', JSON.stringify(data.rights));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/demo",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"demo"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET demo contents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"if(data.users) pm.environment.set('users', JSON.stringify(data.users));",
									"if(data.tags) pm.environment.set('tags', JSON.stringify(data.tags));",
									"if(data.features) pm.environment.set('features', JSON.stringify(data.features));",
									"if(data.devices) pm.environment.set('devices', JSON.stringify(data.devices));",
									"if(data.things) pm.environment.set('things', JSON.stringify(data.things));",
									"if(data.measurements) pm.environment.set('measurements', JSON.stringify(data.measurements));",
									"if(data.constraints) pm.environment.set('measurements', JSON.stringify(data.constraints));",
									"if(data.scripts) pm.environment.set('scripts', JSON.stringify(data.scripts));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/demo",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"demo"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE demo contents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/demo",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"demo"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TENANTS",
			"item": [
				{
					"name": "GET all tenants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('tenant', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "ifhidhfudshuf8"
							}
						],
						"url": {
							"raw": "{{url}}/v1/tenants",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tenants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one tenant",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "ifhidhfudshuf8",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/tenants/{{tenant}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tenants",
								"{{tenant}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new tenant",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"tenant\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "ifhidhfudshuf8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_id\": \"measurify-tenant-test\",\r\n    \"organization\": \"Measurify org\",\r\n    \"address\": \"Measurify Street, Genova\",\r\n    \"email\": \"info@measurify.org\",\r\n    \"phone\": \"+39103218793817\",\r\n    \"admin_username\": \"test-username\",\r\n    \"admin_password\": \"test-password\",\r\n    \"passwordhash\": \"true\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/tenants/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tenants",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as admin on the new tenant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"test-username\",\n\t\"password\" : \"test-password\",\n\t\"tenant\": \"{{tenant}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT a tenant",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"tenant\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "ifhidhfudshuf8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"organization\": \"Measurify org 2\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/tenants/{{tenant}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tenants",
								"{{tenant}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a tenant",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "ifhidhfudshuf8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/tenants/{{tenant}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tenants",
								"{{tenant}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "LOGIN",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\",\n\t\"tenant\": \"meaasurify-default\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN renew the token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as a provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var users = JSON.parse(pm.environment.get(\"users\"));",
									"pm.environment.set('provider_username', users[1].username);",
									"pm.environment.set('provider_password', users[1].password);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"{{provider_username}}\",\n\t\"password\" : \"{{provider_password}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as analyst",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var users = JSON.parse(pm.environment.get(\"users\"));",
									"pm.environment.set('analyst_username', users[2].username);",
									"pm.environment.set('analyst_password', users[2].password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"{{analyst_username}}\",\n\t\"password\" : \"{{analyst_password}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "USERS",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET the list of users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET the list of usernames",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/usernames?filter={\"username\":{\"$regex\": \"user\"}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"usernames"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"username\":{\"$regex\": \"user\"}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new analyst",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"user\", JSON.parse(responseBody)._id);",
									"pm.environment.set(\"username\", JSON.parse(responseBody).username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": " {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"user-username-test-2\",\n\t\"password\" : \"password\",\n\t\"type\" : \"analyst\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a list new users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"username\" : \"user-username-test-1\",\n\t\t\"password\" : \"password\",\n\t\t\"type\" : \"analyst\"\n\t},\n\t{\n\t\t\"username\" : \"user-username-test-2\",\n\t\t\"password\" : \"password\",\n\t\t\"type\" : \"provider\"\n\t},\n\t{\n\t\t\"username\" : \"user-username-test-3\",\n\t\t\"password\" : \"password\",\n\t\t\"type\" : \"provider\"\n\t},\n\t{\n\t\t\"username\" : \"user-username-test-4\",\n\t\t\"password\" : \"password\",\n\t\t\"type\" : \"provider\"\n\t}\n]"
						},
						"url": {
							"raw": "{{url}}/v1/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as new analyst",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"user-username-test-2\",\n\t\"password\" : \"password\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT to modify password (with id)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"new password\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/users/{{user}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"users",
								"{{user}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as user with modified password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"user-username-test-2\",\n\t\"password\" : \"new password\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT to modify password (with username)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"new password 2\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/users/{{username}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"users",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as user with new modified password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"user-username-test-2\",\n\t\"password\" : \"new password 2\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var users = JSON.parse(pm.environment.get(\"users\"));",
									"pm.environment.set('user_id', users[1]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/users/{{user_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ROLES",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all roles",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new role",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"role\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"role0\",\n    \"default\": {\n        \"create\": \"true\",\n        \"read\": \"public_and_owned\",\n        \"update\": \"owned\",\n        \"delete\": \"none\"\n    },\n    \"actions\": [\n        {\n            \"entity\": \"Feature\",\n            \"crud\": {\n                \"create\": \"true\",\n                \"read\": \"all\",\n                \"update\": \"all\",\n                \"delete\": \"all\"\n            }\n        },\n        {\n            \"entity\": \"Device\",\n            \"crud\": {\n                \"create\": \"true\",\n                \"read\": \"all\",\n                \"update\": \"all\",\n                \"delete\": \"all\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/v1/roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET a role",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/roles/{{role}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"roles",
								"{{role}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a list of new roles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"_id\": \"role1\",\r\n        \"default\": {\r\n            \"create\": \"true\",\r\n            \"read\": \"owned\",\r\n            \"update\": \"owned\",\r\n            \"delete\": \"owned\"\r\n        },\r\n        \"actions\": [\r\n            {\r\n                \"entity\": \"Feature\",\r\n                \"crud\": {\r\n                    \"create\": \"true\",\r\n                    \"read\": \"all\",\r\n                    \"update\": \"all\",\r\n                    \"delete\": \"all\"\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"_id\": \"role2\",\r\n        \"default\": {\r\n            \"create\": \"true\",\r\n            \"read\": \"owned\",\r\n            \"update\": \"owned\",\r\n            \"delete\": \"owned\"\r\n        },\r\n        \"actions\": [\r\n            {\r\n                \"entity\": \"Feature\",\r\n                \"crud\": {\r\n                    \"create\": \"true\",\r\n                    \"read\": \"all\",\r\n                    \"update\": \"all\",\r\n                    \"delete\": \"all\"\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"_id\": \"role3\",\r\n        \"default\": {\r\n            \"create\": \"true\",\r\n            \"read\": \"owned\",\r\n            \"update\": \"owned\",\r\n            \"delete\": \"owned\"\r\n        },\r\n        \"actions\": [\r\n            {\r\n                \"entity\": \"Feature\",\r\n                \"crud\": {\r\n                    \"create\": \"true\",\r\n                    \"read\": \"all\",\r\n                    \"update\": \"all\",\r\n                    \"delete\": \"all\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT a role",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"default\":{\n        \"create\":true,\n        \"read\": \"public_and_owned\",\n        \"update\": \"public_and_owned\",\n        \"delete\": \"public_and_owned\"\n    },\n    \"actions\": {\n        \"remove\": [\"Device\"],\n        \"add\": [\n            {\n                \"entity\": \"Thing\",\n                \"crud\": {\n                    \"create\": \"true\",\n                    \"read\": \"all\",\n                    \"update\": \"all\",\n                    \"delete\": \"all\"\n                }\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/v1/roles/{{role}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"roles",
								"{{role}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a role (if not used)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/roles/{{role}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"roles",
								"{{role}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TAGS",
			"item": [				
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all tags",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/tags",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new tag",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"tag\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n\t\"_id\": \"test_tag\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/tags",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET a tag",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/tags/{{tag}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tags",
								"{{tag}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a list of new tags (tagged)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  { \"_id\": \"tagged-tag-1\", \"tags\": [\"{{tag}}\"] },\r\n  { \"_id\": \"tagged-tag-2\", \"tags\": [\"{{tag}}\"] },\r\n  { \"_id\": \"tagged-tag-3\", \"tags\": [\"{{tag}}\"] },\r\n  { \"_id\": \"tagged-tag-4\", \"tags\": [\"{{tag}}\"] }\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/tags",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT a tag",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"visibility\": \"private\",\n    \"tags\": {\n        \"remove\": [],\n        \"add\": [\"tagged-tag-1\", \"tagged-tag-2\"]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/v1/tags/{{tag}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tags",
								"{{tag}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all tags filtered by tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('tag', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/tags?filter={\"tags\": \"{{tag}}\"}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tags"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"tags\": \"{{tag}}\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST tags from csv file",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{url}}/v1/tags/file",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tags",
								"file"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a tag (not used)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/tags/{{tag}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tags",
								"{{tag}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FEATURES",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all features",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('feature', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/features",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET one feature",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/features/{{feature}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"features",
								"{{feature}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new feature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"feature\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"position\",\n    \"items\": [\n    \t{\n        \t\"name\": \"longitude\",\n            \"unit\": \"degree\",\n            \"type\": \"number\",\n            \"dimension\": 0\n        },\n        {\n        \t\"name\": \"latitude\",\n            \"unit\": \"degree\",\n            \"type\": \"number\",\n            \"dimension\": 0\n        }\n    ]\n}\n"
						},
						"url": {
							"raw": "{{url}}/v1/features",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a list of new features",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t    \"_id\": \"heart-rate\",\r\n\t    \"items\": [\r\n\t    \t{\r\n\t        \t\"name\": \"value\",\r\n\t            \"unit\": \"beats-per-minute\",\r\n\t            \"type\": \"number\",\r\n            \t\"dimension\": 0\r\n\t        }\r\n\t    ]\r\n\t},\r\n\t{\r\n\t    \"_id\": \"interbeat-interval\",\r\n\t    \"items\": [\r\n\t    \t{\r\n\t        \t\"name\": \"value\",\r\n\t            \"unit\": \"milliseconds\",\r\n\t            \"type\": \"number\",\r\n            \t\"dimension\": 0\r\n\t        }\r\n\t    ]\r\n\t},\r\n\t{\r\n\t    \"_id\": \"pulse-amplitude\",\r\n\t    \"items\": [\r\n\t    \t{\r\n\t        \t\"name\": \"value\",\r\n\t            \"unit\": \"millivolts\",\r\n\t            \"type\": \"number\",\r\n            \t\"dimension\": 0\r\n\t        }\r\n\t    ]\r\n\t}\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/features",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT a feature",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"new-feature-id\",\n    \"tags\": {\n        \"remove\": [],\n        \"add\": [\n            \"tag1\"\n        ]\n    },\n    \"items\": {\n        \"update\": [\n            {\n                \"name\": \"longitude\",\n                \"new\": {\n                    \"name\": \"height\",\n                    \"unit\": \"m\",\n                    \"type\": \"number\",\n                    \"dimension\": 0\n                }\n            }\n        ],\n        \"add\": [\n            {\n                \"name\": \"weight\",\n                \"unit\": \"kg\",\n                \"type\": \"number\",\n                \"dimension\": 0\n            }\n        ],\n        \"remove\": [\n            \"latitude\"\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/v1/features/{{feature}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"features",
								"{{feature}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST features from csv file",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{url}}/v1/features/file",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"features",
								"file"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a feature (only if not used)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/features/{{feature}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"features",
								"{{feature}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "PROTOCOLS",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all protocols",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('protocol', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/protocols",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"protocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new protocol",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"protocol\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"protocol name\",\n    \"description\": \"protocol description\",\n    \"metadata\": [\n        { \"name\": \"metadata-name-1\", \"description\": \"description metadata 1\", \"type\": \"scalar\"},\n        { \"name\": \"metadata-name-2\", \"description\": \"description metadata 2\", \"type\": \"text\"},\n        { \"name\": \"metadata-name-3\", \"description\": \"description metadata 3\", \"type\": \"scalar\"},\n        { \"name\": \"metadata-name-4\", \"description\": \"description metadata 4\", \"type\": \"vector\"}\n    ],\n    \"topics\": [\n        {\n            \"name\": \"topic name 1\",\n            \"description\": \"topic description 1\",\n            \"fields\": [\n                { \"name\": \"field-1\", \"description\": \"field description 1\", \"type\": \"scalar\"},\n                { \"name\": \"field-2\", \"description\": \"field description 2\", \"type\": \"text\"},\n                { \"name\": \"field-3\", \"description\": \"field description 3\", \"type\": \"vector\"}\n            ]\n        },\n        {\n            \"name\": \"topic name 2\",\n            \"description\": \"topic description 2\",\n            \"fields\": [\n                { \"name\": \"field-4\", \"description\": \"field description 4\", \"type\": \"scalar\"},\n                { \"name\": \"field-5\", \"description\": \"field description 5\", \"type\": \"text\"},\n                { \"name\": \"field-6\", \"description\": \"field description 6\", \"type\": \"vector\"}\n            ]\n        }\n    ] \n}\n"
						},
						"url": {
							"raw": "{{url}}/v1/protocols",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"protocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET one protocol",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/protocols/{{protocol}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"protocols",
								"{{protocol}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT a protocol",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"metadata\": {\n\t    \"remove\": [ \"metadata-name-2\" ]\n    }\n}\n"
						},
						"url": {
							"raw": "{{url}}/v1/protocols/{{protocol}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"protocols",
								"{{protocol}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a protocol (only if not used)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/protocols/{{protocol}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"protocols",
								"{{protocol}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "EXPERIMENTS",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all experiments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('protocol', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/experiments",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"experiments"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new protocol",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"protocol\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"protocol name\",\n    \"description\": \"protocol description\",\n    \"metadata\": [\n        { \"name\": \"metadata-name-1\", \"description\": \"description metadata 1\", \"type\": \"scalar\"},\n        { \"name\": \"metadata-name-2\", \"description\": \"description metadata 2\", \"type\": \"text\"},\n        { \"name\": \"metadata-name-3\", \"description\": \"description metadata 3\", \"type\": \"scalar\"},\n        { \"name\": \"metadata-name-4\", \"description\": \"description metadata 4\", \"type\": \"vector\"}\n    ],\n    \"topics\": [\n        {\n            \"name\": \"topic name 1\",\n            \"description\": \"topic description 1\",\n            \"fields\": [\n                { \"name\": \"field-1\", \"description\": \"field description 1\", \"type\": \"scalar\"},\n                { \"name\": \"field-2\", \"description\": \"field description 2\", \"type\": \"text\"},\n                { \"name\": \"field-3\", \"description\": \"field description 3\", \"type\": \"vector\"}\n            ]\n        },\n        {\n            \"name\": \"topic name 2\",\n            \"description\": \"topic description 2\",\n            \"fields\": [\n                { \"name\": \"field-4\", \"description\": \"field description 4\", \"type\": \"scalar\"},\n                { \"name\": \"field-5\", \"description\": \"field description 5\", \"type\": \"text\"},\n                { \"name\": \"field-6\", \"description\": \"field description 6\", \"type\": \"vector\"}\n            ]\n        }\n    ] \n}\n"
						},
						"url": {
							"raw": "{{url}}/v1/protocols",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"protocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new experiment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"experiment\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"experiment id\",\n    \"description\": \"experiment description\",\n    \"anonymization\": true,\n    \"state\": 1,\n    \"startDate\": \"2022-05-30T07:15:17.396Z\",\n    \"endDate\": \"2022-09-15T18:15:17.396Z\",\n    \"protocol\": \"{{protocol}}\",\n    \"metadata\": [\n        { \"name\": \"metadata-name-1\", \"value\": 10 },\n        { \"name\": \"metadata-name-2\", \"value\": \"value 2\" },\n        { \"name\": \"metadata-name-3\", \"value\": 55 },\n        { \"name\": \"metadata-name-4\", \"value\": [34, 25, 45] }\n    ],\n    \"history\": [\n        {\n            \"step\": 1,\n            \"timestamp\": \"2022-09-15T18:15:17.396Z\",\n            \"fields\": [\n                { \"name\": \"field-1\", \"value\": 55 },\n                { \"name\": \"field-2\", \"value\": \"text value\" },\n                { \"name\": \"field-3\", \"value\": [21, 32, 432] },\n                { \"name\": \"field-4\", \"value\": 13 },\n                { \"name\": \"field-5\", \"value\": \"another text value\" },\n                { \"name\": \"field-6\", \"value\": [324, 432, 432]  }\n            ]\n        },\n        {\n            \"step\": 2,\n            \"timestamp\": \"2022-12-15T18:15:17.396Z\",\n            \"fields\": [\n                { \"name\": \"field-1\", \"value\": 65 },\n                { \"name\": \"field-2\", \"value\": \"text value 2\" },\n                { \"name\": \"field-3\", \"value\": [3, 56] },\n                { \"name\": \"field-4\", \"value\": 33 },\n                { \"name\": \"field-5\", \"value\": \"another text value 2\" },\n                { \"name\": \"field-6\", \"value\": [543, 534, 5656]  }\n            ]\n        }\n    ]\n}\n"
						},
						"url": {
							"raw": "{{url}}/v1/experiments",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"experiments"
							]
						}
					},
					"response": []
				},				
				{
					"name": "GET one experiment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/experiments/{{experiment}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"experiments",
								"{{experiment}}"
							]
						}
					},
					"response": []
				},							
				{
					"name": "GET history steps in csv",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/experiments/{{experiment}}/history",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"experiments",
								"{{experiment}}",
								"history"
							]
						}
					},
					"response": []
				},
								
				{
					"name": "GET history steps in csv with separators",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/experiments/{{experiment}}/history?sep=,&sepArray=;&sepFloat=.",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"experiments",
								"{{experiment}}",
								"history"
							],
							"query": [
								{
									"key": "sep",
									"value": ","
								},
								{
									"key": "sepArray",
									"value": ";"
								},
								{
									"key": "sepFloat",
									"value": "."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD an history element",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"history\": {\n\t    \"add\": [ { \"step\": 3,\n                   \"timestamp\": \"2022-09-15T18:15:17.396Z\",\n                   \"fields\": [\n                        { \"name\": \"field-1\", \"value\": 55 },\n                        { \"name\": \"field-2\", \"value\": \"text value\" },\n                        { \"name\": \"field-3\", \"value\": [21, 32, 432] },\n                        { \"name\": \"field-4\", \"value\": 13 },\n                        { \"name\": \"field-5\", \"value\": \"another text value\" },\n                        { \"name\": \"field-6\", \"value\": [324, 432, 432]  }\n                    ]\n                  } \n                ]\n    }\n}\n"
						},
						"url": {
							"raw": "{{url}}/v1/experiments/{{experiment}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"experiments",
								"{{experiment}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT to modify an experiment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"state\": 0,\n    \"metadata\": {\n        \"update\": [\n            {\n                \"name\": \"metadata-name-1\",\n                \"new\": {\n                    \"name\": \"metadata-name-1\",\n                    \"value\": 12\n                }\n            }\n        ]\n    },\n    \"history\": {\n        \"update\": [\n            {\n                \"step\": 2,\n                \"new\": {\n                    \"step\": 2,\n                    \"timestamp\": \"2022-12-15T18:15:17.396Z\",\n                    \"fields\": [\n                        {\n                            \"name\": \"field-1\",\n                            \"value\": 128\n                        },\n                        {\n                            \"name\": \"field-2\",\n                            \"value\": \"new 1\"\n                        },\n                        {\n                            \"name\": \"field-3\",\n                            \"value\": [\n                                3,\n                                56\n                            ]\n                        },\n                        {\n                            \"name\": \"field-4\",\n                            \"value\": 33\n                        },\n                        {\n                            \"name\": \"field-5\",\n                            \"value\": \"new 2\"\n                        },\n                        {\n                            \"name\": \"field-6\",\n                            \"value\": [\n                                5,\n                                2,\n                                1\n                            ]\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/v1/experiments/{{experiment}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"experiments",
								"{{experiment}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD history steps from csv file",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{url}}/v1/experiments/{{experiment}}/file",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"experiments",
								"{{experiment}}",
								"file"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE an experiment (only if not used)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/experiments/{{experiment}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"experiments",
								"{{experiment}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "THINGS",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all things",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('thing', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/things",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"things"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one thing",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/things/{{thing}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"things",
								"{{thing}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new thing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"thing\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"_id\": \"thing-test\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/things/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"things",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a list of new things",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var tags = JSON.parse(pm.environment.get(\"tags\"));",
									"pm.environment.set('tag1', tags[0]._id);",
									"pm.environment.set('tag2', tags[1]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{ \"_id\": \"thing-test-1\", \"tags\": [\"{{tag1}}\", \"{{tag2}}\"] },\r\n\t{ \"_id\": \"thing-test-2\", \"tags\": [\"{{tag2}}\"] },\r\n\t{ \"_id\": \"thing-test-3\", \"tags\": [\"{{tag1}}\"] },\r\n\t{ \"_id\": \"thing-test-4\", \"tags\": [\"{{tag1}}\", \"{{tag2}}\"] }\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/things",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"things"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT a thing",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"visibility\": \"public\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/v1/things/{{thing}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"things",
								"{{thing}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a thing",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/things/{{thing}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"things",
								"{{thing}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "DEVICES",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('device', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/devices",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET one device",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/devices/{{device}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"devices",
								"{{device}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new device",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"device\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"_id\": \"gps\",\r\n    \"features\": [ \"position\" ],\r\n    \"period\": \"5s\",\r\n    \"cycle\": \"10m\",\r\n    \"retryTime\": \"10s\",\r\n    \"scriptListMaxSize\": 5,\r\n    \"measurementBufferSize\": 20,\r\n    \"issueBufferSize\": 20,\r\n    \"sendBufferSize\": 20,\r\n    \"scriptStatementMaxSize\": 5,\r\n    \"statementBufferSize\": 10,\r\n    \"measurementBufferPolicy\": \"decimation\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/devices/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"devices",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT a device",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"visibility\": \"private\",\n    \"tags\": {\n        \"remove\": [],\n        \"add\": [\"tagged-tag-1\", \"tagged-tag-2\"]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/v1/deviuces/{{device}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"deviuces",
								"{{device}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a list of new devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var tags = JSON.parse(pm.environment.get(\"tags\"));",
									"pm.environment.set('tag1', tags[0]._id);",
									"pm.environment.set('tag2', tags[1]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{ \"_id\": \"device-test-1\", \"features\": [\"{{feature1}}\", \"{{feature2}}\"], \"tags\": [\"{{tag1}}\", \"{{tag2}}\"] },\r\n\t{ \"_id\": \"device-test-2\", \"features\": [\"{{feature1}}\", \"{{feature2}}\"], \"tags\": [\"{{tag2}}\"] },\r\n\t{ \"_id\": \"device-test-3\", \"features\": [\"{{feature1}}\"], \"tags\": [\"{{tag1}}\"] },\r\n\t{ \"_id\": \"device-test-4\", \"features\": [\"{{feature2}}\"], \"tags\": [\"{{tag1}}\", \"{{tag2}}\"] }\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/devices",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a device (only if not used to collect measurements)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/devices/{{device}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"devices",
								"{{device}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "ISSUES",
			"item": [
				{
					"name": "LOGIN as a provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var users = JSON.parse(pm.environment.get(\"users\"));",
									"pm.environment.set('provider_username', users[1].username);",
									"pm.environment.set('provider_password', users[1].password);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"{{provider_username}}\",\n\t\"password\" : \"{{provider_password}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new issue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var devices = JSON.parse(pm.environment.get(\"devices\"));",
									"pm.environment.set('device_id', devices[0]._id);",
									"var current_timestamp = new Date();",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"device\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"device\": \"{{device_id}}\",\r\n    \"date\": \"{{current_timestamp}}\",\r\n    \"message\": \"this is a message\",\r\n    \"type\": \"generic\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/issues/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"issues",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all issues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('issue', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/issues",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET an issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/issues/{{issue}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"issues",
								"{{issue}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT an issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"closed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/v1/issues/{{issue}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"issues",
								"{{issue}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE an issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/v1/issues/{{issue}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"issues",
								"{{issue}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "CONSTRAINTS",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all constraints",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('constraint', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/constraints",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"constraints"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET one constraint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/constraints/{{constraint}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"constraints",
								"{{constraint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new constraint",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var tags = JSON.parse(pm.environment.get(\"tags\"));",
									"var features = JSON.parse(pm.environment.get(\"features\"));",
									"pm.environment.set('tag', tags[0]._id);",
									"pm.environment.set('feature', features[1]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type1\": \"Tag\",\r\n\t\"type2\": \"Feature\",\r\n\t\"element1\": \"{{tag}}\",\r\n\t\"element2\": \"{{feature}}\",\r\n\t\"relationship\": \"dependency\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/constraints/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"constraints",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a list of new constraints",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var tags = JSON.parse(pm.environment.get(\"tags\"));",
									"var features = JSON.parse(pm.environment.get(\"features\"));",
									"pm.environment.set('tag1', tags[0]._id);",
									"pm.environment.set('tag2', tags[1]._id);",
									"pm.environment.set('feature1', features[0]._id);",
									"pm.environment.set('feature2', features[1]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"type1\": \"Feature\",\r\n    \"type2\": \"Tag\",\r\n    \"element1\": \"{{feature1}}\",\r\n    \"element2\": \"{{tag1}}\",\r\n    \"relationship\": \"dependency\"\r\n  },\r\n  {\r\n    \"type1\": \"Tag\",\r\n    \"type2\": \"Feature\",\r\n    \"element1\": \"{{tag1}}\",\r\n    \"element2\": \"{{feature2}}\",\r\n    \"relationship\": \"dependency\"\r\n  },\r\n  {\r\n    \"type1\": \"Tag\",\r\n    \"type2\": \"Feature\",\r\n    \"element1\": \"{{tag2}}\",\r\n    \"element2\": \"{{feature1}}\",\r\n    \"relationship\": \"dependency\"\r\n  },\r\n  {\r\n    \"type1\": \"Feature\",\r\n    \"type2\": \"Feature\",\r\n    \"element1\": \"{{feature2}}\",\r\n    \"element2\": \"{{feature1}}\",\r\n    \"relationship\": \"dependency\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/constraints?verbose=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"constraints"
							],
							"query": [
								{
									"key": "verbose",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a constraint by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/constraints/{{constraint}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"constraints",
								"{{constraint}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FIELDMASK",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new fieldmask",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"fieldmask\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"_id\": \"analyst-mask-2\",\r\n  \"measurement_fields\": [\"samples\", \"startDate\", \"device\"]\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/fieldmasks/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"fieldmasks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT to modify of a fieldmask",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"measurement_fields\": {\r\n\t\"remove\": [\"device\"],\r\n  \t\"add\": [\"endDate\"]\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/fieldmasks/{{fieldmask}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"fieldmasks",
								"{{fieldmask}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT to associate a fieldmask to a user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var users = JSON.parse(pm.environment.get(\"users\"));",
									"pm.environment.set('user', users[2]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"fieldmask\": \"{{fieldmask}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/v1/users/{{user}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"users",
								"{{user}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as user with fieldmask",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"user-analyst-name-1\",\n\t\"password\" : \"analyst-password-1\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all measurements with masked fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('measurement', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "MEASUREMENTS",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all measurements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('measurement', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all measurements in CSV format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "text/csv",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all measurements size",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('measurement', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements/count",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET one measurement",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements/{{measurement}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements",
								"{{measurement}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET only the first two measurements (paginated)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements?limit=2&page=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								},
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET only start date of all measurements (selected)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements?select={\"startDate\":1}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							],
							"query": [
								{
									"key": "select",
									"value": "{\"startDate\":1}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET measurements only from a specific tag (filtered)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements?filter={\"tags\":\"urban\"}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"tags\":\"urban\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET measurements size only from a specific tag (filtered)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements/count?filter={\"tags\":\"urban\"}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements",
								"count"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"tags\":\"urban\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET measurements only from a specific feature (filtered)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements?filter={\"feature\":\"speed\"}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"feature\":\"speed\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET measurements only from a specific feature AND a with a specific tag (filtered)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements?filter=\"$and\":[{\"feature\":\"speed\"}, {\"tags\":\"urban\"}]",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							],
							"query": [
								{
									"key": "filter",
									"value": "\"$and\":[{\"feature\":\"speed\"}, {\"tags\":\"urban\"}]"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET measurements only from a specific feature, baseFeatures, and a with a specific tag (filtered)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements?aggregator=[{\"$lookup\": { \"from\": \"things\", \"localField\": \"relatedThings\", \"foreignField\": \"_id\", \"as\": \"thing_docs\"}},\n{ \"$addFields\": { \"metadata\": \"$thing_docs.metadata\" }},\n{ \"$addFields\": { \"mileage\": \"$metadata.mileage\" }},\n{ \"$addFields\": { \"type\": \"$metadata.type\" }},\n{ \"$match\":{ \"$and\": [{\"type\": \"Ordinary\"},{\"feature\": \"Stat\"},{\"baseFeatures\":  { \"$size\": 1,\"$all\": [\"VehicleSpeed\"] } }]}}] ",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							],
							"query": [
								{
									"key": "aggregator",
									"value": "[{\"$lookup\": { \"from\": \"things\", \"localField\": \"relatedThings\", \"foreignField\": \"_id\", \"as\": \"thing_docs\"}},\n{ \"$addFields\": { \"metadata\": \"$thing_docs.metadata\" }},\n{ \"$addFields\": { \"mileage\": \"$metadata.mileage\" }},\n{ \"$addFields\": { \"type\": \"$metadata.type\" }},\n{ \"$match\":{ \"$and\": [{\"type\": \"Ordinary\"},{\"feature\": \"Stat\"},{\"baseFeatures\":  { \"$size\": 1,\"$all\": [\"VehicleSpeed\"] } }]}}] "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET measurements only from a specific feature OR with a specific tag (filtered)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements?filter=[{\"feature\":\"speed-statistics\"}, {\"tags\":\"automatic\"}]",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							],
							"query": [
								{
									"key": "filter",
									"value": "[{\"feature\":\"speed-statistics\"}, {\"tags\":\"automatic\"}]"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new measurement",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var current_timestamp = new Date();",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"startDate\": \"{{current_timestamp}}\",\r\n\t\"endDate\": \"{{current_timestamp}}\",\r\n\t\"thing\": \"car-test\",\r\n\t\"feature\": \"position\",\r\n\t\"device\": \"gps\",\r\n\t\"samples\": [\r\n\t\t{\r\n\t\t\t\"values\": [80, 10]\r\n\t\t\t}\r\n\t\t],\r\n\t\"tags\":[]\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a list of new measurements",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var current_timestamp = new Date();",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[13.1563809880239,3.4746090967566,1,668,31.3,19.3597744360902,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[12.0088029576339,5.09970767568572,806,139,31.3,20.6303956834532,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[19.2496260683761,0.113796895263035,1260,52,31.3,20.25,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[17.0521572104019,0.510756201646162,1432,47,31.3,20.0558510638298,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[0,0,1604,35,31.3,20,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[7.31194679849342,2.85329428697543,1663,118,31.3,20,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[12.7761494252874,0.706362455991267,1782,58,31.3,20.2068965517241,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[15.469212962963,0.292797630924325,1883,24,31.3,20,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[16.8641516516517,0.0875035749305456,1936,37,31.3,20,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[7.39215203106332,4.78677170688576,2089,186,31.3,20,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[15.750422705314,1.11392768277992,2360,69,31.3,20,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[21.4730257116621,0.780299560797208,2430,121,31.3,20,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.0786868686868,0.827350709696825,2751,110,31.3,20,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[28.1921737213404,0.350575435392229,2862,126,31.3,20,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[28.5417417417418,0.45922413269494,3185,37,31.3,20,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[28.9978427895981,0.12831023817071,3448,47,31.3,20,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[27.6613888888889,0.254335754044991,3825,45,31.3,20,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.3932438794727,0.619162847356931,3883,59,31.3,19.8347457627119,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.8238264767932,0.67408032169169,4034,316,31.3,19.6467563291139,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[30.6094918699187,1.08671657169904,4351,410,31.3,19.5,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[31.2610920852359,0.75626007873541,4772,73,31.3,19.5,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.4653876898481,0.289430990695237,4853,139,31.3,19.5,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[30.2525114155251,0.119154889112271,4994,73,31.3,19.5,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[30.5727686261842,0.584542792313596,5077,516,31.3,19.7843992248062,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.7690900383141,0.379501332604287,5946,145,31.3,20.2025862068966,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[27.3845878136201,0.172978608881249,6260,31,31.3,20.25,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.1648352260075,1.26922647444736,6315,499,31.3,20.4659318637275,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[31.1912037037037,0.697679862446531,7301,24,31.3,21,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[31.7097222222222,0.102484737852544,7449,23,31.3,21,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[31.7545,0.167489127138899,7482,50,31.3,21,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[31.024460909284,1.5173151924719,7542,523,31.3,20.8902963671128,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[32.4355507662835,1.23648247631337,9300,290,31.3,21.6103448275862,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[24.59079218107,0.0761321912173291,10390,27,31.3,21.6064814814815,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[33.3214849108367,2.41747832281529,10486,81,31.3,21.75,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.3534523809524,0.186036826528444,11051,35,31.3,22,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[30.295269726248,0.441018397229973,11483,69,31.3,21.75,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.3335286458333,1.42153426103631,12335,64,31.3,21.5,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[33.3775428921568,0.569997888113548,12614,136,31.3,21.5,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[30.7875816993464,0.133583309555244,13004,136,31.3,21.5,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.1625,0.243079552859191,13352,22,31.3,21.5,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.1329415954416,0.318462919479314,13677,39,31.3,21.4262820512821,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[28.9703525641026,0.171828825922352,13747,26,31.3,21.5,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[31.1642717717717,1.27020450922798,13817,370,31.3,21.5,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[32.3025308641975,0.09610710095239,14188,45,31.3,21.5,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[30.0014915693904,1.22061355358727,14242,514,31.3,21.5,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[8.88569023569024,0.718882878622896,15326,33,31.3,21.5757575757576,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[16.2403174603175,0.189209552676792,15609,35,31.3,21.75,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[19.4999368686869,0.654878824662637,15710,44,31.3,21.90625,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[27.2577599388379,0.634271177092714,16648,109,31.3,22.25,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[30.7633475328363,0.744072273699254,16961,313,31.3,22.2394169329073,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[30.4250595238095,0.622920498995632,17279,770,31.3,22.0496753246753,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.306855867347,0.804384370640155,18057,784,31.3,21.9532844387755,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.7340936739659,0.198256213923975,18911,137,31.3,22,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.0883698092031,0.123156384599698,19074,297,31.3,21.9305555555556,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[25.6299603174603,0.16132477621716,19584,42,31.3,22.25,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[30.4559032235059,0.925851440295042,19801,779,31.3,22.431161745828,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[30.7542605105105,0.547350140881462,20830,74,31.3,23,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[30.6760721247563,0.517723188625181,21171,57,31.3,23.1425438596491,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[31.0582070707071,0.0684597223997769,21344,55,31.3,23.0954545454545,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[29.2298647660818,0.640440836323494,21733,380,31.3,23.29375,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]},\n{\"thing\":\"84189782\",\"feature\":\"Uninfluenced_driving\",\"device\":\"Matlab\",\"samples\":{\"values\":[28.3009738604922,3.85218276318222,22212,763,31.3,23.5135976408912,1,1]},\"tags\":[\"Uninfluenced_driving\",\"Baseline\",\"All\",\"Professional\"]}\n]"
						},
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST measurements from csv file",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "description",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{url}}/v1/measurements/file",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements",
								"file"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a measurement by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/measurements/{{measurement}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements",
								"{{measurement}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a list of measurements with a filter",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/measurements?filter={\"thing\":\"car-test\"}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE ALL measurements",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TIMESERIES",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a thing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"thing\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"_id\": \"car-test\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/things/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"things",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a feature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"feature\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"feature-test\",\n    \"items\": [\n    \t{\n        \t\"name\": \"item-1\",\n            \"unit\": \"unit-1\",\n            \"type\": \"number\",\n            \"dimension\": 0\n        },\n        {\n        \t\"name\": \"item-2\",\n            \"unit\": \"unit-2\",\n            \"type\": \"number\",\n            \"dimension\": 1\n        }\n    ]\n}\n"
						},
						"url": {
							"raw": "{{url}}/v1/features",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a device",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"device\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"_id\": \"device-test\",\r\n    \"features\": [ \"feature-test\"]\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/devices/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"devices",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a measurement",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var current_timestamp = new Date();",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.environment.set('measurement', data._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"thing\": \"car-test\",\r\n\t\"feature\": \"feature-test\",\r\n\t\"device\": \"device-test\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a timesample",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var timestamp = new Date();",
									"postman.setEnvironmentVariable(\"timestamp\", timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.environment.set('timesample', data._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"timestamp\": \"{{timestamp}}\",\r\n    \"values\": [80, [10,5]]\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/measurements/{{measurement}}/timeserie",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements",
								"{{measurement}}",
								"timeserie"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a list of timesamples",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var timestamp = new Date();",
									"",
									"const timestamp_1 = new Date(timestamp)",
									"timestamp_1.setDate(timestamp_1.getDate() + 12)",
									"postman.setEnvironmentVariable(\"timestamp_1\", timestamp_1.toISOString());",
									"",
									"const timestamp_2 = new Date(timestamp)",
									"timestamp_2.setDate(timestamp_2.getDate() + 10)",
									"postman.setEnvironmentVariable(\"timestamp_2\", timestamp_2.toISOString());",
									"",
									"const timestamp_3 = new Date(timestamp)",
									"timestamp_3.setDate(timestamp_3.getDate() + 8)",
									"postman.setEnvironmentVariable(\"timestamp_3\", timestamp_3.toISOString());",
									"",
									"const timestamp_4 = new Date(timestamp)",
									"timestamp_4.setDate(timestamp_4.getDate() + 6)",
									"postman.setEnvironmentVariable(\"timestamp_4\", timestamp_4.toISOString());",
									"",
									"const timestamp_5 = new Date(timestamp)",
									"timestamp_5.setDate(timestamp_5.getDate() + 4)",
									"postman.setEnvironmentVariable(\"timestamp_5\", timestamp_5.toISOString());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n\t    \"timestamp\": \"{{timestamp_1}}\",\r\n        \"values\": [180, [10,5]]\r\n    },\r\n    {\r\n\t    \"timestamp\": \"{{timestamp_2}}\",\r\n        \"values\": [280, [10,5]]\r\n    },\r\n    {\r\n    \t\"timestamp\": \"{{timestamp_3}}\",\r\n        \"values\": [380, [10,5]]\r\n    },\r\n    {\r\n    \t\"timestamp\": \"{{timestamp_4}}\",\r\n        \"values\": [480, [10,5]]\r\n    },\r\n    {\r\n    \t\"timestamp\": \"{{timestamp_5}}\",\r\n        \"values\": [580, [10,5]]\r\n    }\r\n]\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/measurements/{{measurement}}/timeserie",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements",
								"{{measurement}}",
								"timeserie"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET a timeseries",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var timestamp = new Date();",
									"postman.setEnvironmentVariable(\"timestamp\", timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.environment.set('timesample', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"timestamp\": \"{{timestamp}}\",\r\n    \"values\": [80, [10,5]]\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/measurements/{{measurement}}/timeserie",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements",
								"{{measurement}}",
								"timeserie"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET a filterd timeseries",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var timestamp = new Date();",
									"",
									"const timestamp_start = new Date(timestamp)",
									"timestamp_start.setDate(timestamp_start.getDate() + 5)",
									"postman.setEnvironmentVariable(\"timestamp_start\", timestamp_start);",
									"",
									"const timestamp_end = new Date(timestamp)",
									"timestamp_end.setDate(timestamp_end.getDate() + 11)",
									"postman.setEnvironmentVariable(\"timestamp_end\", timestamp_end);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/measurements/{{measurement}}/timeserie?filter={\"timestamp\":{\"$gte\":\"{{timestamp_start}}\", \"$lt\":\"{{timestamp_end}}\"}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements",
								"{{measurement}}",
								"timeserie"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"timestamp\":{\"$gte\":\"{{timestamp_start}}\", \"$lt\":\"{{timestamp_end}}\"}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a timesample",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/measurements/{{measurement}}/timeserie/{{timesample}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements",
								"{{measurement}}",
								"timeserie",
								"{{timesample}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a timeserie",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/measurements/{{measurement}}/timeserie",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements",
								"{{measurement}}",
								"timeserie"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DATASETS",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all datasets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/datasets",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"datasets"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all datasets in CSV format",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "text/csv",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/datasets",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"datasets"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET dataset only from specific thing",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "text/csv",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/v1/datasets?filter={\"thing\":\"thing-test\"}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"datasets"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"thing\":\"thing-test\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET dataset only from specific feature",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/datasets?filter={\"feature\":\"feature-test\"}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"datasets"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"feature\":\"feature-test\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET dataset only from specific thing in Csv format",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "text/csv",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/datasets?filter={\"thing\":\"thing-test\"}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"datasets"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"thing\":\"thing-test\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET dataset in Csv+ format (feature required)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "text/csv+",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/datasets?filter={\"feature\":\"feature-test\"}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"datasets"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"feature\":\"feature-test\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET dataset with specific dataupload",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "text/csv",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/datasets/{{dataupload}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"datasets",
								"{{dataupload}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET dataset with specific dataupload + filter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "text/csv",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/datasets/{{dataupload}}?filter={\"thing\":\"thing-test\"}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"datasets",
								"{{dataupload}}"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"thing\":\"thing-test\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET dataset with tag dataupload + filter in CSV+ format (feature required)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "text/csv+",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/datasets/{{dataupload}}?filter={\"feature\":\"feature-test\"}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"datasets",
								"{{dataupload}}"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"feature\":\"feature-test\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET dataset id  info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/datasets/{{dataupload}}/info",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"datasets",
								"{{dataupload}}",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new dataset in CSV with description file",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "description",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{url}}/v1/datasets",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"datasets"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new dataset in CSV without header with description file",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "description",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{url}}/v1/datasets?header=false",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"datasets"
							],
							"query": [
								{
									"key": "header",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a dataset",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/datasets/{{dataupload}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"datasets",
								"{{dataupload}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SCRIPTS",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all scripts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('script', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/scripts",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"scripts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one script",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/scripts/{{script}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"scripts",
								"{{script}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new script",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var tags = JSON.parse(pm.environment.get(\"tags\"));",
									"pm.environment.set('tag1', tags[0]._id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"script\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"_id\": \"script-test\",\r\n  \"code\": \"this is my test code\",\r\n  \"tags\": [\"{{tag1}}\"]\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/scripts/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"scripts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT to modify of a script",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var tags = JSON.parse(pm.environment.get(\"tags\"));",
									"pm.environment.set('tag1', tags[0]._id);",
									"pm.environment.set('tag2', tags[1]._id);",
									"pm.environment.set('tag3', tags[2]._id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"this is my modified test code\",\r\n  \"visibility\": \"public\",\r\n  \"tags\": {\r\n\t\"remove\": [\"{{tag1}}\"],\r\n  \t\"add\": [\"{{tag2}}\",\"{{tag3}}\"]\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/scripts/{{script}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"scripts",
								"{{script}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT to associate the script to a device",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var devices = JSON.parse(pm.environment.get(\"devices\"));",
									"pm.environment.set('device', devices[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"scripts\": {\n\t\t\"add\": [\"{{script}}\"],\n\t\t\"remove\": []\n\t}\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/v1/devices/{{device}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"devices",
								"{{device}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a list of new scripts",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{ \"_id\": \"script-test-1\", \"code\": \"code test 1\" },\r\n\t{ \"_id\": \"script-test-2\", \"code\": \"code test 2\" },\r\n\t{ \"_id\": \"script-test-3\", \"code\": \"code test 3\" },\r\n\t{ \"_id\": \"script-test-4\", \"code\": \"code test 4\" }\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/scripts",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"scripts"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a script",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/scripts/{{script}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"scripts",
								"{{script}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "texpippot/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "COMPUTATIONS (MAX)",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a thing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"thing\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"_id\": \"thing\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/things/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"things",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a feature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"feature\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"_id\": \"feature\",\r\n   \"items\": [\r\n\t   \t{\r\n\t      \t\"name\": \"item-one\",\r\n\t        \"unit\": \"unit-one\",\r\n\t        \"type\": \"number\",\r\n            \"dimension\": 0\r\n\t    },\r\n\t\t{\r\n\t      \t\"name\": \"item-two\",\r\n\t        \"unit\": \"unit-two\",\r\n\t        \"type\": \"number\",\r\n            \"dimension\": 0\r\n\t    },\r\n\t\t{\r\n\t      \t\"name\": \"item-three\",\r\n\t        \"unit\": \"unit-three\",\r\n\t        \"type\": \"number\",\r\n            \"dimension\": 1\r\n\t    },\r\n\t\t{\r\n\t      \t\"name\": \"item-four\",\r\n\t        \"unit\": \"unit-four\",\r\n\t        \"type\": \"text\"\r\n\t    }\r\n\t]\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/features",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a device",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"_id\": \"device\",\r\n    \"features\": [\"feature\"]\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/devices/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"devices",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST measurements",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{ \n\t\t\"thing\": \"thing\", \n\t\t\"feature\": \"feature\",\n\t\t\"device\": \"device\", \n\t\t\"samples\":  [{ \"values\": [12, 23, [34, 44], \"pippo\"] },\n\t\t\t\t\t { \"values\": [34, 78, [34, 44], \"pluto\"] },\n\t\t\t\t\t { \"values\": [10, 73, [22, 11], \"paperino\"] }]  \n\t},\n\t{ \n\t\t\"thing\": \"thing\", \n\t\t\"feature\": \"feature\",\n\t\t\"device\": \"device\", \n\t\t\"samples\":  [{ \"values\": [45, 43, [32, 12], \"pluto\"] }]  \n\t},\n\t{ \n\t\t\"thing\": \"thing\", \n\t\t\"feature\": \"feature\",\n\t\t\"device\": \"device\", \n\t\t\"samples\":  [{ \"values\": [72, 15, [12, 76], \"paperino\"] }]  \n\t},\n\t{ \n\t\t\"thing\": \"thing\", \n\t\t\"feature\": \"feature\",\n\t\t\"device\": \"device\", \n\t\t\"samples\":  [{ \"values\": [11, 2, [34, 12], \"qui\"] }]  \n\t},\n\t{ \n\t\t\"thing\": \"thing\", \n\t\t\"feature\": \"feature\",\n\t\t\"device\": \"device\", \n\t\t\"samples\":  [{ \"values\": [34, 15, [54, 321], \"quo\"] }]  \n\t},\n\t{ \n\t\t\"thing\": \"thing\", \n\t\t\"feature\": \"feature\",\n\t\t\"device\": \"device\", \n\t\t\"samples\":  [{ \"values\": [12, 23, [22, 1], \"qua\"] }]  \n\t}\n]\n"
						},
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all measurements of thing paginated",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements?filter={\"thing\":\"thing\"}&limit=5&page=1 ",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"thing\":\"thing\"}"
								},
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "page",
									"value": "1 "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a computation to identify max values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"computation\", JSON.parse(responseBody)._id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"_id\": \"Find Max\",\r\n\t\"code\": \"max\",  \r\n\t\"feature\": \"feature\",\r\n\t\"items\": [\"item-one\", \"item-two\"],\r\n\t\"filter\": \"{\\\"thing\\\":\\\"thing\\\", \\\"feature\\\":\\\"feature\\\"}\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/computations",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"computations"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET the computation",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/computations/{{computation}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"computations",
								"{{computation}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE the computation",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/computations/{{computation}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"computations",
								"{{computation}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RIGHTS",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all rights",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('right', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/rights",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"rights"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one right",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/rights/{{right}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"rights",
								"{{right}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new right",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var things = JSON.parse(pm.environment.get(\"things\"));",
									"var users = JSON.parse(pm.environment.get(\"users\"));",
									"pm.environment.set('user', users[0]._id);",
									"pm.environment.set('thing', things[0]._id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"right\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"_id\": \"MyRight\",  \r\n  \"resource\": \"{{thing}}\",\r\n  \"type\": \"Thing\",\r\n  \"user\": \"{{user}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/rights/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"rights",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new right using username",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var things = JSON.parse(pm.environment.get(\"things\"));",
									"var users = JSON.parse(pm.environment.get(\"users\"));",
									"pm.environment.set('username', users[3].username);",
									"pm.environment.set('thing', things[0]._id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"right\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"_id\": \"MyRight2\",    \r\n  \"resource\": \"{{thing}}\",\r\n  \"type\": \"Thing\",\r\n  \"user\": \"{{username}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/rights/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"rights",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT to modify of a right",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var tags = JSON.parse(pm.environment.get(\"tags\"));",
									"pm.environment.set('tag1', tags[0]._id);",
									"pm.environment.set('tag2', tags[1]._id);",
									"pm.environment.set('tag3', tags[2]._id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"visibility\": \"public\",\r\n  \"tags\": {\r\n\t\"remove\": [\"{{tag1}}\"],\r\n  \t\"add\": [\"{{tag2}}\",\"{{tag3}}\"]\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/rights/{{right}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"rights",
								"{{right}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a list of new rights",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var things = JSON.parse(pm.environment.get(\"things\"));",
									"var users = JSON.parse(pm.environment.get(\"users\"));",
									"pm.environment.set('user', users[0]._id);",
									"pm.environment.set('thing1', things[1]._id);",
									"pm.environment.set('thing2', things[2]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n      \"_id\": \"MyRight_1\",  \r\n\t  \"resource\": \"{{thing1}}\",\r\n\t  \"type\": \"Thing\",\r\n\t  \"user\": \"{{user}}\"\r\n\t},\r\n\t{\r\n      \"_id\": \"MyRight_2\",\r\n\t  \"resource\": \"{{thing2}}\",\r\n\t  \"type\": \"Thing\",\r\n\t  \"user\": \"{{user}}\"\r\n\t}\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/rights",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"rights"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a rights",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/rights/{{right}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"rights",
								"{{right}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "GROUPS",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/groups",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"group\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": " {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"_id\": \"group1\",\n  \"users\":[\"user-test-1\",\"user-test-2\"]\n}"
						},
						"url": {
							"raw": "{{url}}/v1/groups",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET a group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/groups/{{group}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"groups",
								"{{group}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a list of new groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"_id\": \"groupA\"\n\t},\n\t{\n\t\t\"_id\": \"groupB\"\n\t},\n\t{\n\t\t\"_id\": \"groupC\"\n\t},\n\t{\n\t\t\"_id\": \"groupD\"\n\t}\n]"
						},
						"url": {
							"raw": "{{url}}/v1/groups",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT a group",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": {\r\n        \"add\": [\r\n            \"user1\",\r\n            \"user2\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/groups/{{group}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"groups",
								"{{group}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST groups from csv file",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{url}}/v1/groups/file",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"groups",
								"file"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a group",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/groups/{{group}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"groups",
								"{{group}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "LOGS",
			"item": [
				{
					"name": "GET Logs with API token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/log",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"log"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ACCESS CONTROL",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST tags",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  { \"_id\": \"tag-1\", \"tags\": [] },\r\n  { \"_id\": \"tag-2\", \"tags\": [] }\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/tags",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST things ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{ \"_id\": \"thing-1\", \"tags\": [\"tag-1\", \"tag-2\"] },\r\n\t{ \"_id\": \"thing-2\", \"tags\": [\"tag-2\"] }\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/things",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"things"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST features",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[ \r\n  { \"_id\": \"feature-1\", \"items\": [{\"name\": \"value\", \"unit\": \"unit\", \"type\": \"number\", \"dimension\": 0}], \"tags\": [\"tag-1\", \"tag-2\"] },\r\n  { \"_id\": \"feature-2\", \"items\": [{\"name\": \"value\", \"unit\": \"unit\", \"type\": \"number\", \"dimension\": 0}], \"tags\": [\"tag-1\"] }\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/features",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var tags = JSON.parse(pm.environment.get(\"tags\"));",
									"pm.environment.set('tag1', tags[0]._id);",
									"pm.environment.set('tag2', tags[1]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{ \"_id\": \"device-1\", \"features\": [\"feature-1\", \"feature-2\"], \"tags\": [\"tag-1\", \"tag-2\"] },\r\n\t{ \"_id\": \"device-2\", \"features\": [\"feature-1\"], \"tags\": [\"tag-2\"] }\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/devices",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.environment.set('analyst-1', data.users[0]._id);",
									"pm.environment.set('analyst-2', data.users[1]._id);",
									"pm.environment.set('provider-1', data.users[2]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[ \n\t{ \"username\" : \"analyst-1\", \"password\" : \"analyst-1\", \"type\" : \"analyst\" },\n\t{ \"username\" : \"analyst-2\", \"password\" : \"analyst-2\", \"type\" : \"analyst\" },\n\t{ \"username\" : \"provider-1\", \"password\" : \"provider-1\", \"type\" : \"provider\" }\n]"
						},
						"url": {
							"raw": "{{url}}/v1/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST rights",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{ \"resource\": \"thing-1\",   \"type\": \"Thing\",   \"user\": \"{{analyst-1}}\" },\r\n\t{ \"resource\": \"device-1\",  \"type\": \"Device\",  \"user\": \"{{analyst-1}}\" },\r\n\t{ \"resource\": \"feature-1\", \"type\": \"Feature\", \"user\": \"{{analyst-2}}\" },\r\n\t{ \"resource\": \"tag-1\",\t   \"type\": \"Tag\",     \"user\": \"{{analyst-2}}\" },\r\n\t{ \"resource\": \"feature-2\", \"type\": \"Feature\", \"user\": \"{{provider-1}}\" }\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/rights",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"rights"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST measurements",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var current_timestamp = new Date();",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{ \"thing\": \"thing-1\", \"feature\": \"feature-1\", \"device\": \"device-1\", \"samples\": [{\"values\":[10]}], \"tags\":[\"tag-1\", \"tag-2\"], \"visibility\": \"private\" },\r\n\t{ \"thing\": \"thing-1\", \"feature\": \"feature-2\", \"device\": \"device-1\", \"samples\": [{\"values\":[10]}], \"tags\":[\"tag-2\"], \"visibility\": \"public\" },\r\n\t{ \"thing\": \"thing-1\", \"feature\": \"feature-1\", \"device\": \"device-2\", \"samples\": [{\"values\":[10]}], \"tags\":[\"tag-1\"], \"visibility\": \"private\" },\r\n\t{ \"thing\": \"thing-1\", \"feature\": \"feature-1\", \"device\": \"device-2\", \"samples\": [{\"values\":[10]}], \"tags\":[\"tag-1\", \"tag-2\"], \"visibility\": \"private\" },\r\n\t{ \"thing\": \"thing-1\", \"feature\": \"feature-1\", \"device\": \"device-1\", \"samples\": [{\"values\":[10]}], \"tags\":[\"tag-1\"], \"visibility\": \"private\" },\r\n\t{ \"thing\": \"thing-2\", \"feature\": \"feature-1\", \"device\": \"device-1\", \"samples\": [{\"values\":[10]}], \"tags\":[\"tag-1\", \"tag-2\"], \"visibility\": \"private\" },\r\n\t{ \"thing\": \"thing-2\", \"feature\": \"feature-2\", \"device\": \"device-1\", \"samples\": [{\"values\":[10]}], \"tags\":[\"tag-2\"], \"visibility\": \"private\" },\r\n\t{ \"thing\": \"thing-2\", \"feature\": \"feature-1\", \"device\": \"device-2\", \"samples\": [{\"values\":[10]}], \"tags\":[\"tag-1\"], \"visibility\": \"private\" },\r\n\t{ \"thing\": \"thing-2\", \"feature\": \"feature-1\", \"device\": \"device-2\", \"samples\": [{\"values\":[10]}], \"tags\":[\"tag-1\", \"tag-2\"], \"visibility\": \"private\" },\r\n\t{ \"thing\": \"thing-2\", \"feature\": \"feature-1\", \"device\": \"device-1\", \"samples\": [{\"values\":[10]}], \"tags\":[\"tag-1\"], \"visibility\": \"private\" }\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin get all measurements (10)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('measurement', data.docs[0]._id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as analyst-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"analyst-1\",\n\t\"password\" : \"analyst-1\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Analist-1 gets just measurements of thing-1 and device-1 (3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('measurement', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as analyst-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"analyst-2\",\n\t\"password\" : \"analyst-2\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Analist-2 gets just measurements of feature-1 and tag-1 (8)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('measurement', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as provider-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"provider-1\",\n\t\"password\" : \"provider-1\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST provider-1 measurements",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var current_timestamp = new Date();",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{ \"thing\": \"thing-1\", \"feature\": \"feature-1\", \"device\": \"device-1\", \"samples\": [{\"values\":[10]}], \"tags\":[\"tag-1\", \"tag-2\"], \"visibility\": \"private\" },\r\n\t{ \"thing\": \"thing-1\", \"feature\": \"feature-2\", \"device\": \"device-1\", \"samples\": [{\"values\":[10]}], \"tags\":[\"tag-2\"], \"visibility\": \"public\" },\r\n\t{ \"thing\": \"thing-2\", \"feature\": \"feature-2\", \"device\": \"device-1\", \"samples\": [{\"values\":[10]}], \"tags\":[\"tag-2\"], \"visibility\": \"private\" }\r\n]"
						},
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "Provider-1 gets just his own or public measurements of feature-2 (3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('measurement', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "REGISTRATION",
			"item": [
				{
					"name": "POST a new self registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"user\", JSON.parse(responseBody)._id);",
									"postman.setEnvironmentVariable(\"email\", JSON.parse(responseBody).email);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"username_test_1\",\n\t\"password\" : \"password_test_1\",\n\t\"email\" : \"berta@elios.unige.it\",\n\t\"type\" : \"analyst\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/self",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"self"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET to enable registration request (link provided by email)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/self/{{user}}?tenant=atmosphere-dev",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"self",
								"{{user}}"
							],
							"query": [
								{
									"key": "tenant",
									"value": "atmosphere-dev"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET the list of users to be enabled",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/v1/users?filter={\"status\":\"awaiting\"}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"users"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"status\":\"awaiting\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT to accept the new user (to be done by admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"enabled\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/users/{{user}}/status",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"users",
								"{{user}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as the new registered user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"token\", JSON.parse(responseBody).token);",
									"postman.setEnvironmentVariable(\"user_id\", JSON.parse(responseBody).user._id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"username_test\",\n\t\"password\" : \"password_test\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a request to reset password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\" : \"{{email}}\"\n}\t"
						},
						"url": {
							"raw": "{{url}}/v1/self/reset?tenant=atmosphere-dev",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"self",
								"reset"
							],
							"query": [
								{
									"key": "tenant",
									"value": "atmosphere-dev"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET to modify user password (needs the reset request information provided by email)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/self?reset=5ea16a736caa124854c74c73&password=my_new_password&?tenant=atmosphere-dev",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"self"
							],
							"query": [
								{
									"key": "reset",
									"value": "5ea16a736caa124854c74c73"
								},
								{
									"key": "password",
									"value": "my_new_password"
								},
								{
									"key": "?tenant",
									"value": "atmosphere-dev"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN using the new password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"token\", JSON.parse(responseBody).token);",
									"postman.setEnvironmentVariable(\"user_id\", JSON.parse(responseBody).user._id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"username_test\",\n\t\"password\" : \"my_new_password\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "STREAM",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"provider\", JSON.parse(responseBody)._id);",
									"pm.environment.set(\"provider_username\", JSON.parse(responseBody).username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": " {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"provider-useranme-stream\",\n\t\"password\" : \"provider-password-stream\",\n\t\"type\" : \"provider\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new analyst",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"analyst\", JSON.parse(responseBody)._id);",
									"pm.environment.set(\"analyst_username\", JSON.parse(responseBody).username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": " {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"analyst-useranme-stream\",\n\t\"password\" : \"analyst-password-stream\",\n\t\"type\" : \"analyst\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new feature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"feature\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"stream-data\",\n    \"items\": [\n    \t{\n        \t\"name\": \"valus\",\n            \"unit\": \"unit\",\n            \"type\": \"number\",\n            \"dimension\": 0\n        }\n    ]\n}\n"
						},
						"url": {
							"raw": "{{url}}/v1/features",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new device",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"device\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"_id\": \"streamer\",\r\n    \"features\": [ \"stream-data\" ]\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/devices/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"devices",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new thing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"thing\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"_id\": \"streamed-thing\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/things/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"things",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"provider-username-stream\",\n\t\"password\" : \"provider-password-stream\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new measurement",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var current_timestamp = new Date();",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());",
									"postman.setEnvironmentVariable(\"value\", Math.floor(Math.random() * 10));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"startDate\": \"{{current_timestamp}}\",\r\n\t\"endDate\": \"{{current_timestamp}}\",\r\n\t\"thing\": \"streamed-thing\",\r\n\t\"feature\": \"stream-data\",\r\n\t\"device\": \"streamer\",\r\n\t\"samples\": [ { \"values\": [{{value}}] }]\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as analyst",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"provider-username-stream\",\n\t\"password\" : \"provider-password-stream\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the stream of measurement of a thing",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/v1/stream?thing={{thing}}&token={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"stream"
							],
							"query": [
								{
									"key": "thing",
									"value": "{{thing}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SUBSCRIPTIONS",
			"item": [
				{
					"name": "LOGIN as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"provider\", JSON.parse(responseBody)._id);",
									"pm.environment.set(\"provider_username\", JSON.parse(responseBody).username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": " {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"provider-useranme-subscription\",\n\t\"password\" : \"provider-password-subscription\",\n\t\"type\" : \"provider\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new feature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"feature\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"subscription-data\",\n    \"items\": [\n    \t{\n        \t\"name\": \"valus\",\n            \"unit\": \"unit\",\n            \"type\": \"number\",\n            \"dimension\": 0\n        }\n    ]\n}\n"
						},
						"url": {
							"raw": "{{url}}/v1/features",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new device",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"device\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"_id\": \"subscription-device\",\r\n    \"features\": [ \"subscription-data\" ]\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/devices/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"devices",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new thing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"thing\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"_id\": \"subscription-thing\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/things/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"things",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"thing\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"token\": \"fzXeIMCtk48:APA91bEDsNOrL2qfA_TK9lDsg0iCc4cb4AG5GfYGJfRjt4n0htJq-2byRf9-eoULMViG_NMk09_dMyoN6VTFr3SsW3Z8R8NDBHtL6E8__VNV1ZFVfXf2Mp886GVy3S4jREmwVhS0sOQR\",\r\n  \"thing\": \"subscription-thing\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/subscriptions/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"subscriptions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"provider-username-subscription\",\n\t\"password\" : \"provider-password-subscription\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new measurement",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var current_timestamp = new Date();",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());",
									"postman.setEnvironmentVariable(\"value\", Math.floor(Math.random() * 10));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"startDate\": \"{{current_timestamp}}\",\r\n\t\"endDate\": \"{{current_timestamp}}\",\r\n\t\"thing\": \"subscription-thing\",\r\n\t\"feature\": \"subscription-data\",\r\n\t\"device\": \"subscription-device\",\r\n\t\"samples\": [ { \"values\": [{{value}}] }]\r\n}\r\n"
						},
						"url": {
							"raw": "{{url}}/v1/measurements",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "MULTI-TENANCY",
			"item": [
				{
					"name": "POST tenant-1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"tenant\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "ifhidhfudshuf8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_id\": \"tenant-1\",\r\n    \"database\": \"measurify-database-tenant-1\",\r\n    \"organization\": \"Measurify org\",\r\n    \"address\": \"Measurify Street, Genova\",\r\n    \"email\": \"info@measurify.org\",\r\n    \"phone\": \"+39103218793817\",\r\n    \"admin_username\": \"test-username-1\",\r\n    \"admin_password\": \"test-password-1\",\r\n    \"passwordhash\" : \"false\"\r\n}\t"
						},
						"url": {
							"raw": "{{url}}/v1/tenants/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tenants",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST tenant-2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"tenant\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "ifhidhfudshuf8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_id\": \"tenant-2\",\r\n    \"organization\": \"Measurify org\",\r\n    \"address\": \"Measurify Street, Genova\",\r\n    \"email\": \"info@measurify.org\",\r\n    \"phone\": \"+39103218793817\",\r\n    \"admin_username\": \"test-username-2\",\r\n    \"admin_password\": \"test-password-2\",\r\n    \"passwordhash\" : \"true\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/tenants/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tenants",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as admin of tenant-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"test-username-1\",\n\t\"password\" : \"test-password-1\",\n\t\"tenant\": \"tenant-1\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN as admin of tenant-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", JSON.parse(responseBody).token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"test-username-2\",\n\t\"password\" : \"test-password-2\",\n\t\"tenant\": \"tenant-2\"\n}"
						},
						"url": {
							"raw": "{{url}}/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT a tenant (the one loggend in)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"tenant\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "ifhidhfudshuf8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"organization\": \"Measurify org 2\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/tenants/{{tenant}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tenants",
								"{{tenant}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE a tenant",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "ifhidhfudshuf8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/v1/tenants/{{tenant}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tenants",
								"{{tenant}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST a new thing (on the tenant loggen in)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"thing\", JSON.parse(responseBody)._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"_id\": \"car-test\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/v1/things/",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"things",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all things (of the tenant logged in)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"if(data.docs) pm.environment.set('thing', data.docs[0]._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/v1/things",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"things"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}